var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */

var GameConfig = function () {
    function GameConfig() {
        _classCallCheck(this, GameConfig);
    }

    _createClass(GameConfig, null, [{
        key: "init",
        value: function init() {
            //注册Script或者Runtime引用
            var reg = Laya.ClassUtils.regClass;
        }
    }]);

    return GameConfig;
}();

exports.default = GameConfig;

GameConfig.width = 640;
GameConfig.height = 1136;
GameConfig.scaleMode = "fixedwidth";
GameConfig.screenMode = "none";
GameConfig.alignV = "top";
GameConfig.alignH = "left";
GameConfig.startScene = "";
GameConfig.sceneRoot = "";
GameConfig.debug = false;
GameConfig.stat = false;
GameConfig.physicsDebug = false;
GameConfig.exportSceneToJson = true;

GameConfig.init();

},{}],2:[function(require,module,exports){
'use strict';

var _drawPlace = require('./draw/drawPlace');

var _drawPlace2 = _interopRequireDefault(_drawPlace);

var _drawHome = require('./draw/drawHome');

var _drawHome2 = _interopRequireDefault(_drawHome);

var _GameConfig = require('./GameConfig');

var _GameConfig2 = _interopRequireDefault(_GameConfig);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(function () {
    var Sprite = Laya.Sprite;
    var Stage = Laya.Stage;
    var Texture = Laya.Texture;
    var Browser = Laya.Browser;
    var Handler = Laya.Handler;
    var WebGL = Laya.WebGL;
    var Event = Laya.Event;
    var Loader = Laya.Loader;
    var SoundManager = Laya.SoundManager;

    // var pageWidth  = Browser.clientWidth;
    // var pageHeight = Browser.clientHeight;
    var pageWidth = 750;
    var pageHeight = 1334;
    var loadBG, loadTiao;

    (function () {
        // 不支持WebGL时自动切换至Canvas
        Laya.init(pageWidth, pageHeight, WebGL);
        //性能统计面板的调用
        // Laya.Stat.show(0,0);
        Laya.stage.alignV = Stage.ALIGN_MIDDLE;
        Laya.stage.alignH = Stage.ALIGN_CENTER;
        Laya.stage.screenAdaptationEnabled = true;
        Laya.stage.scaleMode = "fixedwidth";
        Laya.stage.bgColor = "#4c58ae";
        downLoadMedia();

        // 创建一个发布订阅模式
        function Observer2() {
            //创建观察者数组
            this.observerList = [];
        }
        Observer2.prototype.on = function (key, obj) {
            if (!this.observerList[key]) {
                this.observerList[key] = [];
            }
            //将observerpush进对应的key内存中
            this.observerList[key].push(obj);
        };
        Observer2.prototype.emit = function () {
            var _arguments = arguments;

            //获取key值
            var oKey = Array.prototype.shift.apply(arguments);
            // 遍历数组所有的观察者并执行操作
            this.observerList[oKey].forEach(function (obj) {
                obj[0].apply(obj[1], _arguments);
            });
        };
        window.$ob = new Observer2();
    })();

    // 加载文件以及滚动条
    function downLoadMedia() {
        console.log(_GameConfig2.default.host);
        //加载静态文件资源
        var assets = [];
        // 添加字体 
        var fontNames = ['DIN.ttf', 'SFC.otf'];
        fontNames.map(function (item) {
            assets.push({
                url: 'font/' + item
            });
        });

        // 加载images下的文件
        var imgNames = ['item-0-active.png', 'item-0.png', 'item-1-active.png', 'alert_fail_bg.png', 'sence-0_bg.png', 'item-1-lock.png', 'item-1.png', 'refresh_btn.png', 'return_btn.png', "card-0-bg.png", 'alert_fail_mask.png', 'card-bg.png', 'logo_title.png', 'home_bg.png', 'card-bg-lock.png', 'home_right.png', 'home_right_more.png', 'home_left.png', 'home_left_more.png', 'next_btn.png', 'item-enter.png'];
        imgNames.map(function (item) {
            assets.push({
                url: 'assets/images/' + item,
                type: Loader.IMAGE // type类型一定要加！！
            });
        });

        // 添加音效
        var soundNames = ['shua.mp3', 'dong.mp3', "zhuanchang.mp3", "dao.mp3", "dianzi.mp3", "load.mp3", "output.mp3", 'win.mp3'];
        soundNames.map(function (item) {
            assets.push({
                url: 'assets/music/' + item,
                type: Loader.SOUND
            });
        });

        // console.log(assets)
        //加载
        Laya.loader.load(assets, Handler.create(this, init), Handler.create(this, onLoading, null, false), Loader.TEXT);
        // 侦听加载失败
        Laya.loader.on(Event.ERROR, this, onError);

        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //绘制进度条
        loadBG = new Sprite();
        Laya.stage.addChild(loadBG);
        var path = [["moveTo", 8, 0], //画笔的起始点，
        ["arcTo", 0, 0, 0, 8, 8], //p1（500,0）为夹角B，（500,30）为端点p2
        ["arcTo", 0, 16, 8, 16, 8], ["lineTo", 200, 16], ["arcTo", 208, 16, 208, 8, 8], ["arcTo", 208, 0, 200, 0, 8], ["lineTo", 8, 0]];
        //绘制圆角矩形
        loadBG.graphics.drawPath((pageWidth - 208) / 2, Math.round(pageHeight / 2.5) - 10, path, { fillStyle: "#cbefff" });
        loadTiao = new Sprite();
        Laya.stage.addChild(loadTiao);
        var path = [["moveTo", 4, 0], //画笔的起始点，
        ["arcTo", 0, 0, 0, 4, 4], //p1（500,0）为夹角B，（500,30）为端点p2
        ["arcTo", 0, 8, 4, 8, 4], ["lineTo", 4, 8], ["arcTo", 8, 8, 8, 4, 4], ["arcTo", 8, 0, 4, 0, 4], ["lineTo", 4, 0]];
        loadTiao.graphics.drawPath((pageWidth - 208) / 2 + 4, Math.round(pageHeight / 2.5) - 6, path, { fillStyle: "#4892b3" });
    }

    //加载静态资源完成，开始初始化游戏
    function init() {
        clearLoading();
        console.log('初始化游戏');
        // console.log(DrawGame);
        // new DrawGame();
        new _drawHome2.default();
    }

    // 加载进度侦听器
    function onLoading(progress) {
        progress = Math.round(progress * 100);
        //console.log("加载进度: " + progress);
        // loadTiao.graphics.clear();
        var OnePercent = (192 - 4) / 100; //每百分之一进度的距离
        var addPercent = Math.round(progress * OnePercent); //需要增加的百分比
        var path = [["moveTo", 4, 0], //画笔的起始点，
        ["arcTo", 0, 0, 0, 4, 4], //p1（500,0）为夹角B，（500,30）为端点p2
        ["arcTo", 0, 8, 4, 8, 4], ["lineTo", 192, 8], ["arcTo", 200, 8, 200, 4, 4], ["arcTo", 200, 0, 192, 0, 4], ["lineTo", 4, 0]];
        var path = [["moveTo", 4, 0], //画笔的起始点，
        ["arcTo", 0, 0, 0, 4, 4], //p1（500,0）为夹角B，（500,30）为端点p2
        ["arcTo", 0, 8, 4, 8, 4], ["lineTo", 4 + addPercent, 8], ["arcTo", 8 + addPercent, 8, 8 + addPercent, 4, 4], ["arcTo", 8 + addPercent, 0, 4 + addPercent, 0, 4], ["lineTo", 4, 0]];
        loadTiao.graphics.drawPath((pageWidth - 208) / 2 + 4, Math.round(pageHeight / 2.5) - 6, path, { fillStyle: "#4892b3" });
    }

    // 清除滚动条
    function clearLoading() {
        loadTiao.graphics.clear();
        loadBG.graphics.clear();
    }

    //打印加载失败日志
    function onError(err) {
        console.log("加载失败: " + err);
    }
})();

},{"./GameConfig":1,"./draw/drawHome":3,"./draw/drawPlace":5}],3:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // 主页相关逻辑以及总入口


var _graphics = require("../lib/graphics");

var _graphics2 = _interopRequireDefault(_graphics);

var _GameConfig = require("../GameConfig");

var _GameConfig2 = _interopRequireDefault(_GameConfig);

var _gameData = require("../lib/gameData");

var _drawPlace = require("./drawPlace");

var _drawPlace2 = _interopRequireDefault(_drawPlace);

var _drawStartSence = require("./drawStartSence");

var _drawStartSence2 = _interopRequireDefault(_drawStartSence);

var _drawNumPass = require("./drawNumPass");

var _drawNumPass2 = _interopRequireDefault(_drawNumPass);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Sprite = Laya.Sprite;
var Stage = Laya.Stage;
var Browser = Laya.Browser;
var Handler = Laya.Handler;
var WebGL = Laya.WebGL;
var Event = Laya.Event;
var Loader = Laya.Loader;
var Tween = Laya.Tween;
var Ease = Laya.Ease;
var SoundManager = Laya.SoundManager;
var Text = Laya.Text;
var GlowFilter = Laya.GlowFilter;
var TimeLine = Laya.TimeLine;

var DrawHome = function () {
    function DrawHome() {
        _classCallCheck(this, DrawHome);

        this.realLevel = "";
        this.gameLevel = "";
        this.GAME = "";
        this.StartSence = "";
        this.isHome = true;

        // 绘制有关的属性
        this.game_bg = "";
        this.title = "";
        this.card_bg = "";
        this.num = "";
        this.card_bg_next = "";
        this.num_next = "";
        this.card_bg_top = "";
        this.num_top = "";

        this.left = "";
        this.right = "";
        this.left_more = "";
        this.right_more = "";
        this.level_text = "";
        this.progress_bg = "";
        this.progress_active = "";

        // 动画
        this.timeLine = "";
        this.timeLine2 = "";
        this.changeCard_timeline = "";
        this.changeNum_timeline = "";

        this.isAnimating = false;
        this.isgaming = false;

        // 运行
        Laya.stage.bgColor = "#ded6df";
        this.init();
    }

    _createClass(DrawHome, [{
        key: "init",
        value: function init() {
            if (!Laya.LocalStorage.getItem("realLevel")) {
                Laya.LocalStorage.setItem("realLevel", -1);
                this.realLevel = 0;
            } else {
                this.realLevel = Number(Laya.LocalStorage.getItem("realLevel"));
            }

            this.drawBg();
            this.drawCard();
            this.drawBottomBtn();
            this.drawTopProgress();
            $ob.on('nextGame', [this.goNextGame, this]);
            // $ob.on('nextGame', [this.goNextGame, this]);
            $ob.on('returnHome', [this.returnHome, this]);

            this.initAnimate();
            SoundManager.autoStopMusic = false;
            SoundManager.setMusicVolume(1);
        }
        /**
         * 加载动画
         */

    }, {
        key: "initAnimate",
        value: function initAnimate() {}

        /**
         * 绘制画布
         */

        // 绘制背景

    }, {
        key: "drawBg",
        value: function drawBg() {
            this.game_bg = new Laya.Sprite();
            this.game_bg.size(750, Browser.height);
            Laya.stage.addChild(this.game_bg);
            this.game_bg.loadImage('assets/images/home_bg.png');
            // 绘制标题
        }
        // 绘制中心卡片

    }, {
        key: "drawCard",
        value: function drawCard(next_url, text, color) {
            if (!this.card_bg) {
                // 绘制背景
                this.card_bg = new Laya.Sprite();
                this.card_bg.size(615, 817);
                this.card_bg.zOrder = 1;
                Laya.stage.addChild(this.card_bg);
                var url = "assets/images/card-bg.png";
                if (this.realLevel < 0) {
                    url = "assets/images/card-0-bg.png";
                }
                this.card_bg.loadImage(url);
                this.card_bg.on(Event.CLICK, this, this.startGame);
                // 卡片放大缩小动画 
                this.timeLine = new TimeLine();
                this.timeLine.addLabel("big", 0).to(this.card_bg, { scaleX: 1.07, scaleY: 1.05 }, 1500, null, 0).addLabel("small", 0).to(this.card_bg, { scaleX: 1, scaleY: 1 }, 1500, null, 0);
                this.timeLine.play(0, true);
            } else {
                this.card_bg.loadImage(next_url);
            }
            this.card_bg.pos(375, 540);
            this.card_bg.pivot(307, 408);
            this.card_bg.rotation = 0;

            if (!this.num) {
                // 绘制文字
                this.num = new Text();
                this.num.color = "#f9dfc7";
                this.num.font = "din";
                this.num.bold = true;
                this.num.fontSize = 170;
                this.num.width = 590;

                this.num.align = "center";
                this.num.alpha = 0.8;
                this.num.zOrder = 1;
                var glowFilter = new GlowFilter("#e5dac3", 13, 0, 0);
                //设置滤镜集合为发光滤镜
                this.num.filters = [glowFilter];
                Laya.stage.addChild(this.num);
                this.gameLevel = this.gameLevel == '' ? this.realLevel + 1 : this.gameLevel;
                this.num.text = _gameData.gameData[this.gameLevel].num;
                // 动画
                // 卡片文字放大缩小动画 
                this.timeLine2 = new TimeLine();
                this.timeLine2.addLabel("big", 0).to(this.num, { scaleX: 1.07, scaleY: 1.05 }, 1500, null, 0).addLabel("small", 0).to(this.num, { scaleX: 1, scaleY: 1 }, 1500, null, 0);
                this.timeLine2.play(0, true);
            } else {
                this.num.color = color;
                this.num.text = text;
            }
            this.num.pivot(245, 0);
            this.num.x = 325;
            this.num.y = 640;
            this.num.rotation = 0;
        }
        // 绘制底部的卡片

    }, {
        key: "drawNextCard",
        value: function drawNextCard(card_url, text, color, isUp) {
            var symbol = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : -1;

            // 绘制背景
            if (!this.card_bg_next) {
                this.card_bg_next = new Laya.Sprite();
                this.card_bg_next.size(615, 817);
                this.card_bg_next.pos(375, 540);
                this.card_bg_next.pivot(307, 408);
                Laya.stage.addChild(this.card_bg_next);
            }
            this.card_bg_next.loadImage(card_url);
            this.card_bg_next.alpha = 1;
            this.card_bg_next.zOrder = 0;
            if (!isUp) {
                this.card_bg_next.rotation = 50 * symbol;
                this.card_bg_next.x = 307 + 800 * symbol;
                this.card_bg_next.zOrder = 2;
            }

            // 绘制文字
            if (!this.num_next) {
                this.num_next = new Text();
                this.num_next.font = "din";
                this.num_next.bold = true;
                this.num_next.fontSize = 170;
                this.num_next.width = 590;
                this.num_next.pivot(245, 0);
                this.num_next.x = 325;
                this.num_next.y = 640;
                this.num_next.align = "center";
                this.num_next.alpha = 0.8;
                var glowFilter = new GlowFilter("#e5dac3", 13, 0, 0);
                //设置滤镜集合为发光滤镜
                this.num_next.filters = [glowFilter];
                Laya.stage.addChild(this.num_next);
            }
            this.num_next.text = text;
            this.num_next.color = color;
            this.num_next.alpha = 1;
            this.num_next.zOrder = 0;
            if (!isUp) {
                this.num_next.x = 325 + 800 * symbol;
                this.num_next.rotation = 50 * symbol;
                this.num_next.zOrder = 2;
            }
        }
        // 绘制顶部进度条

    }, {
        key: "drawTopProgress",
        value: function drawTopProgress() {
            this.progress_bg = new Sprite();
            this.progress_bg.graphics.drawRect(0, 0, 750, 30, '#a984ec');
            this.progress_bg.alpha = 0.5;
            Laya.stage.addChild(this.progress_bg);

            this.level_text = new Text();
            this.level_text.color = "ddc8fe";
            this.level_text.font = "din";
            this.level_text.fontSize = 40;
            this.level_text.width = 750;
            this.level_text.x = 0;
            this.level_text.y = 80;
            this.level_text.align = "center";
            this.level_text.text = "- " + (this.gameLevel + 1) + " / " + _gameData.gameData.length + " -";
            Laya.stage.addChild(this.level_text);
        }
        //绘制底部按钮

    }, {
        key: "drawBottomBtn",
        value: function drawBottomBtn() {
            this.left_more = new Sprite();
            Laya.stage.addChild(this.left_more);
            this.left_more.loadImage('assets/images/home_left_more.png');
            this.left_more.size(122, 91);
            this.left_more.pos(94, 975);
            this.left_more.on(Event.CLICK, this, this.changeLevel);

            this.left = new Sprite();
            Laya.stage.addChild(this.left);
            this.left.loadImage('assets/images/home_left.png');
            this.left.size(122, 91);
            this.left.pos(241, 975);
            this.left.name = "left";
            this.left.on(Event.CLICK, this, this.changeLevel);

            this.right = new Sprite();
            Laya.stage.addChild(this.right);
            this.right.loadImage('assets/images/home_right.png');
            this.right.size(122, 91);
            this.right.pos(388, 975);
            this.right.on(Event.CLICK, this, this.changeLevel);

            this.right_more = new Sprite();
            Laya.stage.addChild(this.right_more);
            this.right_more.loadImage('assets/images/home_right_more.png');
            this.right_more.size(122, 91);
            this.right_more.pos(535, 975);
            this.right_more.on(Event.CLICK, this, this.changeLevel);
        }
        /**
         * 逻辑处理
         */
        // 进入关卡

    }, {
        key: "startGame",
        value: function startGame(params) {
            console.log(this.isHome);
            if (!this.isHome) {
                return;
            }
            console.log('ok');
            if (this.gameLevel > this.realLevel + 1) return;
            console.log('ok');
            SoundManager.playSound("assets/music/dong.mp3", 1, null, null, 13);
            if (this.gameLevel == 0) {
                // 0关 初始场景
                this.StartSence ? this.StartSence.showStartSence() : this.StartSence = new _drawStartSence2.default();
            } else if (this.gameLevel == _gameData.gameData.length - 1) {
                // 1关 结束场景
            } else {
                // 正常关卡
                Laya.LocalStorage.setItem('gameLevel', this.gameLevel);

                if (this.GAME) {
                    // this.GAME.startGame()
                    this.GAME.init();
                } else {
                    this.GAME = new _drawPlace2.default();
                }
            }
            this.isHome = false;
        }
        // 切换关卡

    }, {
        key: "changeLevel",
        value: function changeLevel(e) {
            var _this = this;

            if (this.isAnimating) return;
            var isUp = true; //是否是向下滑卡片？
            // 修改关卡
            var x = Laya.stage.mouseX;
            console.log(x);
            if (x < 240) {
                if (this.gameLevel - 10 < 0) return;
                this.gameLevel = this.gameLevel - 10;
                isUp = false;
            } else if (x < 380) {
                if (this.gameLevel - 1 < 0) return;
                this.gameLevel--;
                isUp = false;
            } else if (x < 530) {
                if (this.gameLevel + 1 >= _gameData.gameData.length) return;
                this.gameLevel++;
            } else {
                if (this.gameLevel + 10 >= _gameData.gameData.length) return;
                this.gameLevel = this.gameLevel + 10;
            }

            // 绘制底下的卡片
            var next_url = "",
                color = "",
                text = "";

            if (this.gameLevel - 1 > this.realLevel) {
                next_url = "assets/images/card-bg-lock.png";
                color = '#514682';
                this.timeLine.pause();
                this.timeLine2.pause();
            } else {
                if (this.gameLevel == 0) {
                    next_url = "assets/images/card-0-bg.png";
                } else {
                    next_url = "assets/images/card-bg.png";
                }
                color = "#f9dfc7";
                this.timeLine.play(0, true);
                this.timeLine2.play(0, true);
            }
            text = _gameData.gameData[this.gameLevel].num;

            // 变换效果
            // 卡片切换时的动效
            var symbol = this.gameLevel % 2 == 0 ? -1 : 1;

            this.drawNextCard(next_url, text, color, isUp, symbol);
            if (isUp) {
                this.changeCard_timeline = new TimeLine();
                this.changeCard_timeline.addLabel("big", 0).to(this.card_bg, { scaleX: 1.06, scaleY: 1.05, rotation: 10 * symbol, x: 390 }, 200, null, 0).addLabel("small", 0).to(this.card_bg, { scaleX: 1, scaleY: 1, rotation: -50 * symbol, x: 307 - 800 * symbol }, 300, null, 0);
                // 卡片切换时文字动效
                this.changeNum_timeline = new TimeLine();
                this.changeNum_timeline.addLabel("big", 0).to(this.num, { scaleX: 1.06, scaleY: 1.05, rotation: 10 * symbol, x: 340 }, 200, null, 0).addLabel("small", 0).to(this.num, { scaleX: 1, scaleY: 1, rotation: -50 * symbol, x: 325 - 800 * symbol }, 300, null, 0);
            } else {
                this.changeCard_timeline = new TimeLine();
                this.changeCard_timeline.addLabel("big", 0).to(this.card_bg_next, { scaleX: 1.06, scaleY: 1.05, rotation: -10 * symbol, x: 375 }, 300, null, 0).addLabel("big", 0).to(this.card_bg_next, { scaleX: 1, scaleY: 1, rotation: 0, x: 375 }, 200, null, 0);
                // 卡片切换时文字动效
                this.changeNum_timeline = new TimeLine();
                this.changeNum_timeline.addLabel("big", 0).to(this.num_next, { scaleX: 1.06, scaleY: 1.05, rotation: -10 * symbol, x: 325 }, 300, null, 0).addLabel("big", 0).to(this.num_next, { scaleX: 1, scaleY: 1, rotation: 0, x: 325 }, 200, null, 0);
            }

            this.changeCard_timeline.play(0, false);
            this.changeNum_timeline.play(0, false);
            this.isAnimating = true;

            SoundManager.playSound("assets/music/shua.mp3", 1, null, null, 13);

            setTimeout(function () {
                _this.level_text.text = "- " + (_this.gameLevel + 1) + " / " + _gameData.gameData.length + " -";
                _this.changeCard_timeline.pause();
                _this.changeNum_timeline.pause();
                _this.num_next.alpha = 0;
                _this.card_bg_next.alpha = 0;
                _this.num.zOrder = 1;
                _this.card_bg.zOrder = 1;
                _this.drawCard(next_url, text, color);
                _this.isAnimating = false;
            }, 600);
        }

        // 回到首页进入下一关

    }, {
        key: "goNextGame",
        value: function goNextGame(isNext) {
            var _this2 = this;

            this.isHome = true;
            // debugger
            if (this.gameLevel + 1 >= _gameData.gameData.length) return;
            this.realLevel = Number(Laya.LocalStorage.getItem('realLevel'));
            // 说明是刚解锁新的关卡需要一个转换的动画
            if (isNext) {
                this.gameLevel++;
                // 创建卡片飞出去的效果
                var symbol = this.gameLevel % 2 == 0 ? 1 : -1;
                this.changeCard_timeline = new TimeLine();
                this.changeCard_timeline.addLabel("big", 0).to(this.card_bg, { scaleX: 1.06, scaleY: 1.05, rotation: 10 * symbol, x: 390 }, 100, null, 0).addLabel("small", 0).to(this.card_bg, { scaleX: 1, scaleY: 1, rotation: -50 * symbol, x: 307 - 1000 * symbol }, 200, null, 0);
                // 卡片切换时文字动效
                this.changeNum_timeline = new TimeLine();
                this.changeNum_timeline.addLabel("big", 0).to(this.num, { scaleX: 1.06, scaleY: 1.05, rotation: 10 * symbol, x: 340 }, 100, null, 0).addLabel("small", 0).to(this.num, { scaleX: 1, scaleY: 1, rotation: -50 * symbol, x: 325 - 1000 * symbol }, 200, null, 0);
                //绘制下一关的卡片 
                this.drawNextCard('assets/images/card-bg-lock.png', _gameData.gameData[this.gameLevel].num, '#514682', symbol);
                // SoundManager.playSound("assets/music/zhuanchang.mp3", 1, null, null, 13);
                setTimeout(function () {
                    _this2.changeCard_timeline.play(0, false);
                    _this2.changeNum_timeline.play(0, false);
                    _this2.isAnimating = true;
                    SoundManager.playSound("assets/music/shua.mp3", 1, null, null, 13);
                }, 500);
                // 动画渐变

                var showWinCardLine = new TimeLine();
                var showWinNumLine = new TimeLine();
                showWinCardLine.addLabel('show', 0).to(this.card_bg, { alpha: 1 }, 500, null, 0);
                showWinNumLine.addLabel('show', 0).to(this.num, { alpha: 1 }, 500, null, 0);

                setTimeout(function () {
                    SoundManager.playSound("assets/music/dianzi.mp3", 1, null, null, 13);
                }, 1700);

                setTimeout(function () {
                    _this2.drawCard('assets/images/card-bg.png', _gameData.gameData[_this2.gameLevel].num, '#f9dfc7');
                    _this2.card_bg.alpha = 0;
                    _this2.num.alpha = 0;
                    _this2.num.zOrder = 1;
                    _this2.card_bg.zOrder = 1;
                    showWinNumLine.play(0, false);
                    showWinCardLine.play(0, false);
                }, 2000);

                setTimeout(function () {
                    // 这里缺一个进度条前进
                    _this2.level_text.text = "- " + (_this2.gameLevel + 1) + " / " + _gameData.gameData.length + " -";
                    _this2.num_next.alpha = 0;
                    _this2.card_bg_next.alpha = 0;
                    _this2.isAnimating = false;
                }, 3000);
            } else {
                // this.card_bg.loadImage( 'assets/images/card-bg.png')
                this.num.alpha = 1;
                this.timeLine.play(0, true);
                this.timeLine2.play(0, true);
            }
        }
    }, {
        key: "returnHome",
        value: function returnHome() {
            this.isHome = true;
            SoundManager.playSound("assets/music/dong.mp3", 1, null, null, 13);
            // debugger
        }
    }]);

    return DrawHome;
}();

exports.default = DrawHome;

},{"../GameConfig":1,"../lib/gameData":7,"../lib/graphics":8,"./drawNumPass":4,"./drawPlace":5,"./drawStartSence":6}],4:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // 绘制关卡开始的过场动画
// 主页相关逻辑以及总入口


var _graphics = require("../lib/graphics");

var _graphics2 = _interopRequireDefault(_graphics);

var _GameConfig = require("../GameConfig");

var _GameConfig2 = _interopRequireDefault(_GameConfig);

var _gameData = require("../lib/gameData");

var _drawPlace = require("./drawPlace");

var _drawPlace2 = _interopRequireDefault(_drawPlace);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Sprite = Laya.Sprite;
var Stage = Laya.Stage;
var Browser = Laya.Browser;
var Handler = Laya.Handler;
var WebGL = Laya.WebGL;
var Event = Laya.Event;
var Loader = Laya.Loader;
var Tween = Laya.Tween;
var Ease = Laya.Ease;
var SoundManager = Laya.SoundManager;
var Text = Laya.Text;
var GlowFilter = Laya.GlowFilter;
var TimeLine = Laya.TimeLine;

var DrawHome = function () {
    function DrawHome() {
        _classCallCheck(this, DrawHome);

        // sprite
        this.bg = "";
        this.init();
    }

    _createClass(DrawHome, [{
        key: "init",
        value: function init() {
            this.drawBackground();
        }

        /**
         * 绘制画布
         */

        //绘制背景

    }, {
        key: "drawBackground",
        value: function drawBackground() {
            console.log('ok');
            this.bg = new Sprite();
            this.bg.size(750, Browser.height);
            this.bg.alpha = 0;
            this.bg.zOrder = 2;
            Laya.stage.addChild(this.bg);
            this.bg.graphics.drawRect(0, 0, 750, Browser.height, '#aaa');
            var timeLine = new TimeLine();
            timeLine.addLabel("big", 0).to(this.bg, { alpha: 1 }, 1000, null, 0);
            timeLine.play(0);
        }
        // 绘制关卡的小数

    }, {
        key: "drawLevelText",
        value: function drawLevelText() {}

        /**
         * 逻辑处理
         */

    }]);

    return DrawHome;
}();

exports.default = DrawHome;

},{"../GameConfig":1,"../lib/gameData":7,"../lib/graphics":8,"./drawPlace":5}],5:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // 创建主游戏场景


var _graphics = require("../lib/graphics");

var _graphics2 = _interopRequireDefault(_graphics);

var _GameConfig = require("../GameConfig");

var _GameConfig2 = _interopRequireDefault(_GameConfig);

var _gameData = require("../lib/gameData");

var _drawHome = require("./drawHome");

var _drawHome2 = _interopRequireDefault(_drawHome);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

console.log(_GameConfig2.default);

var Sprite = Laya.Sprite;
var Stage = Laya.Stage;
var Browser = Laya.Browser;
var Handler = Laya.Handler;
var WebGL = Laya.WebGL;
var Event = Laya.Event;
var Loader = Laya.Loader;
var Tween = Laya.Tween;
var Ease = Laya.Ease;
var Text = Laya.Text;
var SoundManager = Laya.SoundManager;
var TimeLine = Laya.TimeLine;

var DrawGame = function () {
    function DrawGame() {
        _classCallCheck(this, DrawGame);

        // 绘图相关的属性
        this.x = 40;
        this.y = 250;
        this.col = 3;
        this.row = 3;
        this.gab = 20;
        this.tWidth = 750 - 2 * this.x; //桌面宽度
        this.iWidth = (this.tWidth - (this.row + 1) * this.gab) / this.row; //单个的高度
        this.tHeight = this.iWidth * this.col + (this.col + 1) * this.gab;
        this.itemsSprite = []; //存放宫格的Sprite
        // 画布
        this.game_bg = "";
        this.table_bg = "";
        // this.topSp = ""
        this.refreshSp = "";
        this.returnSp = "";
        // this.numScreenSp = ""
        this.failBgSp = "";
        this.failMaskSp = "";
        this.failRefresh = "";
        this.failReturn = "";
        this.slideBlock = "";
        this.numText = "";
        this.tipText = "";

        // 游戏数据
        this.level = "";
        this.numData = "";
        this.arr = []; //宫格的实时数据
        this.pNow = [0, 0];
        this.frontPostion = [];
        this.isGaming = false;

        // 游戏交互
        this.startP = [];

        // 动画
        this.topTextLine = "";
        this.tipTextLine = "";
        this.winLine = "";
        this.winMoveLine = "";

        // 运行
        this.init();
    }
    // 首次注册


    _createClass(DrawGame, [{
        key: "init",
        value: function init() {
            // console.log('执行init');
            this.drawPlace();
            this.refreshTable();
            // this.drawTopButton();
            this.drawTableBg();
            this.startGame();
        }

        // 开启游戏

    }, {
        key: "startGame",
        value: function startGame() {
            var _this = this;

            // 
            // 
            // this.topSp.zOrder = 4;

            // 缓动动画
            Tween.from(this.game_bg, { alpha: 0 }, 500).to(this.game_bg, { alpha: 1 }, 500);
            // 开启比赛
            // this.refreshTable();
            for (var i = 0; i < this.col; i++) {
                this.itemsSprite[i] = [];
                for (var j = 0; j < this.row; j++) {
                    // 创建宫格舞台
                    this.itemsSprite[i][j] = new Sprite();
                    if (!this.itemsSprite) this.itemsSprite[i][j] = new Sprite();
                    Laya.stage.addChild(this.itemsSprite[i][j]);
                    this.itemsSprite[i][j].zOrder = 4;
                }
            }
            SoundManager.playSound("assets/music/load.mp3", 1, null, null, 5000);
            this.drawTipText();

            this.aniSplit = 2000 / this.row / this.col;

            setTimeout(function () {
                _this.drawTable(true, true, true);
            }, 1500);

            // 4500ms 后转码完成
            setTimeout(function () {
                _this.tipText.text = "   转码完成！";
                var timeLine = new TimeLine();
                _this.topTextLine.destroy();
                _this.numText.alpha = 1;
                _this.drawTopButton();
            }, 3500);
        }

        /**
         * 绘制画布
         */

        // 画背景图

    }, {
        key: "drawPlace",
        value: function drawPlace() {
            // 画游戏的背景布
            this.game_bg = new Laya.Sprite();
            this.game_bg.size(750, Browser.height);
            Laya.stage.addChild(this.game_bg);
            this.game_bg.loadImage('assets/images/game_bg1.png');
            this.game_bg.alpha = 0;
            this.game_bg.zOrder = 2;
            //添加键盘抬起事件
            Laya.stage.on(Event.KEY_UP, this, this.onKeyUp);
        }
        // 画背景色

    }, {
        key: "drawTableBg",
        value: function drawTableBg() {
            // 画中心的方块组背景
            this.table_bg = new Laya.Sprite();
            this.table_bg.size(this.tWidth, this.tHeight * 2); //一定要设置size才能监控事件 
            Laya.stage.addChild(this.table_bg);
            this.table_bg.alpha = 0.2;
            this.table_bg.zOrder = 3;
            this.table_bg.on(Event.MOUSE_DOWN, this, this.onMouseDown);
            this.table_bg.on(Event.MOUSE_UP, this, this.onMouseUp);
            _graphics2.default.drawRoundedRectangle(this.table_bg, this.x, this.y, this.tWidth, this.tHeight, this.gab, '#2f0048');
        }
        // 画顶部按钮

    }, {
        key: "drawTopButton",
        value: function drawTopButton() {
            // this.topSp = new Sprite();
            // Laya.stage.addChild(this.topSp);
            // this.topSp.graphics.drawRect(0, 0, 142, 106, "#4d2f8a");
            // 绘制刷新按钮
            this.refreshSp = new Sprite();
            Laya.stage.addChild(this.refreshSp);
            this.refresh;
            this.refreshSp.loadImage('assets/images/refresh_btn.png');
            this.refreshSp.pos(578, 30);
            this.refreshSp.size(142, 106);
            this.refreshSp.on('click', this, this.refresh);
            this.refreshSp.alpha = 0;
            this.refreshSp.zOrder = 4;

            // 动画
            var timeLine = new TimeLine();
            timeLine.addLabel("move", 0).to(this.refreshSp, { alpha: 1 }, 500, null, 0);
            timeLine.play(0, false);

            // 绘制返回按钮
            this.returnSp = new Sprite();
            Laya.stage.addChild(this.returnSp);
            this.returnSp.loadImage('assets/images/return_btn.png');
            this.returnSp.pos(30, 30);
            this.returnSp.size(142, 106);

            this.returnSp.alpha = 0;
            this.returnSp.zOrder = 4;
            this.returnSp.on('click', this, this.returnHome);
            // 动画
            var timeLine2 = new TimeLine();
            timeLine2.addLabel("move", 0).to(this.returnSp, { alpha: 1 }, 500, null, 0);
            timeLine2.play(0, false);
        }
        // 画宫格

    }, {
        key: "drawTable",
        value: function drawTable() {
            var first = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

            var _this2 = this;

            var showAnimate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var callback = arguments[2];

            // 如果是第一次画宫格
            if (first) {
                for (var i = 0; i < this.col; i++) {
                    for (var j = 0; j < this.row; j++) {
                        var x = this.x + j * (this.iWidth + this.gab) + this.gab,
                            y = this.y + i * (this.iWidth + this.gab) + this.gab;
                        this.drawItemBlock(i, j);
                        this.itemsSprite[i][j].pos(x + this.iWidth * 0.5, y + this.iWidth * 0.5);
                        this.itemsSprite[i][j].size(this.iWidth, this.iWidth);
                        // 动画
                        this.itemsSprite[i][j].alpha = 0;
                        Tween.from(this.itemsSprite[i][j], {
                            // y:10
                            scaleY: 0,
                            scaleX: 0,
                            pivotX: this.iWidth * 0.5,
                            pivotY: this.iWidth * 0.5,
                            alpha: 0
                        }, showAnimate ? 100 : 250, Ease.circInOut, null, showAnimate ? i * this.aniSplit * this.row + j * this.aniSplit : 500);
                        Tween.to(this.itemsSprite[i][j], {
                            scaleY: 1,
                            scaleX: 1,
                            pivotX: this.iWidth * 0.5,
                            pivotY: this.iWidth * 0.5,
                            alpha: 1
                        }, showAnimate ? 100 : 250, Ease.circInOut, null, showAnimate ? i * this.aniSplit * this.row + j * this.aniSplit : 500);
                    }
                }
                if (showAnimate) {
                    // 播放音效
                    var _i = 1;
                    SoundManager.playSound("assets/music/output.mp3", 1, null, null, 0);
                    var soundInterval = setInterval(function () {
                        _i++;
                        if (_i >= _this2.col * _this2.row) clearInterval(soundInterval);
                        SoundManager.playSound("assets/music/output.mp3", 1, null, null, 0);
                    }, this.aniSplit);
                } else {
                    SoundManager.playSound("assets/music/load.mp3", 1, null, null, 5000);
                }
                if (callback) {
                    setTimeout(function () {
                        _this2.drawTable(true, false);
                        _this2.isGaming = true;
                    }, 2300);
                }
            } else {
                // 移动滑块
                if (!this.slideBlock) {
                    this.slideBlock = new Sprite();
                    Laya.stage.addChild(this.slideBlock);
                    this.slideBlock.zOrder = 4;
                    this.slideBlock.loadImage('assets/images/item-1-active.png');
                    this.slideBlock.size(this.iWidth, this.iWidth);
                }
                var toX = this.x + this.pNow[0] * (this.iWidth + this.gab) + this.gab,
                    toY = this.y + this.pNow[1] * (this.iWidth + this.gab) + this.gab;
                var fromX = this.x + this.frontPostion[0] * (this.iWidth + this.gab) + this.gab,
                    fromY = this.y + this.frontPostion[1] * (this.iWidth + this.gab) + this.gab;
                this.slideBlock.pos(fromX, fromY);
                this.slideBlock.alpha = 0.5;
                var timeLine2 = new TimeLine();
                timeLine2.addLabel("move", 0).to(this.slideBlock, { x: toX, y: toY }, 100, null, 0).addLabel("move", 0).to(this.slideBlock, { x: toX, y: toY, alpha: 0 }, 100, null, 0);
                timeLine2.play(0, false);

                var scaleSp = this.itemsSprite[this.pNow[1]][this.pNow[0]];
                var timeLine = new TimeLine();
                timeLine.addLabel("move", 0).to(scaleSp, { scaleX: 1.07, scaleY: 1.07 }, 100, null, 0).addLabel("move", 0).to(scaleSp, { scaleX: 1, scaleY: 1 }, 100, null, 0);
                timeLine.play(0, false);

                this.drawItemBlock(this.pNow[1], this.pNow[0]);
                this.drawItemBlock(this.frontPostion[1], this.frontPostion[0]);
            }
            // 格式化棋盘数据
            Tween.clearAll(this.itemsSprite);

            setTimeout(function () {
                _this2.judgeSuccess();
            }, 100);
        }
        // 根据坐标绘制相应的色块

    }, {
        key: "drawItemBlock",
        value: function drawItemBlock(i, j) {
            var url = void 0;
            if (j == this.pNow[0] && i == this.pNow[1]) {
                url = this.arr[i][j].num == '0' ? 'assets/images/item-0-active.png' : 'assets/images/item-1-active.png';
            } else if (this.arr[i][j].isUsed) {
                url = 'assets/images/item-1-lock.png';
            } else {
                url = this.arr[i][j].num == '0' ? 'assets/images/item-0.png' : 'assets/images/item-1.png';
            }
            this.itemsSprite[i][j].graphics.clear();
            this.itemsSprite[i][j].loadImage(url);
        }
        // 画顶部提示

    }, {
        key: "drawTipText",
        value: function drawTipText() {
            this.numText = new Text();
            Laya.stage.addChild(this.numText);
            this.numText.text = _gameData.gameData[this.level].num;
            this.numText.font = "din";
            this.numText.bold = true;
            this.numText.fontSize = 120;
            this.numText.width = 750;
            this.numText.zOrder = 4;
            this.numText.color = "#fde5cd";
            // this.numText.pivot(245, 0);
            this.numText.align = "center";
            this.numText.y = 48;
            this.numText.x = 0;
            this.numText.alpha = 0;
            this.topTextLine = new TimeLine();

            this.topTextLine.addLabel("move", 0).to(this.numText, { alpha: 1 }, 500, null, 0).addLabel("move1", 0).to(this.numText, { alpha: 0.2 }, 500, null, 0);
            this.topTextLine.play(0, true);

            this.tipText = new Text();
            Laya.stage.addChild(this.tipText);
            this.tipText.text = "二进制转码中...";
            this.tipText.font = "din";
            this.tipText.bold = true;
            this.tipText.fontSize = 40;
            this.tipText.width = 750;
            this.tipText.zOrder = 4;
            this.tipText.color = "#fde5cd";
            // this.tipText.pivot(245, 0);
            this.tipText.align = "center";
            this.tipText.y = 180;
            this.tipText.x = 0;
            this.tipText.alpha = 0;
            this.tipTextLine = new TimeLine();
            this.tipTextLine.addLabel("move", 0).to(this.tipText, { alpha: 0.8 }, 500, null, 1000);
            this.tipTextLine.play(0, false);
        }

        /**
         * 键盘事件
         */

    }, {
        key: "onKeyUp",
        value: function onKeyUp(e) {
            // delete keyDownList[e["keyCode"]];
            var direction = "";
            switch (e.keyCode) {
                case 37:
                    direction = 'left';break;
                case 38:
                    direction = 'top';break;
                case 39:
                    direction = 'right';break;
                case 40:
                    direction = 'down';break;
            }
            console.log('direction is ' + direction);
            if (direction) this.moveBlock(direction);
        }

        /**
         * 手机滑动事件
         */

    }, {
        key: "onMouseDown",
        value: function onMouseDown(params) {
            this.startP = [Laya.stage.mouseX, Laya.stage.mouseY];
        }
    }, {
        key: "onMouseUp",
        value: function onMouseUp() {
            var endP = [Laya.stage.mouseX, Laya.stage.mouseY];
            var direction = "";
            var moveX = endP[0] - this.startP[0];
            var moveY = endP[1] - this.startP[1];
            if (Math.abs(moveX) > Math.abs(moveY)) {
                if (Math.abs(moveX) > 80) direction = moveX > 0 ? 'right' : 'left';
            } else {
                if (Math.abs(moveY) > 80) direction = moveY > 0 ? 'down' : 'top';
            }
            // console.log(direction, moveX, moveY)
            if (direction) this.moveBlock(direction);
        }
        /**
         * 逻辑处理
         */

        // 格式化棋盘

    }, {
        key: "refreshTable",
        value: function refreshTable() {
            console.log('执行了！！！');
            this.pNow = [0, 0];
            this.level = Laya.LocalStorage.getItem('gameLevel');
            // console.log(this.level)
            this.numData = (0, _gameData.getNum)(this.level).items;
            this.col = (0, _gameData.getNum)(this.level).col;
            this.row = (0, _gameData.getNum)(this.level).row;
            this.gab = 20 + (4 - this.row) * 5;
            this.tWidth = 750 - 2 * this.x; //桌面宽度
            this.iWidth = (this.tWidth - (this.row + 1) * this.gab) / this.row; //单个的高度
            this.tHeight = this.iWidth * this.col - 1 + (this.col + 1) * this.gab;
            this.arr = [];
            for (var i = 0; i < this.col; i++) {
                this.arr[i] = [];
                for (var j = 0; j < this.row; j++) {
                    this.arr[i][j] = this.numData[i * this.row + j];
                }
            }
        }
    }, {
        key: "moveBlock",
        value: function moveBlock(direction) {
            if (!this.isGaming) return;

            var b = this.pNow[0],
                a = this.pNow[1];

            // this.arr[a][b] = this.arr[a][b] == "1" ? "0" : "1";
            if (direction == "down") {
                if (this.pNow[1] >= this.col - 1) {
                    return;
                }
                this.pNow[1]++;
            } else if (direction == "top") {
                if (this.pNow[1] <= 0) {
                    return;
                }
                this.pNow[1]--;
            } else if (direction == "right") {
                if (this.pNow[0] >= this.row - 1) {
                    return;
                }
                this.pNow[0]++;
            } else if (direction == "left") {
                if (this.pNow[0] <= 0) {
                    return;
                }
                this.pNow[0]--;
            }

            var j = this.pNow[0],
                i = this.pNow[1];
            if (this.arr[i][j].isUsed) {
                this.pNow[0] = b;
                this.pNow[1] = a;
                return;
            }
            this.frontPostion[0] = b;
            this.frontPostion[1] = a;

            this.arr[i][j].num = this.arr[i][j].num == "1" ? "0" : "1";
            this.arr[i][j].isUsed = this.arr[i][j].num == "1" ? true : false;

            this.drawTable();
            // 播放滑动音效
            SoundManager.setSoundVolume(0.5);
            SoundManager.playSound("assets/music/dong.mp3", 1, null, null, 0);
        }
        // 判断是否失败以及成功

    }, {
        key: "judgeSuccess",
        value: function judgeSuccess() {
            var _this3 = this;

            // 判断是否赢了的逻辑
            var isWin = this.arr.every(function (items) {
                return items.every(function (item) {
                    return item.num == '1';
                });
            });
            console.log(this.arr);
            if (isWin) {
                SoundManager.playSound("assets/music/win.mp3", 1, null, null, 5000);
                setTimeout(function () {
                    _this3.showWin();
                }, 500);
            } else {
                // 验证是否失败
                var j = this.pNow[0],
                    i = this.pNow[1];
                if (i + 1 < this.col && !this.arr[i + 1][j].isUsed || j + 1 < this.row && !this.arr[i][j + 1].isUsed || i - 1 >= 0 && !this.arr[i - 1][j].isUsed || j - 1 >= 0 && !this.arr[i][j - 1].isUsed) {
                    return;
                } else {
                    this.showFail();
                }
            }
        }
        // 重置游戏

    }, {
        key: "refresh",
        value: function refresh(isFirst) {
            this.closeAlert();
            this.refreshTable();
            this.drawTable(true, null);
        }
        // 返回 Home

    }, {
        key: "returnHome",
        value: function returnHome() {
            $ob.emit('returnHome');
            this.clearPlaceAll();
            // new DrawHome()
        }
        // 清除所有画布的东西

    }, {
        key: "clearPlaceAll",
        value: function clearPlaceAll(iswin) {
            console.log('执行');
            console.log(this.winLine);
            // 清除动画

            if (iswin) {
                this.winLine.pause();
                this.winLine.destroy();
                // this.winMoveLine.destroy();
            }
            // 清除画布
            this.clearSp(this.game_bg);
            this.clearSp(this.table_bg, 0.5);
            // this.topSp.destroy();
            this.clearSp(this.refreshSp);
            this.clearSp(this.returnSp);
            this.clearSp(this.tipText);
            this.clearSp(this.numText);

            this.clearSp(this.slideBlock, 0.2);

            this.clearSp(this.failBgSp);
            this.clearSp(this.failMaskSp);
            this.clearSp(this.failRefresh);
            this.clearSp(this.failReturn);
            // debugger
            for (var i = 0; i < this.col; i++) {
                for (var j = 0; j < this.row; j++) {
                    this.clearSp(this.itemsSprite[i][j], 0);
                }
            }
            // debugger
            this.slideBlock = "";
            // 事件监听失效
            this.isGaming = false;
        }
        // 封装clear的事件

    }, {
        key: "clearSp",
        value: function clearSp(sp) {
            var alpha = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;

            // console.log(sp);
            if (!sp) return;
            Tween.from(sp, { alpha: alpha }, 500).to(sp, { alpha: 0 }, 500);
            setTimeout(function () {
                sp.destroy();
            }, 1500);
        }
        // 输了的逻辑

    }, {
        key: "showFail",
        value: function showFail() {
            SoundManager.playSound("assets/music/win.mp3", 1, null, null, 13);

            this.failMaskSp = new Sprite();
            this.failMaskSp.size(750, Browser.height);
            this.failMaskSp.loadImage('assets/images/alert_fail_mask.png');
            Laya.stage.addChild(this.failMaskSp);
            this.failMaskSp.zOrder = 5;
            this.failMaskSp.alpha = 0;
            Tween.to(this.failMaskSp, {
                alpha: 1
            }, 250, Ease.linearIn, null, 200);

            // 画卡片背景
            this.failBgSp = new Sprite();
            this.failBgSp.size(655, 558);
            Laya.stage.addChild(this.failBgSp);
            this.failBgSp.loadImage('assets/images/alert_fail_bg.png');
            this.failBgSp.pos(50, -550);
            this.failBgSp.zOrder = 6;
            this.failBgSp.alpha = 1;
            // 进入动画
            Tween.to(this.failBgSp, {
                y: 250,
                alpha: 1
            }, 550, Ease.bounceOut, null, 200);

            // 画返回按钮
            this.failReturn = new Sprite();
            this.failReturn.size(170, 126);
            Laya.stage.addChild(this.failReturn);
            this.failReturn.loadImage('assets/images/return_btn.png');
            this.failReturn.on('click', this, this.returnHome);
            this.failReturn.pos(900, 480);
            this.failReturn.zOrder = 7;
            this.failReturn.alpha = 1;

            Tween.to(this.failReturn, {
                x: 500
            }, 550, Ease.bounceOut, null, 200);
            // 画重新按钮
            this.failRefresh = new Sprite();
            this.failRefresh.size(170, 126);
            Laya.stage.addChild(this.failRefresh);
            this.failRefresh.loadImage('assets/images/refresh_btn.png');
            this.failRefresh.on('click', this, this.refresh);
            this.failRefresh.pos(900, 650);
            this.failRefresh.zOrder = 7;
            this.failRefresh.alpha = 1;
            Tween.to(this.failRefresh, {
                x: 500
            }, 550, Ease.strongIn, null, 100);
        }
        // 赢了的逻辑

    }, {
        key: "showWin",
        value: function showWin() {
            console.log(this.pNow);
            this.tipText.text = "  TO ONE ！";
            // let x = this.pNow[x]
            var moveX = this.x + this.pNow[0] * (this.iWidth + this.gab) + this.gab,
                moveY = this.y + this.pNow[1] * (this.iWidth + this.gab) + this.gab;
            console.log(moveX, moveY);
            for (var i = 0; i < this.col; i++) {
                for (var j = 0; j < this.row; j++) {
                    if (this.pNow[0] == j && this.pNow[1] == i) {
                        this.itemsSprite[i][j].on(Event.CLICK, this, this.clickToNext);
                        this.itemsSprite[i][j].loadImage('assets/images/item-enter.png');
                        this.itemsSprite[i][j].zOrder = 6;
                        this.winLine = new TimeLine();
                        this.winLine.addLabel('big', 0).to(this.itemsSprite[i][j], { scaleX: 1.1, scaleY: 1.1 }, 300, null, 300).addLabel('big', 0).to(this.itemsSprite[i][j], { scaleX: 1, scaleY: 1 }, 300, null, 300);
                        this.winLine.play(0, true);

                        this.clearSp(this.returnSp);
                        this.clearSp(this.refreshSp);
                        this.clearSp(this.table_bg, 0.5);
                    } else {
                        // this.winMoveLine = new TimeLine()
                        // this.winMoveLine
                        //     .addLabel('big', 0)
                        //     .to(this.itemsSprite[i][j], {
                        //         pivotX: this.iWidth * 0.5,
                        //         pivotY: this.iWidth * 0.5,
                        //         x: moveX + this.iWidth * 0.5,
                        //         y: moveY + this.iWidth * 0.5,
                        //         alpha: 0,
                        //     }, 200, null, 300)
                        // this.winMoveLine.play(0, false);
                        Tween.to(this.itemsSprite[i][j], {
                            pivotX: this.iWidth * 0.5,
                            pivotY: this.iWidth * 0.5,
                            x: moveX + this.iWidth * 0.5,
                            y: moveY + this.iWidth * 0.5,
                            alpha: 0
                        }, 500);
                    }
                }
            }
        }
        // 点击进入下一关

    }, {
        key: "clickToNext",
        value: function clickToNext() {
            var _this4 = this;

            setTimeout(function () {
                _this4.clearPlaceAll(true);
            }, 500);

            // 如果不是玩的以前的关卡
            if (this.level - 1 == Laya.LocalStorage.getItem('realLevel')) {
                Laya.LocalStorage.setItem('realLevel', this.level++);
                $ob.emit('nextGame', true);
            } else {
                $ob.emit('nextGame', false);
            }
        }
        //关闭弹窗

    }, {
        key: "closeAlert",
        value: function closeAlert() {
            if (this.failBgSp) {
                this.failBgSp.destroy();
                this.failMaskSp.destroy();
                this.failRefresh.destroy();
                this.failReturn.destroy();
            }
        }
    }]);

    return DrawGame;
}();

exports.default = DrawGame;

},{"../GameConfig":1,"../lib/gameData":7,"../lib/graphics":8,"./drawHome":3}],6:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // 主页相关逻辑以及总入口


var _graphics = require("../lib/graphics");

var _graphics2 = _interopRequireDefault(_graphics);

var _GameConfig = require("../GameConfig");

var _GameConfig2 = _interopRequireDefault(_GameConfig);

var _gameData = require("../lib/gameData");

var _drawPlace = require("./drawPlace");

var _drawPlace2 = _interopRequireDefault(_drawPlace);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Sprite = Laya.Sprite;
var Stage = Laya.Stage;
var Browser = Laya.Browser;
var Handler = Laya.Handler;
var WebGL = Laya.WebGL;
var Event = Laya.Event;
var Loader = Laya.Loader;
var Tween = Laya.Tween;
var Ease = Laya.Ease;
var SoundManager = Laya.SoundManager;
var Text = Laya.Text;
var GlowFilter = Laya.GlowFilter;
var TimeLine = Laya.TimeLine;

var DrawHome = function () {
    function DrawHome() {
        _classCallCheck(this, DrawHome);

        // sprite
        this.sence_bg = "";
        this.first_text = "";
        this.next_btn = "";

        this.textArr = ["十八世纪\n德国数理大师莱布尼兹发现了二进制", "这个由0和1组成的数字电路\n打开了一个奇幻而精分的世界", "由于特殊的算法\n在这个二进制世界里", "一个简单的小数会被编译成无限的0和1", "而这些无限的0和1\n就是你要面临的每重关卡", "记住,你要不留余力的把数字变成1", "究竟谁？\n才是主宰数字的主人", "FROM ZERO", "TO ONE"];
        this.isShowing = false;

        this.init();
    }

    _createClass(DrawHome, [{
        key: "init",
        value: function init() {
            // Laya.LocalStorage.setItem("item", str);
            this.showStartSence();
            // Laya.LocalStorage.setItem("realLevel", 0.02);
        }

        /**
         * 绘制画布
         */

        // 绘制背景

    }, {
        key: "drawBg",
        value: function drawBg() {
            var _this = this;

            // 开始的场景
            this.sence_bg = new Laya.Sprite();
            this.sence_bg.size(750, Browser.height);
            Laya.stage.addChild(this.sence_bg);
            this.sence_bg.loadImage('assets/images/sence-0_bg.png');
            this.sence_bg.alpha = 0;
            Tween.to(this.sence_bg, {
                alpha: 1
            }, 500, Ease.linearIn, null, 200);
            // 文字的动画过场
            this.drawText(this.textArr[0]);
            var i = 1;
            var textInterval = setInterval(function () {
                console.log(i);
                _this.drawText(_this.textArr[i], i);
                i++;
                if (i > _this.textArr.length - 1) clearInterval(textInterval);
            }, 5000);
        }
        // 绘制顶部文字

    }, {
        key: "drawText",
        value: function drawText(textContent, index) {
            if (!this.first_text) {
                this.first_text = new Text();
                this.first_text.color = "#fff";
                this.first_text.fontSize = 35;
                this.first_text.width = 600;
                this.first_text.align = "center";
                this.first_text.leading = 20;
                this.first_text.x = 75;
                this.first_text.y = 200;
                this.first_text.alpha = 0;
                Laya.stage.addChild(this.first_text);
            }
            this.first_text.text = textContent;
            // 如果是最后一个则不消失且显示下一步按钮
            if (index == this.textArr.length - 1) {
                var timeLine = new TimeLine();
                timeLine.addLabel("show", 0).to(this.first_text, { alpha: 1 }, 1000, null, 1000);
                timeLine.play(0, false);
                this.drawNextBtn();
            } else {
                var timeLine = new TimeLine();
                timeLine.addLabel("show", 0).to(this.first_text, { alpha: 1 }, 1000, null, 2000).addLabel("hidden", 0).to(this.first_text, { alpha: 0 }, 1000, null, 1000);
                timeLine.play(0, false);
            }
        }
        // 绘制下一部按钮

    }, {
        key: "drawNextBtn",
        value: function drawNextBtn() {
            this.next_btn = new Sprite();
            this.next_btn.pos(304, 900);
            this.next_btn.size(142, 106);
            Laya.stage.addChild(this.next_btn);
            this.next_btn.loadImage('assets/images/next_btn.png');
            this.next_btn.on(Event.CLICK, this, this.clickNext);
            this.next_btn.zOrder = 2;
            this.next_btn.alpha = 0;
            // 缓慢显示
            var timeLine = new TimeLine();
            timeLine.addLabel("show", 0).to(this.next_btn, { alpha: 1 }, 1000, null, 1000);
            timeLine.play(0, false);
        }
        // 点击进入下一关

    }, {
        key: "clickNext",
        value: function clickNext() {
            this.sence_bg.zOrder = -2;
            this.first_text.zOrder = -1;
            this.next_btn.zOrder = -1;
            this.isShowing = false;
            SoundManager.stopAllSound();
            var realLevel = Laya.LocalStorage.getItem('realLevel');
            if (realLevel == -1) {
                Laya.LocalStorage.setItem('realLevel', 0);
                $ob.emit('nextGame', true);
            } else {
                $ob.emit('nextGame');
            }
        }

        //显示0关

    }, {
        key: "showStartSence",
        value: function showStartSence() {
            if (this.isShowing) return;

            this.drawBg();
            SoundManager.setMusicVolume(0.1);
            SoundManager.playMusic("assets/music/troughts.mp3", 1, null, null, 13);
            // this.drawNextBtn()

            this.sence_bg.zOrder = 1;
            this.first_text.zOrder = 2;
            this.isShowing = true;
        }

        /**
         * 逻辑处理
         */

    }]);

    return DrawHome;
}();

exports.default = DrawHome;

},{"../GameConfig":1,"../lib/gameData":7,"../lib/graphics":8,"./drawPlace":5}],7:[function(require,module,exports){
'use strict';

var gameData = [{
    num: 0
}, {
    num: 0.02
}, {
    num: 0.08
}, {
    num: 0.1
}, {
    num: 0.13
}, {
    num: 0.17
}, {
    num: 0.2
}, {
    num: 0.21
}, {
    num: 0.233
}, {
    num: 0.27
}, {
    num: 0.3
}, {
    num: 0.33
}, {
    num: 0.38
}, {
    num: 0.44
}, {
    num: 0.46
}, {
    num: 0.48
}, {
    num: 0.49
}, {
    num: 0.52
}, {
    num: 0.6
}, {
    num: 0.61
}, {
    num: 0.62
}, {
    num: 0.66
}, {
    num: 0.666
}, {
    num: 0.7
}, {
    num: 0.77
}, {
    num: 0.81
}, {
    num: 0.83
}, {
    num: 0.88
}, {
    num: 0.892
}, {
    num: 0.9
}, {
    num: 0.91
}, {
    num: 0.92
}, {
    num: 0.95
}, {
    num: 0.99
}, {
    num: 1
}];

function getNum(level) {
    // console.log(level)
    // console.log(gameData[Number(level)])
    var num = gameData[Number(level)].num;
    var arr = toBinaryLists(num);
    arr.row = getRow(num);
    arr.col = getCol(num);
    arr.items = arr.map(function (item) {
        return {
            num: item,
            isUsed: false
        };
    });
    return arr;
}

function getRow(num) {
    if (num < 0.2) return 3;else if (num < 0.3) return 3;else if (num < 0.4) return 4;else if (num < 0.5) return 4;else if (num < 0.6) return 4;else if (num < 0.7) return 5;
    // else if (num < 0.95) return 6;
    else return 7;
}

function getCol(num) {
    if (num < 0.1) return 2;else if (num < 0.2) return 2;else if (num < 0.25) return 3;else if (num < 0.35) return 4;else if (num < 0.5) return 4;else if (num < 0.6) return 4;else if (num < 0.7) return 5;
    // else if (num < 0.95) return 7;
    else return 6;
}

function toBinaryLists(num) {
    if (typeof num != 'number') {
        num = Number(num);
    }
    var binary = num.toString(2).split('.')[1];
    return binary.split('');
}

module.exports = {
    getNum: getNum,
    // getGameData: getGameData
    gameData: gameData
};

},{}],8:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
// 封装各种形状
exports.default = {
    /**
     * @param sp Sprite实例
     * @param x 起始x坐标
     * @param y 起始y坐标
     * @param width 总长
     * @param height 总高
     * @param r 圆角半径
     * @param options 配置项
     */
    drawRoundedRectangle: function drawRoundedRectangle(sp, x, y, width, height, r, fill) {
        // console.log(width, height)
        var relWidth = width - 2 * r;
        var relHeight = height - 2 * r;
        sp.graphics.drawPath(x, y, [["moveTo", r, 0], ["lineTo", width - r, 0], ["arcTo", width, 0, width, r, r], ["lineTo", width, height - r], ["arcTo", width, height, width - r, height, r], ["lineTo", r, height], ["arcTo", 0, height, 0, height - r, r], ["lineTo", 0, r], ["arcTo", 0, 0, r, 0, r], ["closePath"]], {
            fillStyle: fill || '#ff0000'
        });
    }
};

},{}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL0FwcGxpY2F0aW9ucy9MYXlhQWlySURFX2JldGEuYXBwL0NvbnRlbnRzL1Jlc291cmNlcy9hcHAvbm9kZV9tb2R1bGVzL2Jyb3dzZXItcGFjay9fcHJlbHVkZS5qcyIsInNyYy9HYW1lQ29uZmlnLmpzIiwic3JjL01haW4uanMiLCJzcmMvZHJhdy9kcmF3SG9tZS5qcyIsInNyYy9kcmF3L2RyYXdOdW1QYXNzLmpzIiwic3JjL2RyYXcvZHJhd1BsYWNlLmpzIiwic3JjL2RyYXcvZHJhd1N0YXJ0U2VuY2UuanMiLCJzcmMvbGliL2dhbWVEYXRhLmpzIiwic3JjL2xpYi9ncmFwaGljcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7OztBQ1ZBOztJQUdxQixVOzs7Ozs7OytCQUNIO0FBQ1Y7QUFDQSxnQkFBSSxNQUFNLEtBQUssVUFBTCxDQUFnQixRQUExQjtBQUVIOzs7Ozs7a0JBTGdCLFU7O0FBT3JCLFdBQVcsS0FBWCxHQUFtQixHQUFuQjtBQUNBLFdBQVcsTUFBWCxHQUFvQixJQUFwQjtBQUNBLFdBQVcsU0FBWCxHQUFzQixZQUF0QjtBQUNBLFdBQVcsVUFBWCxHQUF3QixNQUF4QjtBQUNBLFdBQVcsTUFBWCxHQUFvQixLQUFwQjtBQUNBLFdBQVcsTUFBWCxHQUFvQixNQUFwQjtBQUNBLFdBQVcsVUFBWCxHQUF3QixFQUF4QjtBQUNBLFdBQVcsU0FBWCxHQUF1QixFQUF2QjtBQUNBLFdBQVcsS0FBWCxHQUFtQixLQUFuQjtBQUNBLFdBQVcsSUFBWCxHQUFrQixLQUFsQjtBQUNBLFdBQVcsWUFBWCxHQUEwQixLQUExQjtBQUNBLFdBQVcsaUJBQVgsR0FBK0IsSUFBL0I7O0FBRUEsV0FBVyxJQUFYOzs7OztBQ3ZCQTs7OztBQUNBOzs7O0FBQ0E7Ozs7OztBQUVBLENBQUMsWUFBWTtBQUNULFFBQUksU0FBUyxLQUFL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dGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbInZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XHJcbiAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxyXG4gICAgICAgIGZ1bmN0aW9uIChkLCBiKSB7IGZvciAodmFyIHAgaW4gYikgaWYgKGIuaGFzT3duUHJvcGVydHkocCkpIGRbcF0gPSBiW3BdOyB9O1xyXG4gICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XHJcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcclxuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cclxuICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XHJcbiAgICB9O1xyXG59KSgpO1xyXG4oZnVuY3Rpb24oKXtmdW5jdGlvbiByKGUsbix0KXtmdW5jdGlvbiBvKGksZil7aWYoIW5baV0pe2lmKCFlW2ldKXt2YXIgYz1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO2lmKCFmJiZjKXJldHVybiBjKGksITApO2lmKHUpcmV0dXJuIHUoaSwhMCk7dmFyIGE9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitpK1wiJ1wiKTt0aHJvdyBhLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsYX12YXIgcD1uW2ldPXtleHBvcnRzOnt9fTtlW2ldWzBdLmNhbGwocC5leHBvcnRzLGZ1bmN0aW9uKHIpe3ZhciBuPWVbaV1bMV1bcl07cmV0dXJuIG8obnx8cil9LHAscC5leHBvcnRzLHIsZSxuLHQpfXJldHVybiBuW2ldLmV4cG9ydHN9Zm9yKHZhciB1PVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmUsaT0wO2k8dC5sZW5ndGg7aSsrKW8odFtpXSk7cmV0dXJuIG99cmV0dXJuIHJ9KSgpIiwiLyoqVGhpcyBjbGFzcyBpcyBhdXRvbWF0aWNhbGx5IGdlbmVyYXRlZCBieSBMYXlhQWlySURFLCBwbGVhc2UgZG8gbm90IG1ha2UgYW55IG1vZGlmaWNhdGlvbnMuICovXHJcblxyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR2FtZUNvbmZpZyB7XHJcbiAgICBzdGF0aWMgaW5pdCgpIHtcclxuICAgICAgICAvL+azqOWGjFNjcmlwdOaIluiAhVJ1bnRpbWXlvJXnlKhcclxuICAgICAgICBsZXQgcmVnID0gTGF5YS5DbGFzc1V0aWxzLnJlZ0NsYXNzO1xyXG5cclxuICAgIH1cclxufVxyXG5HYW1lQ29uZmlnLndpZHRoID0gNjQwO1xyXG5HYW1lQ29uZmlnLmhlaWdodCA9IDExMzY7XHJcbkdhbWVDb25maWcuc2NhbGVNb2RlID1cImZpeGVkd2lkdGhcIjtcclxuR2FtZUNvbmZpZy5zY3JlZW5Nb2RlID0gXCJub25lXCI7XHJcbkdhbWVDb25maWcuYWxpZ25WID0gXCJ0b3BcIjtcclxuR2FtZUNvbmZpZy5hbGlnbkggPSBcImxlZnRcIjtcclxuR2FtZUNvbmZpZy5zdGFydFNjZW5lID0gXCJcIjtcclxuR2FtZUNvbmZpZy5zY2VuZVJvb3QgPSBcIlwiO1xyXG5HYW1lQ29uZmlnLmRlYnVnID0gZmFsc2U7XHJcbkdhbWVDb25maWcuc3RhdCA9IGZhbHNlO1xyXG5HYW1lQ29uZmlnLnBoeXNpY3NEZWJ1ZyA9IGZhbHNlO1xyXG5HYW1lQ29uZmlnLmV4cG9ydFNjZW5lVG9Kc29uID0gdHJ1ZTtcclxuXHJcbkdhbWVDb25maWcuaW5pdCgpO1xyXG4iLCJpbXBvcnQgRHJhd0dhbWUgZnJvbSAnLi9kcmF3L2RyYXdQbGFjZSdcclxuaW1wb3J0IERyYXdIb21lIGZyb20gJy4vZHJhdy9kcmF3SG9tZSdcclxuaW1wb3J0IEdhbWVDb25maWcgZnJvbSAnLi9HYW1lQ29uZmlnJztcclxuXHJcbihmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgU3ByaXRlID0gTGF5YS5TcHJpdGU7XHJcbiAgICB2YXIgU3RhZ2UgPSBMYXlhLlN0YWdlO1xyXG4gICAgdmFyIFRleHR1cmUgPSBMYXlhLlRleHR1cmU7XHJcbiAgICB2YXIgQnJvd3NlciA9IExheWEuQnJvd3NlcjtcclxuICAgIHZhciBIYW5kbGVyID0gTGF5YS5IYW5kbGVyO1xyXG4gICAgdmFyIFdlYkdMID0gTGF5YS5XZWJHTDtcclxuICAgIHZhciBFdmVudCA9IExheWEuRXZlbnQ7XHJcbiAgICB2YXIgTG9hZGVyID0gTGF5YS5Mb2FkZXI7XHJcbiAgICB2YXIgU291bmRNYW5hZ2VyID0gTGF5YS5Tb3VuZE1hbmFnZXI7XHJcblxyXG4gICAgLy8gdmFyIHBhZ2VXaWR0aCAgPSBCcm93c2VyLmNsaWVudFdpZHRoO1xyXG4gICAgLy8gdmFyIHBhZ2VIZWlnaHQgPSBCcm93c2VyLmNsaWVudEhlaWdodDtcclxuICAgIHZhciBwYWdlV2lkdGggPSA3NTA7XHJcbiAgICB2YXIgcGFnZUhlaWdodCA9IDEzMzQ7XHJcbiAgICB2YXIgbG9hZEJHLCBsb2FkVGlhbztcclxuXHJcbiAgICAoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIC8vIOS4jeaUr+aMgVdlYkdM5pe26Ieq5Yqo5YiH5o2i6IezQ2FudmFzXHJcbiAgICAgICAgTGF5YS5pbml0KHBhZ2VXaWR0aCwgcGFnZUhlaWdodCwgV2ViR0wpO1xyXG4gICAgICAgIC8v5oCn6IO957uf6K6h6Z2i5p2/55qE6LCD55SoXHJcbiAgICAgICAgLy8gTGF5YS5TdGF0LnNob3coMCwwKTtcclxuICAgICAgICBMYXlhLnN0YWdlLmFsaWduViA9IFN0YWdlLkFMSUdOX01JRERMRTtcclxuICAgICAgICBMYXlhLnN0YWdlLmFsaWduSCA9IFN0YWdlLkFMSUdOX0NFTlRFUjtcclxuICAgICAgICBMYXlhLnN0YWdlLnNjcmVlbkFkYXB0YXRpb25FbmFibGVkID0gdHJ1ZTtcclxuICAgICAgICBMYXlhLnN0YWdlLnNjYWxlTW9kZSA9IFwiZml4ZWR3aWR0aFwiO1xyXG4gICAgICAgIExheWEuc3RhZ2UuYmdDb2xvciA9IFwiIzRjNThhZVwiO1xyXG4gICAgICAgIGRvd25Mb2FkTWVkaWEoKVxyXG5cclxuICAgICAgICAvLyDliJvlu7rkuIDkuKrlj5HluIPorqLpmIXmqKHlvI9cclxuICAgICAgICBmdW5jdGlvbiBPYnNlcnZlcjIoKSB7XHJcbiAgICAgICAgICAgIC8v5Yib5bu66KeC5a+f6ICF5pWw57uEXHJcbiAgICAgICAgICAgIHRoaXMub2JzZXJ2ZXJMaXN0ID0gW107XHJcbiAgICAgICAgfVxyXG4gICAgICAgIE9ic2VydmVyMi5wcm90b3R5cGUub24gPSBmdW5jdGlvbiAoa2V5LCBvYmopIHtcclxuICAgICAgICAgICAgaWYgKCF0aGlzLm9ic2VydmVyTGlzdFtrZXldKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm9ic2VydmVyTGlzdFtrZXldID0gW11cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvL+Wwhm9ic2VydmVycHVzaOi/m+WvueW6lOeahGtleeWGheWtmOS4rVxyXG4gICAgICAgICAgICB0aGlzLm9ic2VydmVyTGlzdFtrZXldLnB1c2gob2JqKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgT2JzZXJ2ZXIyLnByb3RvdHlwZS5lbWl0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAvL+iOt+WPlmtleeWAvFxyXG4gICAgICAgICAgICB2YXIgb0tleSA9IEFycmF5LnByb3RvdHlwZS5zaGlmdC5hcHBseShhcmd1bWVudHMpO1xyXG4gICAgICAgICAgICAvLyDpgY3ljobmlbDnu4TmiYDmnInnmoTop4Llr5/ogIXlubbmiafooYzmk43kvZxcclxuICAgICAgICAgICAgdGhpcy5vYnNlcnZlckxpc3Rbb0tleV0uZm9yRWFjaChvYmogPT4ge1xyXG4gICAgICAgICAgICAgICAgb2JqWzBdLmFwcGx5KG9ialsxXSwgYXJndW1lbnRzKVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH1cclxuICAgICAgICB3aW5kb3cuJG9iID0gbmV3IE9ic2VydmVyMigpO1xyXG4gICAgfSkoKTtcclxuXHJcbiAgICAvLyDliqDovb3mlofku7bku6Xlj4rmu5rliqjmnaFcclxuICAgIGZ1bmN0aW9uIGRvd25Mb2FkTWVkaWEoKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coR2FtZUNvbmZpZy5ob3N0KVxyXG4gICAgICAgIC8v5Yqg6L296Z2Z5oCB5paH5Lu26LWE5rqQXHJcbiAgICAgICAgdmFyIGFzc2V0cyA9IFtdO1xyXG4gICAgICAgIC8vIOa3u+WKoOWtl+S9kyBcclxuICAgICAgICBsZXQgZm9udE5hbWVzID0gWydESU4udHRmJywgJ1NGQy5vdGYnXVxyXG4gICAgICAgIGZvbnROYW1lcy5tYXAoaXRlbSA9PiB7XHJcbiAgICAgICAgICAgIGFzc2V0cy5wdXNoKHtcclxuICAgICAgICAgICAgICAgIHVybDogJ2ZvbnQvJyArIGl0ZW1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSlcclxuXHJcbiAgICAgICAgLy8g5Yqg6L29aW1hZ2Vz5LiL55qE5paH5Lu2XHJcbiAgICAgICAgbGV0IGltZ05hbWVzID0gWydpdGVtLTAtYWN0aXZlLnBuZycsICdpdGVtLTAucG5nJywgJ2l0ZW0tMS1hY3RpdmUucG5nJywgJ2FsZXJ0X2ZhaWxfYmcucG5nJywgJ3NlbmNlLTBfYmcucG5nJyxcclxuICAgICAgICAgICAgJ2l0ZW0tMS1sb2NrLnBuZycsICdpdGVtLTEucG5nJywgJ3JlZnJlc2hfYnRuLnBuZycsICdyZXR1cm5fYnRuLnBuZycsIFwiY2FyZC0wLWJnLnBuZ1wiLCAnYWxlcnRfZmFpbF9tYXNrLnBuZycsXHJcbiAgICAgICAgICAgICAnY2FyZC1iZy5wbmcnLCAnbG9nb190aXRsZS5wbmcnLCAnaG9tZV9iZy5wbmcnLCAnY2FyZC1iZy1sb2NrLnBuZycsXHJcbiAgICAgICAgICAgICdob21lX3JpZ2h0LnBuZycsICdob21lX3JpZ2h0X21vcmUucG5nJywgJ2hvbWVfbGVmdC5wbmcnLCAnaG9tZV9sZWZ0X21vcmUucG5nJywgJ25leHRfYnRuLnBuZycsICdpdGVtLWVudGVyLnBuZydcclxuICAgICAgICBdO1xyXG4gICAgICAgIGltZ05hbWVzLm1hcChpdGVtID0+IHtcclxuICAgICAgICAgICAgYXNzZXRzLnB1c2goe1xyXG4gICAgICAgICAgICAgICAgdXJsOiAnYXNzZXRzL2ltYWdlcy8nICsgaXRlbSxcclxuICAgICAgICAgICAgICAgIHR5cGU6IExvYWRlci5JTUFHRSAgLy8gdHlwZeexu+Wei+S4gOWumuimgeWKoO+8ge+8gVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9KVxyXG5cclxuICAgICAgICAvLyDmt7vliqDpn7PmlYhcclxuICAgICAgICBsZXQgc291bmROYW1lcyA9IFsnc2h1YS5tcDMnLCAnZG9uZy5tcDMnLCBcInpodWFuY2hhbmcubXAzXCIsIFwiZGFvLm1wM1wiLCBcImRpYW56aS5tcDNcIiwgXCJsb2FkLm1wM1wiLFxyXG4gICAgICAgICAgICBcIm91dHB1dC5tcDNcIiwgJ3dpbi5tcDMnXVxyXG4gICAgICAgIHNvdW5kTmFtZXMubWFwKGl0ZW0gPT4ge1xyXG4gICAgICAgICAgICBhc3NldHMucHVzaCh7XHJcbiAgICAgICAgICAgICAgICB1cmw6ICdhc3NldHMvbXVzaWMvJyArIGl0ZW0sXHJcbiAgICAgICAgICAgICAgICB0eXBlOiBMb2FkZXIuU09VTkRcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSlcclxuXHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coYXNzZXRzKVxyXG4gICAgICAgIC8v5Yqg6L29XHJcbiAgICAgICAgTGF5YS5sb2FkZXIubG9hZChhc3NldHMsIEhhbmRsZXIuY3JlYXRlKHRoaXMsIGluaXQpLCBIYW5kbGVyLmNyZWF0ZSh0aGlzLCBvbkxvYWRpbmcsIG51bGwsIGZhbHNlKSwgTG9hZGVyLlRFWFQpO1xyXG4gICAgICAgIC8vIOS+puWQrOWKoOi9veWksei0pVxyXG4gICAgICAgIExheWEubG9hZGVyLm9uKEV2ZW50LkVSUk9SLCB0aGlzLCBvbkVycm9yKTtcclxuXHJcbiAgICAgICAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG4gICAgICAgIC8v57uY5Yi26L+b5bqm5p2hXHJcbiAgICAgICAgbG9hZEJHID0gbmV3IFNwcml0ZSgpO1xyXG4gICAgICAgIExheWEuc3RhZ2UuYWRkQ2hpbGQobG9hZEJHKTtcclxuICAgICAgICB2YXIgcGF0aCA9IFtcclxuICAgICAgICAgICAgW1wibW92ZVRvXCIsIDgsIDBdLCAvL+eUu+eslOeahOi1t+Wni+eCue+8jFxyXG4gICAgICAgICAgICBbXCJhcmNUb1wiLCAwLCAwLCAwLCA4LCA4XSwgLy9wMe+8iDUwMCww77yJ5Li65aS56KeSQu+8jO+8iDUwMCwzMO+8ieS4uuerr+eCuXAyXHJcbiAgICAgICAgICAgIFtcImFyY1RvXCIsIDAsIDE2LCA4LCAxNiwgOF0sXHJcbiAgICAgICAgICAgIFtcImxpbmVUb1wiLCAyMDAsIDE2XSxcclxuICAgICAgICAgICAgW1wiYXJjVG9cIiwgMjA4LCAxNiwgMjA4LCA4LCA4XSxcclxuICAgICAgICAgICAgW1wiYXJjVG9cIiwgMjA4LCAwLCAyMDAsIDAsIDhdLFxyXG4gICAgICAgICAgICBbXCJsaW5lVG9cIiwgOCwgMF1cclxuICAgICAgICBdO1xyXG4gICAgICAgIC8v57uY5Yi25ZyG6KeS55+p5b2iXHJcbiAgICAgICAgbG9hZEJHLmdyYXBoaWNzLmRyYXdQYXRoKChwYWdlV2lkdGggLSAyMDgpIC8gMiwgTWF0aC5yb3VuZChwYWdlSGVpZ2h0IC8gMi41KSAtIDEwLCBwYXRoLCB7IGZpbGxTdHlsZTogXCIjY2JlZmZmXCIgfSk7XHJcbiAgICAgICAgbG9hZFRpYW8gPSBuZXcgU3ByaXRlKCk7XHJcbiAgICAgICAgTGF5YS5zdGFnZS5hZGRDaGlsZChsb2FkVGlhbyk7XHJcbiAgICAgICAgdmFyIHBhdGggPSBbXHJcbiAgICAgICAgICAgIFtcIm1vdmVUb1wiLCA0LCAwXSwgLy/nlLvnrJTnmoTotbflp4vngrnvvIxcclxuICAgICAgICAgICAgW1wiYXJjVG9cIiwgMCwgMCwgMCwgNCwgNF0sIC8vcDHvvIg1MDAsMO+8ieS4uuWkueinkkLvvIzvvIg1MDAsMzDvvInkuLrnq6/ngrlwMlxyXG4gICAgICAgICAgICBbXCJhcmNUb1wiLCAwLCA4LCA0LCA4LCA0XSxcclxuICAgICAgICAgICAgW1wibGluZVRvXCIsIDQsIDhdLFxyXG4gICAgICAgICAgICBbXCJhcmNUb1wiLCA4LCA4LCA4LCA0LCA0XSxcclxuICAgICAgICAgICAgW1wiYXJjVG9cIiwgOCwgMCwgNCwgMCwgNF0sXHJcbiAgICAgICAgICAgIFtcImxpbmVUb1wiLCA0LCAwXVxyXG4gICAgICAgIF07XHJcbiAgICAgICAgbG9hZFRpYW8uZ3JhcGhpY3MuZHJhd1BhdGgoKHBhZ2VXaWR0aCAtIDIwOCkgLyAyICsgNCwgTWF0aC5yb3VuZChwYWdlSGVpZ2h0IC8gMi41KSAtIDYsIHBhdGgsIHsgZmlsbFN0eWxlOiBcIiM0ODkyYjNcIiB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvL+WKoOi9vemdmeaAgei1hOa6kOWujOaIkO+8jOW8gOWni+WIneWni+WMlua4uOaIj1xyXG4gICAgZnVuY3Rpb24gaW5pdCgpIHtcclxuICAgICAgICBjbGVhckxvYWRpbmcoKVxyXG4gICAgICAgIGNvbnNvbGUubG9nKCfliJ3lp4vljJbmuLjmiI8nKTtcclxuICAgICAgICAvLyBjb25zb2xlLmxvZyhEcmF3R2FtZSk7XHJcbiAgICAgICAgLy8gbmV3IERyYXdHYW1lKCk7XHJcbiAgICAgICAgbmV3IERyYXdIb21lKCk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8g5Yqg6L296L+b5bqm5L6m5ZCs5ZmoXHJcbiAgICBmdW5jdGlvbiBvbkxvYWRpbmcocHJvZ3Jlc3MpIHtcclxuICAgICAgICBwcm9ncmVzcyA9IE1hdGgucm91bmQocHJvZ3Jlc3MgKiAxMDApO1xyXG4gICAgICAgIC8vY29uc29sZS5sb2coXCLliqDovb3ov5vluqY6IFwiICsgcHJvZ3Jlc3MpO1xyXG4gICAgICAgIC8vIGxvYWRUaWFvLmdyYXBoaWNzLmNsZWFyKCk7XHJcbiAgICAgICAgdmFyIE9uZVBlcmNlbnQgPSAoMTkyIC0gNCkgLyAxMDA7Ly/mr4/nmb7liIbkuYvkuIDov5vluqbnmoTot53nprtcclxuICAgICAgICB2YXIgYWRkUGVyY2VudCA9IE1hdGgucm91bmQocHJvZ3Jlc3MgKiBPbmVQZXJjZW50KTsvL+mcgOimgeWinuWKoOeahOeZvuWIhuavlFxyXG4gICAgICAgIHZhciBwYXRoID0gW1xyXG4gICAgICAgICAgICBbXCJtb3ZlVG9cIiwgNCwgMF0sIC8v55S756yU55qE6LW35aeL54K577yMXHJcbiAgICAgICAgICAgIFtcImFyY1RvXCIsIDAsIDAsIDAsIDQsIDRdLCAvL3Ax77yINTAwLDDvvInkuLrlpLnop5JC77yM77yINTAwLDMw77yJ5Li656uv54K5cDJcclxuICAgICAgICAgICAgW1wiYXJjVG9cIiwgMCwgOCwgNCwgOCwgNF0sXHJcbiAgICAgICAgICAgIFtcImxpbmVUb1wiLCAxOTIsIDhdLFxyXG4gICAgICAgICAgICBbXCJhcmNUb1wiLCAyMDAsIDgsIDIwMCwgNCwgNF0sXHJcbiAgICAgICAgICAgIFtcImFyY1RvXCIsIDIwMCwgMCwgMTkyLCAwLCA0XSxcclxuICAgICAgICAgICAgW1wibGluZVRvXCIsIDQsIDBdXHJcbiAgICAgICAgXTtcclxuICAgICAgICB2YXIgcGF0aCA9IFtcclxuICAgICAgICAgICAgW1wibW92ZVRvXCIsIDQsIDBdLCAvL+eUu+eslOeahOi1t+Wni+eCue+8jFxyXG4gICAgICAgICAgICBbXCJhcmNUb1wiLCAwLCAwLCAwLCA0LCA0XSwgLy9wMe+8iDUwMCww77yJ5Li65aS56KeSQu+8jO+8iDUwMCwzMO+8ieS4uuerr+eCuXAyXHJcbiAgICAgICAgICAgIFtcImFyY1RvXCIsIDAsIDgsIDQsIDgsIDRdLFxyXG4gICAgICAgICAgICBbXCJsaW5lVG9cIiwgNCArIGFkZFBlcmNlbnQsIDhdLFxyXG4gICAgICAgICAgICBbXCJhcmNUb1wiLCA4ICsgYWRkUGVyY2VudCwgOCwgOCArIGFkZFBlcmNlbnQsIDQsIDRdLFxyXG4gICAgICAgICAgICBbXCJhcmNUb1wiLCA4ICsgYWRkUGVyY2VudCwgMCwgNCArIGFkZFBlcmNlbnQsIDAsIDRdLFxyXG4gICAgICAgICAgICBbXCJsaW5lVG9cIiwgNCwgMF1cclxuICAgICAgICBdO1xyXG4gICAgICAgIGxvYWRUaWFvLmdyYXBoaWNzLmRyYXdQYXRoKChwYWdlV2lkdGggLSAyMDgpIC8gMiArIDQsIE1hdGgucm91bmQocGFnZUhlaWdodCAvIDIuNSkgLSA2LCBwYXRoLCB7IGZpbGxTdHlsZTogXCIjNDg5MmIzXCIgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8g5riF6Zmk5rua5Yqo5p2hXHJcbiAgICBmdW5jdGlvbiBjbGVhckxvYWRpbmcoKSB7XHJcbiAgICAgICAgbG9hZFRpYW8uZ3JhcGhpY3MuY2xlYXIoKTtcclxuICAgICAgICBsb2FkQkcuZ3JhcGhpY3MuY2xlYXIoKTtcclxuICAgIH1cclxuXHJcbiAgICAvL+aJk+WNsOWKoOi9veWksei0peaXpeW/l1xyXG4gICAgZnVuY3Rpb24gb25FcnJvcihlcnIpIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhcIuWKoOi9veWksei0pTogXCIgKyBlcnIpO1xyXG4gICAgfVxyXG5cclxufSkoKTsiLCIvLyDkuLvpobXnm7jlhbPpgLvovpHku6Xlj4rmgLvlhaXlj6NcbmltcG9ydCBEUkFXIGZyb20gJy4uL2xpYi9ncmFwaGljcyc7XG5pbXBvcnQgR2FtZUNvbmZpZyBmcm9tIFwiLi4vR2FtZUNvbmZpZ1wiO1xuaW1wb3J0IHsgZ2V0TnVtLCBnYW1lRGF0YSB9IGZyb20gXCIuLi9saWIvZ2FtZURhdGFcIjtcbmltcG9ydCBEcmF3R2FtZSBmcm9tIFwiLi9kcmF3UGxhY2VcIjtcbmltcG9ydCBEcmF3U3RhcnRTZW5jZSBmcm9tICcuL2RyYXdTdGFydFNlbmNlJ1xuaW1wb3J0IERyYXdOdW1QYXNzIGZyb20gJy4vZHJhd051bVBhc3MnXG5cbnZhciBTcHJpdGUgPSBMYXlhLlNwcml0ZTtcbnZhciBTdGFnZSA9IExheWEuU3RhZ2U7XG52YXIgQnJvd3NlciA9IExheWEuQnJvd3NlcjtcbnZhciBIYW5kbGVyID0gTGF5YS5IYW5kbGVyO1xudmFyIFdlYkdMID0gTGF5YS5XZWJHTDtcbnZhciBFdmVudCA9IExheWEuRXZlbnQ7XG52YXIgTG9hZGVyID0gTGF5YS5Mb2FkZXI7XG52YXIgVHdlZW4gPSBMYXlhLlR3ZWVuO1xudmFyIEVhc2UgPSBMYXlhLkVhc2U7XG52YXIgU291bmRNYW5hZ2VyID0gTGF5YS5Tb3VuZE1hbmFnZXI7XG52YXIgVGV4dCA9IExheWEuVGV4dDtcbnZhciBHbG93RmlsdGVyID0gTGF5YS5HbG93RmlsdGVyO1xudmFyIFRpbWVMaW5lID0gTGF5YS5UaW1lTGluZTtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRHJhd0hvbWUge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLnJlYWxMZXZlbCA9IFwiXCJcbiAgICAgICAgdGhpcy5nYW1lTGV2ZWwgPSBcIlwiXG4gICAgICAgIHRoaXMuR0FNRSA9IFwiXCJcbiAgICAgICAgdGhpcy5TdGFydFNlbmNlID0gXCJcIlxuICAgICAgICB0aGlzLmlzSG9tZSA9IHRydWVcblxuICAgICAgICAvLyDnu5jliLbmnInlhbPnmoTlsZ7mgKdcbiAgICAgICAgdGhpcy5nYW1lX2JnID0gXCJcIlxuICAgICAgICB0aGlzLnRpdGxlID0gXCJcIlxuICAgICAgICB0aGlzLmNhcmRfYmcgPSBcIlwiXG4gICAgICAgIHRoaXMubnVtID0gXCJcIlxuICAgICAgICB0aGlzLmNhcmRfYmdfbmV4dCA9IFwiXCJcbiAgICAgICAgdGhpcy5udW1fbmV4dCA9IFwiXCJcbiAgICAgICAgdGhpcy5jYXJkX2JnX3RvcCA9IFwiXCJcbiAgICAgICAgdGhpcy5udW1fdG9wID0gXCJcIlxuXG4gICAgICAgIHRoaXMubGVmdCA9IFwiXCJcbiAgICAgICAgdGhpcy5yaWdodCA9IFwiXCJcbiAgICAgICAgdGhpcy5sZWZ0X21vcmUgPSBcIlwiXG4gICAgICAgIHRoaXMucmlnaHRfbW9yZSA9IFwiXCJcbiAgICAgICAgdGhpcy5sZXZlbF90ZXh0ID0gXCJcIlxuICAgICAgICB0aGlzLnByb2dyZXNzX2JnID0gXCJcIlxuICAgICAgICB0aGlzLnByb2dyZXNzX2FjdGl2ZSA9IFwiXCJcblxuICAgICAgICAvLyDliqjnlLtcbiAgICAgICAgdGhpcy50aW1lTGluZSA9IFwiXCJcbiAgICAgICAgdGhpcy50aW1lTGluZTIgPSBcIlwiXG4gICAgICAgIHRoaXMuY2hhbmdlQ2FyZF90aW1lbGluZSA9IFwiXCJcbiAgICAgICAgdGhpcy5jaGFuZ2VOdW1fdGltZWxpbmUgPSBcIlwiXG5cbiAgICAgICAgdGhpcy5pc0FuaW1hdGluZyA9IGZhbHNlO1xuICAgICAgICB0aGlzLmlzZ2FtaW5nID0gZmFsc2U7XG5cbiAgICAgICAgLy8g6L+Q6KGMXG4gICAgICAgIExheWEuc3RhZ2UuYmdDb2xvciA9IFwiI2RlZDZkZlwiXG4gICAgICAgIHRoaXMuaW5pdCgpXG4gICAgfVxuICAgIGluaXQoKSB7XG4gICAgICAgIGlmICghTGF5YS5Mb2NhbFN0b3JhZ2UuZ2V0SXRlbShcInJlYWxMZXZlbFwiKSkge1xuICAgICAgICAgICAgTGF5YS5Mb2NhbFN0b3JhZ2Uuc2V0SXRlbShcInJlYWxMZXZlbFwiLCAtMSk7XG4gICAgICAgICAgICB0aGlzLnJlYWxMZXZlbCA9IDA7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnJlYWxMZXZlbCA9IE51bWJlcihMYXlhLkxvY2FsU3RvcmFnZS5nZXRJdGVtKFwicmVhbExldmVsXCIpKVxuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5kcmF3QmcoKTtcbiAgICAgICAgdGhpcy5kcmF3Q2FyZCgpO1xuICAgICAgICB0aGlzLmRyYXdCb3R0b21CdG4oKTtcbiAgICAgICAgdGhpcy5kcmF3VG9wUHJvZ3Jlc3MoKTtcbiAgICAgICAgJG9iLm9uKCduZXh0R2FtZScsIFt0aGlzLmdvTmV4dEdhbWUsIHRoaXNdKTtcbiAgICAgICAgLy8gJG9iLm9uKCduZXh0R2FtZScsIFt0aGlzLmdvTmV4dEdhbWUsIHRoaXNdKTtcbiAgICAgICAgJG9iLm9uKCdyZXR1cm5Ib21lJywgW3RoaXMucmV0dXJuSG9tZSwgdGhpc10pO1xuXG4gICAgICAgIHRoaXMuaW5pdEFuaW1hdGUoKTtcbiAgICAgICAgU291bmRNYW5hZ2VyLmF1dG9TdG9wTXVzaWMgPSBmYWxzZTtcbiAgICAgICAgU291bmRNYW5hZ2VyLnNldE11c2ljVm9sdW1lKDEpO1xuXG4gICAgfVxuICAgIC8qKlxuICAgICAqIOWKoOi9veWKqOeUu1xuICAgICAqL1xuICAgIGluaXRBbmltYXRlKCkge1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOe7mOWItueUu+W4g1xuICAgICAqL1xuXG4gICAgLy8g57uY5Yi26IOM5pmvXG4gICAgZHJhd0JnKCkge1xuICAgICAgICB0aGlzLmdhbWVfYmcgPSBuZXcgTGF5YS5TcHJpdGUoKTtcbiAgICAgICAgdGhpcy5nYW1lX2JnLnNpemUoNzUwLCBCcm93c2VyLmhlaWdodCk7XG4gICAgICAgIExheWEuc3RhZ2UuYWRkQ2hpbGQodGhpcy5nYW1lX2JnKTtcbiAgICAgICAgdGhpcy5nYW1lX2JnLmxvYWRJbWFnZSgnYXNzZXRzL2ltYWdlcy9ob21lX2JnLnBuZycpO1xuICAgICAgICAvLyDnu5jliLbmoIfpophcbiAgICB9XG4gICAgLy8g57uY5Yi25Lit5b+D5Y2h54mHXG4gICAgZHJhd0NhcmQobmV4dF91cmwsIHRleHQsIGNvbG9yKSB7XG4gICAgICAgIGlmICghdGhpcy5jYXJkX2JnKSB7XG4gICAgICAgICAgICAvLyDnu5jliLbog4zmma9cbiAgICAgICAgICAgIHRoaXMuY2FyZF9iZyA9IG5ldyBMYXlhLlNwcml0ZSgpO1xuICAgICAgICAgICAgdGhpcy5jYXJkX2JnLnNpemUoNjE1LCA4MTcpO1xuICAgICAgICAgICAgdGhpcy5jYXJkX2JnLnpPcmRlciA9IDE7XG4gICAgICAgICAgICBMYXlhLnN0YWdlLmFkZENoaWxkKHRoaXMuY2FyZF9iZyk7XG4gICAgICAgICAgICBsZXQgdXJsID0gXCJhc3NldHMvaW1hZ2VzL2NhcmQtYmcucG5nXCI7XG4gICAgICAgICAgICBpZiAodGhpcy5yZWFsTGV2ZWwgPCAwKSB7XG4gICAgICAgICAgICAgICAgdXJsID0gXCJhc3NldHMvaW1hZ2VzL2NhcmQtMC1iZy5wbmdcIlxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5jYXJkX2JnLmxvYWRJbWFnZSh1cmwpO1xuICAgICAgICAgICAgdGhpcy5jYXJkX2JnLm9uKEV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLnN0YXJ0R2FtZSk7XG4gICAgICAgICAgICAvLyDljaHniYfmlL7lpKfnvKnlsI/liqjnlLsgXG4gICAgICAgICAgICB0aGlzLnRpbWVMaW5lID0gbmV3IFRpbWVMaW5lKCk7XG4gICAgICAgICAgICB0aGlzLnRpbWVMaW5lLmFkZExhYmVsKFwiYmlnXCIsIDApLnRvKHRoaXMuY2FyZF9iZywgeyBzY2FsZVg6IDEuMDcsIHNjYWxlWTogMS4wNSB9LCAxNTAwLCBudWxsLCAwKVxuICAgICAgICAgICAgICAgIC5hZGRMYWJlbChcInNtYWxsXCIsIDApLnRvKHRoaXMuY2FyZF9iZywgeyBzY2FsZVg6IDEsIHNjYWxlWTogMSB9LCAxNTAwLCBudWxsLCAwKTtcbiAgICAgICAgICAgIHRoaXMudGltZUxpbmUucGxheSgwLCB0cnVlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuY2FyZF9iZy5sb2FkSW1hZ2UobmV4dF91cmwpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuY2FyZF9iZy5wb3MoMzc1LCA1NDApO1xuICAgICAgICB0aGlzLmNhcmRfYmcucGl2b3QoMzA3LCA0MDgpO1xuICAgICAgICB0aGlzLmNhcmRfYmcucm90YXRpb24gPSAwO1xuXG4gICAgICAgIGlmICghdGhpcy5udW0pIHtcbiAgICAgICAgICAgIC8vIOe7mOWItuaWh+Wtl1xuICAgICAgICAgICAgdGhpcy5udW0gPSBuZXcgVGV4dCgpO1xuICAgICAgICAgICAgdGhpcy5udW0uY29sb3IgPSBcIiNmOWRmYzdcIjtcbiAgICAgICAgICAgIHRoaXMubnVtLmZvbnQgPSBcImRpblwiO1xuICAgICAgICAgICAgdGhpcy5udW0uYm9sZCA9IHRydWU7XG4gICAgICAgICAgICB0aGlzLm51bS5mb250U2l6ZSA9IDE3MDtcbiAgICAgICAgICAgIHRoaXMubnVtLndpZHRoID0gNTkwO1xuXG4gICAgICAgICAgICB0aGlzLm51bS5hbGlnbiA9IFwiY2VudGVyXCI7XG4gICAgICAgICAgICB0aGlzLm51bS5hbHBoYSA9IDAuODtcbiAgICAgICAgICAgIHRoaXMubnVtLnpPcmRlciA9IDE7XG4gICAgICAgICAgICB2YXIgZ2xvd0ZpbHRlciA9IG5ldyBHbG93RmlsdGVyKFwiI2U1ZGFjM1wiLCAxMywgMCwgMCk7XG4gICAgICAgICAgICAvL+iuvue9rua7pOmVnOmbhuWQiOS4uuWPkeWFiea7pOmVnFxuICAgICAgICAgICAgdGhpcy5udW0uZmlsdGVycyA9IFtnbG93RmlsdGVyXTtcbiAgICAgICAgICAgIExheWEuc3RhZ2UuYWRkQ2hpbGQodGhpcy5udW0pO1xuICAgICAgICAgICAgdGhpcy5nYW1lTGV2ZWwgPSB0aGlzLmdhbWVMZXZlbCA9PSAnJyA/IHRoaXMucmVhbExldmVsICsgMSA6IHRoaXMuZ2FtZUxldmVsXG4gICAgICAgICAgICB0aGlzLm51bS50ZXh0ID0gZ2FtZURhdGFbdGhpcy5nYW1lTGV2ZWxdLm51bTtcbiAgICAgICAgICAgIC8vIOWKqOeUu1xuICAgICAgICAgICAgLy8g5Y2h54mH5paH5a2X5pS+5aSn57yp5bCP5Yqo55S7IFxuICAgICAgICAgICAgdGhpcy50aW1lTGluZTIgPSBuZXcgVGltZUxpbmUoKTtcbiAgICAgICAgICAgIHRoaXMudGltZUxpbmUyLmFkZExhYmVsKFwiYmlnXCIsIDApLnRvKHRoaXMubnVtLCB7IHNjYWxlWDogMS4wNywgc2NhbGVZOiAxLjA1IH0sIDE1MDAsIG51bGwsIDApXG4gICAgICAgICAgICAgICAgLmFkZExhYmVsKFwic21hbGxcIiwgMCkudG8odGhpcy5udW0sIHsgc2NhbGVYOiAxLCBzY2FsZVk6IDEgfSwgMTUwMCwgbnVsbCwgMClcbiAgICAgICAgICAgIHRoaXMudGltZUxpbmUyLnBsYXkoMCwgdHJ1ZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLm51bS5jb2xvciA9IGNvbG9yO1xuICAgICAgICAgICAgdGhpcy5udW0udGV4dCA9IHRleHQ7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5udW0ucGl2b3QoMjQ1LCAwKTtcbiAgICAgICAgdGhpcy5udW0ueCA9IDMyNTtcbiAgICAgICAgdGhpcy5udW0ueSA9IDY0MDtcbiAgICAgICAgdGhpcy5udW0ucm90YXRpb24gPSAwO1xuXG4gICAgfVxuICAgIC8vIOe7mOWItuW6lemDqOeahOWNoeeJh1xuICAgIGRyYXdOZXh0Q2FyZChjYXJkX3VybCwgdGV4dCwgY29sb3IsIGlzVXAsIHN5bWJvbCA9IC0xKSB7XG4gICAgICAgIC8vIOe7mOWItuiDjOaZr1xuICAgICAgICBpZiAoIXRoaXMuY2FyZF9iZ19uZXh0KSB7XG4gICAgICAgICAgICB0aGlzLmNhcmRfYmdfbmV4dCA9IG5ldyBMYXlhLlNwcml0ZSgpO1xuICAgICAgICAgICAgdGhpcy5jYXJkX2JnX25leHQuc2l6ZSg2MTUsIDgxNyk7XG4gICAgICAgICAgICB0aGlzLmNhcmRfYmdfbmV4dC5wb3MoMzc1LCA1NDApO1xuICAgICAgICAgICAgdGhpcy5jYXJkX2JnX25leHQucGl2b3QoMzA3LCA0MDgpO1xuICAgICAgICAgICAgTGF5YS5zdGFnZS5hZGRDaGlsZCh0aGlzLmNhcmRfYmdfbmV4dCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5jYXJkX2JnX25leHQubG9hZEltYWdlKGNhcmRfdXJsKTtcbiAgICAgICAgdGhpcy5jYXJkX2JnX25leHQuYWxwaGEgPSAxO1xuICAgICAgICB0aGlzLmNhcmRfYmdfbmV4dC56T3JkZXIgPSAwO1xuICAgICAgICBpZiAoIWlzVXApIHtcbiAgICAgICAgICAgIHRoaXMuY2FyZF9iZ19uZXh0LnJvdGF0aW9uID0gNTAgKiBzeW1ib2w7XG4gICAgICAgICAgICB0aGlzLmNhcmRfYmdfbmV4dC54ID0gMzA3ICsgODAwICogc3ltYm9sO1xuICAgICAgICAgICAgdGhpcy5jYXJkX2JnX25leHQuek9yZGVyID0gMjtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIOe7mOWItuaWh+Wtl1xuICAgICAgICBpZiAoIXRoaXMubnVtX25leHQpIHtcbiAgICAgICAgICAgIHRoaXMubnVtX25leHQgPSBuZXcgVGV4dCgpO1xuICAgICAgICAgICAgdGhpcy5udW1fbmV4dC5mb250ID0gXCJkaW5cIjtcbiAgICAgICAgICAgIHRoaXMubnVtX25leHQuYm9sZCA9IHRydWU7XG4gICAgICAgICAgICB0aGlzLm51bV9uZXh0LmZvbnRTaXplID0gMTcwO1xuICAgICAgICAgICAgdGhpcy5udW1fbmV4dC53aWR0aCA9IDU5MDtcbiAgICAgICAgICAgIHRoaXMubnVtX25leHQucGl2b3QoMjQ1LCAwKTtcbiAgICAgICAgICAgIHRoaXMubnVtX25leHQueCA9IDMyNTtcbiAgICAgICAgICAgIHRoaXMubnVtX25leHQueSA9IDY0MDtcbiAgICAgICAgICAgIHRoaXMubnVtX25leHQuYWxpZ24gPSBcImNlbnRlclwiO1xuICAgICAgICAgICAgdGhpcy5udW1fbmV4dC5hbHBoYSA9IDAuODtcbiAgICAgICAgICAgIHZhciBnbG93RmlsdGVyID0gbmV3IEdsb3dGaWx0ZXIoXCIjZTVkYWMzXCIsIDEzLCAwLCAwKTtcbiAgICAgICAgICAgIC8v6K6+572u5ruk6ZWc6ZuG5ZCI5Li65Y+R5YWJ5ruk6ZWcXG4gICAgICAgICAgICB0aGlzLm51bV9uZXh0LmZpbHRlcnMgPSBbZ2xvd0ZpbHRlcl07XG4gICAgICAgICAgICBMYXlhLnN0YWdlLmFkZENoaWxkKHRoaXMubnVtX25leHQpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMubnVtX25leHQudGV4dCA9IHRleHQ7XG4gICAgICAgIHRoaXMubnVtX25leHQuY29sb3IgPSBjb2xvcjtcbiAgICAgICAgdGhpcy5udW1fbmV4dC5hbHBoYSA9IDE7XG4gICAgICAgIHRoaXMubnVtX25leHQuek9yZGVyID0gMDtcbiAgICAgICAgaWYgKCFpc1VwKSB7XG4gICAgICAgICAgICB0aGlzLm51bV9uZXh0LnggPSAzMjUgKyA4MDAgKiBzeW1ib2w7XG4gICAgICAgICAgICB0aGlzLm51bV9uZXh0LnJvdGF0aW9uID0gNTAgKiBzeW1ib2w7XG4gICAgICAgICAgICB0aGlzLm51bV9uZXh0LnpPcmRlciA9IDI7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy8g57uY5Yi26aG26YOo6L+b5bqm5p2hXG4gICAgZHJhd1RvcFByb2dyZXNzKCkge1xuICAgICAgICB0aGlzLnByb2dyZXNzX2JnID0gbmV3IFNwcml0ZSgpO1xuICAgICAgICB0aGlzLnByb2dyZXNzX2JnLmdyYXBoaWNzLmRyYXdSZWN0KDAsIDAsIDc1MCwgMzAsICcjYTk4NGVjJyk7XG4gICAgICAgIHRoaXMucHJvZ3Jlc3NfYmcuYWxwaGEgPSAwLjU7XG4gICAgICAgIExheWEuc3RhZ2UuYWRkQ2hpbGQodGhpcy5wcm9ncmVzc19iZyk7XG5cbiAgICAgICAgdGhpcy5sZXZlbF90ZXh0ID0gbmV3IFRleHQoKTtcbiAgICAgICAgdGhpcy5sZXZlbF90ZXh0LmNvbG9yID0gXCJkZGM4ZmVcIlxuICAgICAgICB0aGlzLmxldmVsX3RleHQuZm9udCA9IFwiZGluXCJcbiAgICAgICAgdGhpcy5sZXZlbF90ZXh0LmZvbnRTaXplID0gNDA7XG4gICAgICAgIHRoaXMubGV2ZWxfdGV4dC53aWR0aCA9IDc1MDtcbiAgICAgICAgdGhpcy5sZXZlbF90ZXh0LnggPSAwXG4gICAgICAgIHRoaXMubGV2ZWxfdGV4dC55ID0gODBcbiAgICAgICAgdGhpcy5sZXZlbF90ZXh0LmFsaWduID0gXCJjZW50ZXJcIlxuICAgICAgICB0aGlzLmxldmVsX3RleHQudGV4dCA9IGAtICR7dGhpcy5nYW1lTGV2ZWwgKyAxfSAvICR7Z2FtZURhdGEubGVuZ3RofSAtYFxuICAgICAgICBMYXlhLnN0YWdlLmFkZENoaWxkKHRoaXMubGV2ZWxfdGV4dCk7XG4gICAgfVxuICAgIC8v57uY5Yi25bqV6YOo5oyJ6ZKuXG4gICAgZHJhd0JvdHRvbUJ0bigpIHtcbiAgICAgICAgdGhpcy5sZWZ0X21vcmUgPSBuZXcgU3ByaXRlKClcbiAgICAgICAgTGF5YS5zdGFnZS5hZGRDaGlsZCh0aGlzLmxlZnRfbW9yZSk7XG4gICAgICAgIHRoaXMubGVmdF9tb3JlLmxvYWRJbWFnZSgnYXNzZXRzL2ltYWdlcy9ob21lX2xlZnRfbW9yZS5wbmcnKTtcbiAgICAgICAgdGhpcy5sZWZ0X21vcmUuc2l6ZSgxMjIsIDkxKTtcbiAgICAgICAgdGhpcy5sZWZ0X21vcmUucG9zKDk0LCA5NzUpXG4gICAgICAgIHRoaXMubGVmdF9tb3JlLm9uKEV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLmNoYW5nZUxldmVsKTtcblxuICAgICAgICB0aGlzLmxlZnQgPSBuZXcgU3ByaXRlKCk7XG4gICAgICAgIExheWEuc3RhZ2UuYWRkQ2hpbGQodGhpcy5sZWZ0KTtcbiAgICAgICAgdGhpcy5sZWZ0LmxvYWRJbWFnZSgnYXNzZXRzL2ltYWdlcy9ob21lX2xlZnQucG5nJyk7XG4gICAgICAgIHRoaXMubGVmdC5zaXplKDEyMiwgOTEpO1xuICAgICAgICB0aGlzLmxlZnQucG9zKDI0MSwgOTc1KTtcbiAgICAgICAgdGhpcy5sZWZ0Lm5hbWUgPSBcImxlZnRcIlxuICAgICAgICB0aGlzLmxlZnQub24oRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMuY2hhbmdlTGV2ZWwpO1xuXG4gICAgICAgIHRoaXMucmlnaHQgPSBuZXcgU3ByaXRlKClcbiAgICAgICAgTGF5YS5zdGFnZS5hZGRDaGlsZCh0aGlzLnJpZ2h0KTtcbiAgICAgICAgdGhpcy5yaWdodC5sb2FkSW1hZ2UoJ2Fzc2V0cy9pbWFnZXMvaG9tZV9yaWdodC5wbmcnKTtcbiAgICAgICAgdGhpcy5yaWdodC5zaXplKDEyMiwgOTEpO1xuICAgICAgICB0aGlzLnJpZ2h0LnBvcygzODgsIDk3NSk7XG4gICAgICAgIHRoaXMucmlnaHQub24oRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMuY2hhbmdlTGV2ZWwpO1xuXG4gICAgICAgIHRoaXMucmlnaHRfbW9yZSA9IG5ldyBTcHJpdGUoKVxuICAgICAgICBMYXlhLnN0YWdlLmFkZENoaWxkKHRoaXMucmlnaHRfbW9yZSk7XG4gICAgICAgIHRoaXMucmlnaHRfbW9yZS5sb2FkSW1hZ2UoJ2Fzc2V0cy9pbWFnZXMvaG9tZV9yaWdodF9tb3JlLnBuZycpO1xuICAgICAgICB0aGlzLnJpZ2h0X21vcmUuc2l6ZSgxMjIsIDkxKTtcbiAgICAgICAgdGhpcy5yaWdodF9tb3JlLnBvcyg1MzUsIDk3NSk7XG4gICAgICAgIHRoaXMucmlnaHRfbW9yZS5vbihFdmVudC5DTElDSywgdGhpcywgdGhpcy5jaGFuZ2VMZXZlbCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIOmAu+i+keWkhOeQhlxuICAgICAqL1xuICAgIC8vIOi/m+WFpeWFs+WNoVxuICAgIHN0YXJ0R2FtZShwYXJhbXMpIHtcbiAgICAgICAgY29uc29sZS5sb2codGhpcy5pc0hvbWUpXG4gICAgICAgIGlmICghdGhpcy5pc0hvbWUpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBjb25zb2xlLmxvZygnb2snKVxuICAgICAgICBpZiAodGhpcy5nYW1lTGV2ZWwgPiB0aGlzLnJlYWxMZXZlbCArIDEpIHJldHVybjtcbiAgICAgICAgY29uc29sZS5sb2coJ29rJylcbiAgICAgICAgU291bmRNYW5hZ2VyLnBsYXlTb3VuZChcImFzc2V0cy9tdXNpYy9kb25nLm1wM1wiLCAxLCBudWxsLCBudWxsLCAxMyk7XG4gICAgICAgIGlmICh0aGlzLmdhbWVMZXZlbCA9PSAwKSB7XG4gICAgICAgICAgICAvLyAw5YWzIOWIneWni+WcuuaZr1xuICAgICAgICAgICAgdGhpcy5TdGFydFNlbmNlID8gdGhpcy5TdGFydFNlbmNlLnNob3dTdGFydFNlbmNlKCkgOiB0aGlzLlN0YXJ0U2VuY2UgPSBuZXcgRHJhd1N0YXJ0U2VuY2UoKVxuICAgICAgICB9IGVsc2UgaWYgKHRoaXMuZ2FtZUxldmVsID09IGdhbWVEYXRhLmxlbmd0aCAtIDEpIHtcbiAgICAgICAgICAgIC8vIDHlhbMg57uT5p2f5Zy65pmvXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyDmraPluLjlhbPljaFcbiAgICAgICAgICAgIExheWEuTG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2dhbWVMZXZlbCcsIHRoaXMuZ2FtZUxldmVsKTtcblxuICAgICAgICAgICAgaWYgKHRoaXMuR0FNRSkge1xuICAgICAgICAgICAgICAgIC8vIHRoaXMuR0FNRS5zdGFydEdhbWUoKVxuICAgICAgICAgICAgICAgIHRoaXMuR0FNRS5pbml0KClcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5HQU1FID0gbmV3IERyYXdHYW1lKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5pc0hvbWUgPSBmYWxzZVxuICAgIH1cbiAgICAvLyDliIfmjaLlhbPljaFcbiAgICBjaGFuZ2VMZXZlbChlKSB7XG4gICAgICAgIGlmICh0aGlzLmlzQW5pbWF0aW5nKSByZXR1cm47XG4gICAgICAgIGxldCBpc1VwID0gdHJ1ZTsvL+aYr+WQpuaYr+WQkeS4i+a7keWNoeeJh++8n1xuICAgICAgICAvLyDkv67mlLnlhbPljaFcbiAgICAgICAgbGV0IHggPSBMYXlhLnN0YWdlLm1vdXNlWDtcbiAgICAgICAgY29uc29sZS5sb2coeClcbiAgICAgICAgaWYgKHggPCAyNDApIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmdhbWVMZXZlbCAtIDEwIDwgMCkgcmV0dXJuO1xuICAgICAgICAgICAgdGhpcy5nYW1lTGV2ZWwgPSB0aGlzLmdhbWVMZXZlbCAtIDEwO1xuICAgICAgICAgICAgaXNVcCA9IGZhbHNlO1xuICAgICAgICB9IGVsc2UgaWYgKHggPCAzODApIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmdhbWVMZXZlbCAtIDEgPCAwKSByZXR1cm47XG4gICAgICAgICAgICB0aGlzLmdhbWVMZXZlbC0tO1xuICAgICAgICAgICAgaXNVcCA9IGZhbHNlO1xuICAgICAgICB9IGVsc2UgaWYgKHggPCA1MzApIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmdhbWVMZXZlbCArIDEgPj0gZ2FtZURhdGEubGVuZ3RoKSByZXR1cm47XG4gICAgICAgICAgICB0aGlzLmdhbWVMZXZlbCsrO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaWYgKHRoaXMuZ2FtZUxldmVsICsgMTAgPj0gZ2FtZURhdGEubGVuZ3RoKSByZXR1cm47XG4gICAgICAgICAgICB0aGlzLmdhbWVMZXZlbCA9IHRoaXMuZ2FtZUxldmVsICsgMTA7XG4gICAgICAgIH1cblxuICAgICAgICAvLyDnu5jliLblupXkuIvnmoTljaHniYdcbiAgICAgICAgbGV0IG5leHRfdXJsID0gXCJcIiwgY29sb3IgPSBcIlwiLCB0ZXh0ID0gXCJcIjtcblxuICAgICAgICBpZiAodGhpcy5nYW1lTGV2ZWwgLSAxID4gdGhpcy5yZWFsTGV2ZWwpIHtcbiAgICAgICAgICAgIG5leHRfdXJsID0gXCJhc3NldHMvaW1hZ2VzL2NhcmQtYmctbG9jay5wbmdcIlxuICAgICAgICAgICAgY29sb3IgPSAnIzUxNDY4MidcbiAgICAgICAgICAgIHRoaXMudGltZUxpbmUucGF1c2UoKTtcbiAgICAgICAgICAgIHRoaXMudGltZUxpbmUyLnBhdXNlKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpZiAodGhpcy5nYW1lTGV2ZWwgPT0gMCkge1xuICAgICAgICAgICAgICAgIG5leHRfdXJsID0gXCJhc3NldHMvaW1hZ2VzL2NhcmQtMC1iZy5wbmdcIlxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBuZXh0X3VybCA9IFwiYXNzZXRzL2ltYWdlcy9jYXJkLWJnLnBuZ1wiXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb2xvciA9IFwiI2Y5ZGZjN1wiXG4gICAgICAgICAgICB0aGlzLnRpbWVMaW5lLnBsYXkoMCwgdHJ1ZSk7XG4gICAgICAgICAgICB0aGlzLnRpbWVMaW5lMi5wbGF5KDAsIHRydWUpO1xuICAgICAgICB9XG4gICAgICAgIHRleHQgPSBnYW1lRGF0YVt0aGlzLmdhbWVMZXZlbF0ubnVtO1xuXG4gICAgICAgIC8vIOWPmOaNouaViOaenFxuICAgICAgICAvLyDljaHniYfliIfmjaLml7bnmoTliqjmlYhcbiAgICAgICAgbGV0IHN5bWJvbCA9IHRoaXMuZ2FtZUxldmVsICUgMiA9PSAwID8gLTEgOiAxO1xuXG4gICAgICAgIHRoaXMuZHJhd05leHRDYXJkKG5leHRfdXJsLCB0ZXh0LCBjb2xvciwgaXNVcCwgc3ltYm9sKTtcbiAgICAgICAgaWYgKGlzVXApIHtcbiAgICAgICAgICAgIHRoaXMuY2hhbmdlQ2FyZF90aW1lbGluZSA9IG5ldyBUaW1lTGluZSgpO1xuICAgICAgICAgICAgdGhpcy5jaGFuZ2VDYXJkX3RpbWVsaW5lLmFkZExhYmVsKFwiYmlnXCIsIDApLnRvKHRoaXMuY2FyZF9iZywgeyBzY2FsZVg6IDEuMDYsIHNjYWxlWTogMS4wNSwgcm90YXRpb246IDEwICogc3ltYm9sLCB4OiAzOTAgfSwgMjAwLCBudWxsLCAwKVxuICAgICAgICAgICAgICAgIC5hZGRMYWJlbChcInNtYWxsXCIsIDApLnRvKHRoaXMuY2FyZF9iZywgeyBzY2FsZVg6IDEsIHNjYWxlWTogMSwgcm90YXRpb246IC01MCAqIHN5bWJvbCwgeDogMzA3IC0gODAwICogc3ltYm9sIH0sIDMwMCwgbnVsbCwgMCk7XG4gICAgICAgICAgICAvLyDljaHniYfliIfmjaLml7bmloflrZfliqjmlYhcbiAgICAgICAgICAgIHRoaXMuY2hhbmdlTnVtX3RpbWVsaW5lID0gbmV3IFRpbWVMaW5lKCk7XG4gICAgICAgICAgICB0aGlzLmNoYW5nZU51bV90aW1lbGluZS5hZGRMYWJlbChcImJpZ1wiLCAwKS50byh0aGlzLm51bSwgeyBzY2FsZVg6IDEuMDYsIHNjYWxlWTogMS4wNSwgcm90YXRpb246IDEwICogc3ltYm9sLCB4OiAzNDAgfSwgMjAwLCBudWxsLCAwKVxuICAgICAgICAgICAgICAgIC5hZGRMYWJlbChcInNtYWxsXCIsIDApLnRvKHRoaXMubnVtLCB7IHNjYWxlWDogMSwgc2NhbGVZOiAxLCByb3RhdGlvbjogLTUwICogc3ltYm9sLCB4OiAzMjUgLSA4MDAgKiBzeW1ib2wgfSwgMzAwLCBudWxsLCAwKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuY2hhbmdlQ2FyZF90aW1lbGluZSA9IG5ldyBUaW1lTGluZSgpO1xuICAgICAgICAgICAgdGhpcy5jaGFuZ2VDYXJkX3RpbWVsaW5lLmFkZExhYmVsKFwiYmlnXCIsIDApLnRvKHRoaXMuY2FyZF9iZ19uZXh0LCB7IHNjYWxlWDogMS4wNiwgc2NhbGVZOiAxLjA1LCByb3RhdGlvbjogLTEwICogc3ltYm9sLCB4OiAzNzUgfSwgMzAwLCBudWxsLCAwKVxuICAgICAgICAgICAgICAgIC5hZGRMYWJlbChcImJpZ1wiLCAwKS50byh0aGlzLmNhcmRfYmdfbmV4dCwgeyBzY2FsZVg6IDEsIHNjYWxlWTogMSwgcm90YXRpb246IDAsIHg6IDM3NSB9LCAyMDAsIG51bGwsIDApXG4gICAgICAgICAgICAvLyDljaHniYfliIfmjaLml7bmloflrZfliqjmlYhcbiAgICAgICAgICAgIHRoaXMuY2hhbmdlTnVtX3RpbWVsaW5lID0gbmV3IFRpbWVMaW5lKCk7XG4gICAgICAgICAgICB0aGlzLmNoYW5nZU51bV90aW1lbGluZS5hZGRMYWJlbChcImJpZ1wiLCAwKS50byh0aGlzLm51bV9uZXh0LCB7IHNjYWxlWDogMS4wNiwgc2NhbGVZOiAxLjA1LCByb3RhdGlvbjogLTEwICogc3ltYm9sLCB4OiAzMjUgfSwgMzAwLCBudWxsLCAwKVxuICAgICAgICAgICAgICAgIC5hZGRMYWJlbChcImJpZ1wiLCAwKS50byh0aGlzLm51bV9uZXh0LCB7IHNjYWxlWDogMSwgc2NhbGVZOiAxLCByb3RhdGlvbjogMCwgeDogMzI1IH0sIDIwMCwgbnVsbCwgMClcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuY2hhbmdlQ2FyZF90aW1lbGluZS5wbGF5KDAsIGZhbHNlKTtcbiAgICAgICAgdGhpcy5jaGFuZ2VOdW1fdGltZWxpbmUucGxheSgwLCBmYWxzZSk7XG4gICAgICAgIHRoaXMuaXNBbmltYXRpbmcgPSB0cnVlO1xuXG4gICAgICAgIFNvdW5kTWFuYWdlci5wbGF5U291bmQoXCJhc3NldHMvbXVzaWMvc2h1YS5tcDNcIiwgMSwgbnVsbCwgbnVsbCwgMTMpO1xuXG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5sZXZlbF90ZXh0LnRleHQgPSBgLSAke3RoaXMuZ2FtZUxldmVsICsgMX0gLyAke2dhbWVEYXRhLmxlbmd0aH0gLWA7XG4gICAgICAgICAgICB0aGlzLmNoYW5nZUNhcmRfdGltZWxpbmUucGF1c2UoKTtcbiAgICAgICAgICAgIHRoaXMuY2hhbmdlTnVtX3RpbWVsaW5lLnBhdXNlKCk7XG4gICAgICAgICAgICB0aGlzLm51bV9uZXh0LmFscGhhID0gMDtcbiAgICAgICAgICAgIHRoaXMuY2FyZF9iZ19uZXh0LmFscGhhID0gMDtcbiAgICAgICAgICAgIHRoaXMubnVtLnpPcmRlciA9IDE7XG4gICAgICAgICAgICB0aGlzLmNhcmRfYmcuek9yZGVyID0gMTtcbiAgICAgICAgICAgIHRoaXMuZHJhd0NhcmQobmV4dF91cmwsIHRleHQsIGNvbG9yKVxuICAgICAgICAgICAgdGhpcy5pc0FuaW1hdGluZyA9IGZhbHNlO1xuICAgICAgICB9LCA2MDApXG4gICAgfVxuXG4gICAgLy8g5Zue5Yiw6aaW6aG16L+b5YWl5LiL5LiA5YWzXG4gICAgZ29OZXh0R2FtZShpc05leHQpIHtcbiAgICAgICAgdGhpcy5pc0hvbWUgPSB0cnVlO1xuICAgICAgICAvLyBkZWJ1Z2dlclxuICAgICAgICBpZiAodGhpcy5nYW1lTGV2ZWwgKyAxID49IGdhbWVEYXRhLmxlbmd0aCkgcmV0dXJuO1xuICAgICAgICB0aGlzLnJlYWxMZXZlbCA9IE51bWJlcihMYXlhLkxvY2FsU3RvcmFnZS5nZXRJdGVtKCdyZWFsTGV2ZWwnKSlcbiAgICAgICAgLy8g6K+05piO5piv5Yia6Kej6ZSB5paw55qE5YWz5Y2h6ZyA6KaB5LiA5Liq6L2s5o2i55qE5Yqo55S7XG4gICAgICAgIGlmIChpc05leHQpIHtcbiAgICAgICAgICAgIHRoaXMuZ2FtZUxldmVsKys7XG4gICAgICAgICAgICAvLyDliJvlu7rljaHniYfpo57lh7rljrvnmoTmlYjmnpxcbiAgICAgICAgICAgIGxldCBzeW1ib2wgPSB0aGlzLmdhbWVMZXZlbCAlIDIgPT0gMCA/IDEgOiAtMTtcbiAgICAgICAgICAgIHRoaXMuY2hhbmdlQ2FyZF90aW1lbGluZSA9IG5ldyBUaW1lTGluZSgpO1xuICAgICAgICAgICAgdGhpcy5jaGFuZ2VDYXJkX3RpbWVsaW5lLmFkZExhYmVsKFwiYmlnXCIsIDApLnRvKHRoaXMuY2FyZF9iZywgeyBzY2FsZVg6IDEuMDYsIHNjYWxlWTogMS4wNSwgcm90YXRpb246IDEwICogc3ltYm9sLCB4OiAzOTAgfSwgMTAwLCBudWxsLCAwKVxuICAgICAgICAgICAgICAgIC5hZGRMYWJlbChcInNtYWxsXCIsIDApLnRvKHRoaXMuY2FyZF9iZywgeyBzY2FsZVg6IDEsIHNjYWxlWTogMSwgcm90YXRpb246IC01MCAqIHN5bWJvbCwgeDogMzA3IC0gMTAwMCAqIHN5bWJvbCB9LCAyMDAsIG51bGwsIDApO1xuICAgICAgICAgICAgLy8g5Y2h54mH5YiH5o2i5pe25paH5a2X5Yqo5pWIXG4gICAgICAgICAgICB0aGlzLmNoYW5nZU51bV90aW1lbGluZSA9IG5ldyBUaW1lTGluZSgpO1xuICAgICAgICAgICAgdGhpcy5jaGFuZ2VOdW1fdGltZWxpbmUuYWRkTGFiZWwoXCJiaWdcIiwgMCkudG8odGhpcy5udW0sIHsgc2NhbGVYOiAxLjA2LCBzY2FsZVk6IDEuMDUsIHJvdGF0aW9uOiAxMCAqIHN5bWJvbCwgeDogMzQwIH0sIDEwMCwgbnVsbCwgMClcbiAgICAgICAgICAgICAgICAuYWRkTGFiZWwoXCJzbWFsbFwiLCAwKS50byh0aGlzLm51bSwgeyBzY2FsZVg6IDEsIHNjYWxlWTogMSwgcm90YXRpb246IC01MCAqIHN5bWJvbCwgeDogMzI1IC0gMTAwMCAqIHN5bWJvbCB9LCAyMDAsIG51bGwsIDApO1xuICAgICAgICAgICAgLy/nu5jliLbkuIvkuIDlhbPnmoTljaHniYcgXG4gICAgICAgICAgICB0aGlzLmRyYXdOZXh0Q2FyZCgnYXNzZXRzL2ltYWdlcy9jYXJkLWJnLWxvY2sucG5nJywgZ2FtZURhdGFbdGhpcy5nYW1lTGV2ZWxdLm51bSwgJyM1MTQ2ODInLCBzeW1ib2wpXG4gICAgICAgICAgICAvLyBTb3VuZE1hbmFnZXIucGxheVNvdW5kKFwiYXNzZXRzL211c2ljL3podWFuY2hhbmcubXAzXCIsIDEsIG51bGwsIG51bGwsIDEzKTtcbiAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuY2hhbmdlQ2FyZF90aW1lbGluZS5wbGF5KDAsIGZhbHNlKTtcbiAgICAgICAgICAgICAgICB0aGlzLmNoYW5nZU51bV90aW1lbGluZS5wbGF5KDAsIGZhbHNlKTtcbiAgICAgICAgICAgICAgICB0aGlzLmlzQW5pbWF0aW5nID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBTb3VuZE1hbmFnZXIucGxheVNvdW5kKFwiYXNzZXRzL211c2ljL3NodWEubXAzXCIsIDEsIG51bGwsIG51bGwsIDEzKTtcbiAgICAgICAgICAgIH0sIDUwMCk7XG4gICAgICAgICAgICAvLyDliqjnlLvmuJDlj5hcblxuICAgICAgICAgICAgbGV0IHNob3dXaW5DYXJkTGluZSA9IG5ldyBUaW1lTGluZSgpO1xuICAgICAgICAgICAgbGV0IHNob3dXaW5OdW1MaW5lID0gbmV3IFRpbWVMaW5lKCk7XG4gICAgICAgICAgICBzaG93V2luQ2FyZExpbmUuYWRkTGFiZWwoJ3Nob3cnLCAwKS50byh0aGlzLmNhcmRfYmcsIHsgYWxwaGE6IDEgfSwgNTAwLCBudWxsLCAwKTtcbiAgICAgICAgICAgIHNob3dXaW5OdW1MaW5lLmFkZExhYmVsKCdzaG93JywgMCkudG8odGhpcy5udW0sIHsgYWxwaGE6IDEgfSwgNTAwLCBudWxsLCAwKTtcblxuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgU291bmRNYW5hZ2VyLnBsYXlTb3VuZChcImFzc2V0cy9tdXNpYy9kaWFuemkubXAzXCIsIDEsIG51bGwsIG51bGwsIDEzKTtcbiAgICAgICAgICAgIH0sIDE3MDApXG5cbiAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuZHJhd0NhcmQoJ2Fzc2V0cy9pbWFnZXMvY2FyZC1iZy5wbmcnLCBnYW1lRGF0YVt0aGlzLmdhbWVMZXZlbF0ubnVtLCAnI2Y5ZGZjNycpO1xuICAgICAgICAgICAgICAgIHRoaXMuY2FyZF9iZy5hbHBoYSA9IDA7XG4gICAgICAgICAgICAgICAgdGhpcy5udW0uYWxwaGEgPSAwO1xuICAgICAgICAgICAgICAgIHRoaXMubnVtLnpPcmRlciA9IDE7XG4gICAgICAgICAgICAgICAgdGhpcy5jYXJkX2JnLnpPcmRlciA9IDE7XG4gICAgICAgICAgICAgICAgc2hvd1dpbk51bUxpbmUucGxheSgwLCBmYWxzZSk7XG4gICAgICAgICAgICAgICAgc2hvd1dpbkNhcmRMaW5lLnBsYXkoMCwgZmFsc2UpO1xuXG4gICAgICAgICAgICB9LCAyMDAwKTtcblxuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgLy8g6L+Z6YeM57y65LiA5Liq6L+b5bqm5p2h5YmN6L+bXG4gICAgICAgICAgICAgICAgdGhpcy5sZXZlbF90ZXh0LnRleHQgPSBgLSAke3RoaXMuZ2FtZUxldmVsICsgMX0gLyAke2dhbWVEYXRhLmxlbmd0aH0gLWBcbiAgICAgICAgICAgICAgICB0aGlzLm51bV9uZXh0LmFscGhhID0gMDtcbiAgICAgICAgICAgICAgICB0aGlzLmNhcmRfYmdfbmV4dC5hbHBoYSA9IDA7XG4gICAgICAgICAgICAgICAgdGhpcy5pc0FuaW1hdGluZyA9IGZhbHNlO1xuICAgICAgICAgICAgfSwgMzAwMClcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIC8vIHRoaXMuY2FyZF9iZy5sb2FkSW1hZ2UoICdhc3NldHMvaW1hZ2VzL2NhcmQtYmcucG5nJylcbiAgICAgICAgICAgIHRoaXMubnVtLmFscGhhID0gMVxuICAgICAgICAgICAgdGhpcy50aW1lTGluZS5wbGF5KDAsIHRydWUpXG4gICAgICAgICAgICB0aGlzLnRpbWVMaW5lMi5wbGF5KDAsIHRydWUpXG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuSG9tZSgpIHtcbiAgICAgICAgdGhpcy5pc0hvbWUgPSB0cnVlO1xuICAgICAgICBTb3VuZE1hbmFnZXIucGxheVNvdW5kKFwiYXNzZXRzL211c2ljL2RvbmcubXAzXCIsIDEsIG51bGwsIG51bGwsIDEzKTtcbiAgICAgICAgLy8gZGVidWdnZXJcbiAgICB9XG59IiwiLy8g57uY5Yi25YWz5Y2h5byA5aeL55qE6L+H5Zy65Yqo55S7XG4vLyDkuLvpobXnm7jlhbPpgLvovpHku6Xlj4rmgLvlhaXlj6NcbmltcG9ydCBEUkFXIGZyb20gJy4uL2xpYi9ncmFwaGljcyc7XG5pbXBvcnQgR2FtZUNvbmZpZyBmcm9tIFwiLi4vR2FtZUNvbmZpZ1wiO1xuaW1wb3J0IHsgZ2V0TnVtIH0gZnJvbSBcIi4uL2xpYi9nYW1lRGF0YVwiO1xuaW1wb3J0IERyYXdHYW1lIGZyb20gXCIuL2RyYXdQbGFjZVwiO1xuXG52YXIgU3ByaXRlID0gTGF5YS5TcHJpdGU7XG52YXIgU3RhZ2UgPSBMYXlhLlN0YWdlO1xudmFyIEJyb3dzZXIgPSBMYXlhLkJyb3dzZXI7XG52YXIgSGFuZGxlciA9IExheWEuSGFuZGxlcjtcbnZhciBXZWJHTCA9IExheWEuV2ViR0w7XG52YXIgRXZlbnQgPSBMYXlhLkV2ZW50O1xudmFyIExvYWRlciA9IExheWEuTG9hZGVyO1xudmFyIFR3ZWVuID0gTGF5YS5Ud2VlbjtcbnZhciBFYXNlID0gTGF5YS5FYXNlO1xudmFyIFNvdW5kTWFuYWdlciA9IExheWEuU291bmRNYW5hZ2VyO1xudmFyIFRleHQgPSBMYXlhLlRleHQ7XG52YXIgR2xvd0ZpbHRlciA9IExheWEuR2xvd0ZpbHRlcjtcbnZhciBUaW1lTGluZSA9IExheWEuVGltZUxpbmU7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIERyYXdIb21lIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgLy8gc3ByaXRlXG4gICAgICAgIHRoaXMuYmcgPSBcIlwiXG4gICAgICAgIHRoaXMuaW5pdCgpXG4gICAgfVxuICAgIGluaXQoKSB7XG4gICAgICAgIHRoaXMuZHJhd0JhY2tncm91bmQoKVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOe7mOWItueUu+W4g1xuICAgICAqL1xuXG4gICAgLy/nu5jliLbog4zmma9cbiAgICBkcmF3QmFja2dyb3VuZCgpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ29rJylcbiAgICAgICAgdGhpcy5iZyA9IG5ldyBTcHJpdGUoKTtcbiAgICAgICAgdGhpcy5iZy5zaXplKDc1MCwgQnJvd3Nlci5oZWlnaHQpO1xuICAgICAgICB0aGlzLmJnLmFscGhhID0gMDtcbiAgICAgICAgdGhpcy5iZy56T3JkZXIgPSAyO1xuICAgICAgICBMYXlhLnN0YWdlLmFkZENoaWxkKHRoaXMuYmcpO1xuICAgICAgICB0aGlzLmJnLmdyYXBoaWNzLmRyYXdSZWN0KDAsIDAsIDc1MCwgQnJvd3Nlci5oZWlnaHQsICcjYWFhJyk7XG4gICAgICAgIHZhciB0aW1lTGluZSA9IG5ldyBUaW1lTGluZSgpO1xuICAgICAgICB0aW1lTGluZS5hZGRMYWJlbChcImJpZ1wiLCAwKS50byh0aGlzLmJnLCB7IGFscGhhOiAxfSwgMTAwMCwgbnVsbCwgMCk7XG4gICAgICAgIHRpbWVMaW5lLnBsYXkoMCk7XG4gICAgfVxuICAgIC8vIOe7mOWItuWFs+WNoeeahOWwj+aVsFxuICAgIGRyYXdMZXZlbFRleHQoKXtcblxuICAgIH1cblxuXG4gICAgLyoqXG4gICAgICog6YC76L6R5aSE55CGXG4gICAgICovXG59IiwiLy8g5Yib5bu65Li75ri45oiP5Zy65pmvXG5pbXBvcnQgRFJBVyBmcm9tICcuLi9saWIvZ3JhcGhpY3MnO1xuaW1wb3J0IEdhbWVDb25maWcgZnJvbSBcIi4uL0dhbWVDb25maWdcIjtcbmltcG9ydCB7IGdldE51bSwgZ2FtZURhdGEgfSBmcm9tIFwiLi4vbGliL2dhbWVEYXRhXCI7XG5pbXBvcnQgRHJhd0hvbWUgZnJvbSBcIi4vZHJhd0hvbWVcIjtcblxuY29uc29sZS5sb2coR2FtZUNvbmZpZylcblxudmFyIFNwcml0ZSA9IExheWEuU3ByaXRlO1xudmFyIFN0YWdlID0gTGF5YS5TdGFnZTtcbnZhciBCcm93c2VyID0gTGF5YS5Ccm93c2VyO1xudmFyIEhhbmRsZXIgPSBMYXlhLkhhbmRsZXI7XG52YXIgV2ViR0wgPSBMYXlhLldlYkdMO1xudmFyIEV2ZW50ID0gTGF5YS5FdmVudDtcbnZhciBMb2FkZXIgPSBMYXlhLkxvYWRlcjtcbnZhciBUd2VlbiA9IExheWEuVHdlZW47XG52YXIgRWFzZSA9IExheWEuRWFzZTtcbnZhciBUZXh0ID0gTGF5YS5UZXh0O1xudmFyIFNvdW5kTWFuYWdlciA9IExheWEuU291bmRNYW5hZ2VyO1xudmFyIFRpbWVMaW5lID0gTGF5YS5UaW1lTGluZTtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRHJhd0dhbWUge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICAvLyDnu5jlm77nm7jlhbPnmoTlsZ7mgKdcbiAgICAgICAgdGhpcy54ID0gNDA7XG4gICAgICAgIHRoaXMueSA9IDI1MDtcbiAgICAgICAgdGhpcy5jb2wgPSAzO1xuICAgICAgICB0aGlzLnJvdyA9IDM7XG4gICAgICAgIHRoaXMuZ2FiID0gMjA7XG4gICAgICAgIHRoaXMudFdpZHRoID0gNzUwIC0gMiAqIHRoaXMueDsvL+ahjOmdouWuveW6plxuICAgICAgICB0aGlzLmlXaWR0aCA9ICh0aGlzLnRXaWR0aCAtICh0aGlzLnJvdyArIDEpICogdGhpcy5nYWIpIC8gdGhpcy5yb3c7Ly/ljZXkuKrnmoTpq5jluqZcbiAgICAgICAgdGhpcy50SGVpZ2h0ID0gdGhpcy5pV2lkdGggKiB0aGlzLmNvbCArICh0aGlzLmNvbCArIDEpICogdGhpcy5nYWI7XG4gICAgICAgIHRoaXMuaXRlbXNTcHJpdGUgPSBbXTsvL+WtmOaUvuWuq+agvOeahFNwcml0ZVxuICAgICAgICAvLyDnlLvluINcbiAgICAgICAgdGhpcy5nYW1lX2JnID0gXCJcIlxuICAgICAgICB0aGlzLnRhYmxlX2JnID0gXCJcIlxuICAgICAgICAvLyB0aGlzLnRvcFNwID0gXCJcIlxuICAgICAgICB0aGlzLnJlZnJlc2hTcCA9IFwiXCJcbiAgICAgICAgdGhpcy5yZXR1cm5TcCA9IFwiXCJcbiAgICAgICAgLy8gdGhpcy5udW1TY3JlZW5TcCA9IFwiXCJcbiAgICAgICAgdGhpcy5mYWlsQmdTcCA9IFwiXCJcbiAgICAgICAgdGhpcy5mYWlsTWFza1NwID0gXCJcIlxuICAgICAgICB0aGlzLmZhaWxSZWZyZXNoID0gXCJcIlxuICAgICAgICB0aGlzLmZhaWxSZXR1cm4gPSBcIlwiXG4gICAgICAgIHRoaXMuc2xpZGVCbG9jayA9IFwiXCJcbiAgICAgICAgdGhpcy5udW1UZXh0ID0gXCJcIlxuICAgICAgICB0aGlzLnRpcFRleHQgPSBcIlwiXG5cbiAgICAgICAgLy8g5ri45oiP5pWw5o2uXG4gICAgICAgIHRoaXMubGV2ZWwgPSBcIlwiXG4gICAgICAgIHRoaXMubnVtRGF0YSA9IFwiXCI7XG4gICAgICAgIHRoaXMuYXJyID0gW107Ly/lrqvmoLznmoTlrp7ml7bmlbDmja5cbiAgICAgICAgdGhpcy5wTm93ID0gWzAsIDBdO1xuICAgICAgICB0aGlzLmZyb250UG9zdGlvbiA9IFtdO1xuICAgICAgICB0aGlzLmlzR2FtaW5nID0gZmFsc2U7XG5cbiAgICAgICAgLy8g5ri45oiP5Lqk5LqSXG4gICAgICAgIHRoaXMuc3RhcnRQID0gW107XG5cbiAgICAgICAgLy8g5Yqo55S7XG4gICAgICAgIHRoaXMudG9wVGV4dExpbmUgPSBcIlwiXG4gICAgICAgIHRoaXMudGlwVGV4dExpbmUgPSBcIlwiXG4gICAgICAgIHRoaXMud2luTGluZSA9IFwiXCJcbiAgICAgICAgdGhpcy53aW5Nb3ZlTGluZSA9IFwiXCJcblxuICAgICAgICAvLyDov5DooYxcbiAgICAgICAgdGhpcy5pbml0KCk7XG4gICAgfVxuICAgIC8vIOmmluasoeazqOWGjFxuICAgIGluaXQoKSB7XG4gICAgICAgIC8vIGNvbnNvbGUubG9nKCfmiafooYxpbml0Jyk7XG4gICAgICAgIHRoaXMuZHJhd1BsYWNlKClcbiAgICAgICAgdGhpcy5yZWZyZXNoVGFibGUoKVxuICAgICAgICAvLyB0aGlzLmRyYXdUb3BCdXR0b24oKTtcbiAgICAgICAgdGhpcy5kcmF3VGFibGVCZygpXG4gICAgICAgIHRoaXMuc3RhcnRHYW1lKClcbiAgICB9XG5cbiAgICAvLyDlvIDlkK/muLjmiI9cbiAgICBzdGFydEdhbWUoKSB7XG4gICAgICAgIC8vIFxuICAgICAgICAvLyBcbiAgICAgICAgLy8gdGhpcy50b3BTcC56T3JkZXIgPSA0O1xuXG4gICAgICAgIC8vIOe8k+WKqOWKqOeUu1xuICAgICAgICBUd2Vlbi5mcm9tKHRoaXMuZ2FtZV9iZywgeyBhbHBoYTogMCB9LCA1MDApLnRvKHRoaXMuZ2FtZV9iZywgeyBhbHBoYTogMSB9LCA1MDApXG4gICAgICAgIC8vIOW8gOWQr+avlOi1m1xuICAgICAgICAvLyB0aGlzLnJlZnJlc2hUYWJsZSgpO1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuY29sOyBpKyspIHtcbiAgICAgICAgICAgIHRoaXMuaXRlbXNTcHJpdGVbaV0gPSBbXTtcbiAgICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgdGhpcy5yb3c7IGorKykge1xuICAgICAgICAgICAgICAgIC8vIOWIm+W7uuWuq+agvOiInuWPsFxuICAgICAgICAgICAgICAgIHRoaXMuaXRlbXNTcHJpdGVbaV1bal0gPSBuZXcgU3ByaXRlKCk7XG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLml0ZW1zU3ByaXRlKSB0aGlzLml0ZW1zU3ByaXRlW2ldW2pdID0gbmV3IFNwcml0ZSgpO1xuICAgICAgICAgICAgICAgIExheWEuc3RhZ2UuYWRkQ2hpbGQodGhpcy5pdGVtc1Nwcml0ZVtpXVtqXSk7XG4gICAgICAgICAgICAgICAgdGhpcy5pdGVtc1Nwcml0ZVtpXVtqXS56T3JkZXIgPSA0O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFNvdW5kTWFuYWdlci5wbGF5U291bmQoXCJhc3NldHMvbXVzaWMvbG9hZC5tcDNcIiwgMSwgbnVsbCwgbnVsbCwgNTAwMCk7XG4gICAgICAgIHRoaXMuZHJhd1RpcFRleHQoKTtcblxuICAgICAgICB0aGlzLmFuaVNwbGl0ID0gMjAwMCAvIHRoaXMucm93IC8gdGhpcy5jb2w7XG5cbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmRyYXdUYWJsZSh0cnVlLCB0cnVlLCB0cnVlKTtcbiAgICAgICAgfSwgMTUwMCk7XG5cbiAgICAgICAgLy8gNDUwMG1zIOWQjui9rOeggeWujOaIkFxuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgIHRoaXMudGlwVGV4dC50ZXh0ID0gXCIgICDovaznoIHlrozmiJDvvIFcIlxuICAgICAgICAgICAgdmFyIHRpbWVMaW5lID0gbmV3IFRpbWVMaW5lKCk7XG4gICAgICAgICAgICB0aGlzLnRvcFRleHRMaW5lLmRlc3Ryb3koKTtcbiAgICAgICAgICAgIHRoaXMubnVtVGV4dC5hbHBoYSA9IDE7XG4gICAgICAgICAgICB0aGlzLmRyYXdUb3BCdXR0b24oKTtcbiAgICAgICAgfSwgMzUwMClcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDnu5jliLbnlLvluINcbiAgICAgKi9cblxuICAgIC8vIOeUu+iDjOaZr+WbvlxuICAgIGRyYXdQbGFjZSgpIHtcbiAgICAgICAgLy8g55S75ri45oiP55qE6IOM5pmv5biDXG4gICAgICAgIHRoaXMuZ2FtZV9iZyA9IG5ldyBMYXlhLlNwcml0ZSgpO1xuICAgICAgICB0aGlzLmdhbWVfYmcuc2l6ZSg3NTAsIEJyb3dzZXIuaGVpZ2h0KTtcbiAgICAgICAgTGF5YS5zdGFnZS5hZGRDaGlsZCh0aGlzLmdhbWVfYmcpO1xuICAgICAgICB0aGlzLmdhbWVfYmcubG9hZEltYWdlKCdhc3NldHMvaW1hZ2VzL2dhbWVfYmcxLnBuZycpO1xuICAgICAgICB0aGlzLmdhbWVfYmcuYWxwaGEgPSAwO1xuICAgICAgICB0aGlzLmdhbWVfYmcuek9yZGVyID0gMjtcbiAgICAgICAgLy/mt7vliqDplK7nm5jmiqzotbfkuovku7ZcbiAgICAgICAgTGF5YS5zdGFnZS5vbihFdmVudC5LRVlfVVAsIHRoaXMsIHRoaXMub25LZXlVcCk7XG4gICAgfVxuICAgIC8vIOeUu+iDjOaZr+iJslxuICAgIGRyYXdUYWJsZUJnKCkge1xuICAgICAgICAvLyDnlLvkuK3lv4PnmoTmlrnlnZfnu4Tog4zmma9cbiAgICAgICAgdGhpcy50YWJsZV9iZyA9IG5ldyBMYXlhLlNwcml0ZSgpO1xuICAgICAgICB0aGlzLnRhYmxlX2JnLnNpemUodGhpcy50V2lkdGgsIHRoaXMudEhlaWdodCAqIDIpOy8v5LiA5a6a6KaB6K6+572uc2l6ZeaJjeiDveebkeaOp+S6i+S7tiBcbiAgICAgICAgTGF5YS5zdGFnZS5hZGRDaGlsZCh0aGlzLnRhYmxlX2JnKTtcbiAgICAgICAgdGhpcy50YWJsZV9iZy5hbHBoYSA9IDAuMlxuICAgICAgICB0aGlzLnRhYmxlX2JnLnpPcmRlciA9IDM7XG4gICAgICAgIHRoaXMudGFibGVfYmcub24oRXZlbnQuTU9VU0VfRE9XTiwgdGhpcywgdGhpcy5vbk1vdXNlRG93bik7XG4gICAgICAgIHRoaXMudGFibGVfYmcub24oRXZlbnQuTU9VU0VfVVAsIHRoaXMsIHRoaXMub25Nb3VzZVVwKTtcbiAgICAgICAgRFJBVy5kcmF3Um91bmRlZFJlY3RhbmdsZSh0aGlzLnRhYmxlX2JnLCB0aGlzLngsIHRoaXMueSwgdGhpcy50V2lkdGgsIHRoaXMudEhlaWdodCwgdGhpcy5nYWIsICcjMmYwMDQ4Jyk7XG4gICAgfVxuICAgIC8vIOeUu+mhtumDqOaMiemSrlxuICAgIGRyYXdUb3BCdXR0b24oKSB7XG4gICAgICAgIC8vIHRoaXMudG9wU3AgPSBuZXcgU3ByaXRlKCk7XG4gICAgICAgIC8vIExheWEuc3RhZ2UuYWRkQ2hpbGQodGhpcy50b3BTcCk7XG4gICAgICAgIC8vIHRoaXMudG9wU3AuZ3JhcGhpY3MuZHJhd1JlY3QoMCwgMCwgMTQyLCAxMDYsIFwiIzRkMmY4YVwiKTtcbiAgICAgICAgLy8g57uY5Yi25Yi35paw5oyJ6ZKuXG4gICAgICAgIHRoaXMucmVmcmVzaFNwID0gbmV3IFNwcml0ZSgpO1xuICAgICAgICBMYXlhLnN0YWdlLmFkZENoaWxkKHRoaXMucmVmcmVzaFNwKTtcbiAgICAgICAgdGhpcy5yZWZyZXNoXG4gICAgICAgIHRoaXMucmVmcmVzaFNwLmxvYWRJbWFnZSgnYXNzZXRzL2ltYWdlcy9yZWZyZXNoX2J0bi5wbmcnKTtcbiAgICAgICAgdGhpcy5yZWZyZXNoU3AucG9zKDU3OCwgMzApO1xuICAgICAgICB0aGlzLnJlZnJlc2hTcC5zaXplKDE0MiwgMTA2KTtcbiAgICAgICAgdGhpcy5yZWZyZXNoU3Aub24oJ2NsaWNrJywgdGhpcywgdGhpcy5yZWZyZXNoKVxuICAgICAgICB0aGlzLnJlZnJlc2hTcC5hbHBoYSA9IDA7XG4gICAgICAgIHRoaXMucmVmcmVzaFNwLnpPcmRlciA9IDQ7XG5cbiAgICAgICAgLy8g5Yqo55S7XG4gICAgICAgIHZhciB0aW1lTGluZSA9IG5ldyBUaW1lTGluZSgpO1xuICAgICAgICB0aW1lTGluZS5hZGRMYWJlbChcIm1vdmVcIiwgMCkudG8odGhpcy5yZWZyZXNoU3AsIHsgYWxwaGE6IDEgfSwgNTAwLCBudWxsLCAwKVxuICAgICAgICB0aW1lTGluZS5wbGF5KDAsIGZhbHNlKTtcblxuICAgICAgICAvLyDnu5jliLbov5Tlm57mjInpkq5cbiAgICAgICAgdGhpcy5yZXR1cm5TcCA9IG5ldyBTcHJpdGUoKTtcbiAgICAgICAgTGF5YS5zdGFnZS5hZGRDaGlsZCh0aGlzLnJldHVyblNwKTtcbiAgICAgICAgdGhpcy5yZXR1cm5TcC5sb2FkSW1hZ2UoJ2Fzc2V0cy9pbWFnZXMvcmV0dXJuX2J0bi5wbmcnKTtcbiAgICAgICAgdGhpcy5yZXR1cm5TcC5wb3MoMzAsIDMwKTtcbiAgICAgICAgdGhpcy5yZXR1cm5TcC5zaXplKDE0MiwgMTA2KTtcblxuICAgICAgICB0aGlzLnJldHVyblNwLmFscGhhID0gMDtcbiAgICAgICAgdGhpcy5yZXR1cm5TcC56T3JkZXIgPSA0O1xuICAgICAgICB0aGlzLnJldHVyblNwLm9uKCdjbGljaycsIHRoaXMsIHRoaXMucmV0dXJuSG9tZSk7XG4gICAgICAgIC8vIOWKqOeUu1xuICAgICAgICB2YXIgdGltZUxpbmUyID0gbmV3IFRpbWVMaW5lKCk7XG4gICAgICAgIHRpbWVMaW5lMi5hZGRMYWJlbChcIm1vdmVcIiwgMCkudG8odGhpcy5yZXR1cm5TcCwgeyBhbHBoYTogMSB9LCA1MDAsIG51bGwsIDApXG4gICAgICAgIHRpbWVMaW5lMi5wbGF5KDAsIGZhbHNlKTtcbiAgICB9XG4gICAgLy8g55S75a6r5qC8XG4gICAgZHJhd1RhYmxlKGZpcnN0ID0gZmFsc2UsIHNob3dBbmltYXRlID0gZmFsc2UsIGNhbGxiYWNrKSB7XG4gICAgICAgIC8vIOWmguaenOaYr+esrOS4gOasoeeUu+Wuq+agvFxuICAgICAgICBpZiAoZmlyc3QpIHtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5jb2w7IGkrKykge1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgdGhpcy5yb3c7IGorKykge1xuICAgICAgICAgICAgICAgICAgICBsZXQgeCA9IHRoaXMueCArIGogKiAodGhpcy5pV2lkdGggKyB0aGlzLmdhYikgKyB0aGlzLmdhYiwgeSA9IHRoaXMueSArIGkgKiAodGhpcy5pV2lkdGggKyB0aGlzLmdhYikgKyB0aGlzLmdhYjtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5kcmF3SXRlbUJsb2NrKGksIGopO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLml0ZW1zU3ByaXRlW2ldW2pdLnBvcyh4ICsgdGhpcy5pV2lkdGggKiAwLjUsIHkgKyB0aGlzLmlXaWR0aCAqIDAuNSk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaXRlbXNTcHJpdGVbaV1bal0uc2l6ZSh0aGlzLmlXaWR0aCwgdGhpcy5pV2lkdGgpO1xuICAgICAgICAgICAgICAgICAgICAvLyDliqjnlLtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5pdGVtc1Nwcml0ZVtpXVtqXS5hbHBoYSA9IDBcbiAgICAgICAgICAgICAgICAgICAgVHdlZW4uZnJvbSh0aGlzLml0ZW1zU3ByaXRlW2ldW2pdLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyB5OjEwXG4gICAgICAgICAgICAgICAgICAgICAgICBzY2FsZVk6IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICBzY2FsZVg6IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICBwaXZvdFg6IHRoaXMuaVdpZHRoICogMC41LFxuICAgICAgICAgICAgICAgICAgICAgICAgcGl2b3RZOiB0aGlzLmlXaWR0aCAqIDAuNSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGFscGhhOiAwXG4gICAgICAgICAgICAgICAgICAgIH0sIHNob3dBbmltYXRlID8gMTAwIDogMjUwLCBFYXNlLmNpcmNJbk91dCwgbnVsbCwgc2hvd0FuaW1hdGUgPyBpICogdGhpcy5hbmlTcGxpdCAqIHRoaXMucm93ICsgaiAqIHRoaXMuYW5pU3BsaXQgOiA1MDApXG4gICAgICAgICAgICAgICAgICAgIFR3ZWVuLnRvKHRoaXMuaXRlbXNTcHJpdGVbaV1bal0sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNjYWxlWTogMSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHNjYWxlWDogMSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBpdm90WDogdGhpcy5pV2lkdGggKiAwLjUsXG4gICAgICAgICAgICAgICAgICAgICAgICBwaXZvdFk6IHRoaXMuaVdpZHRoICogMC41LFxuICAgICAgICAgICAgICAgICAgICAgICAgYWxwaGE6IDFcbiAgICAgICAgICAgICAgICAgICAgfSwgc2hvd0FuaW1hdGUgPyAxMDAgOiAyNTAsIEVhc2UuY2lyY0luT3V0LCBudWxsLCBzaG93QW5pbWF0ZSA/IGkgKiB0aGlzLmFuaVNwbGl0ICogdGhpcy5yb3cgKyBqICogdGhpcy5hbmlTcGxpdCA6IDUwMClcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChzaG93QW5pbWF0ZSkge1xuICAgICAgICAgICAgICAgIC8vIOaSreaUvumfs+aViFxuICAgICAgICAgICAgICAgIGxldCBpID0gMTtcbiAgICAgICAgICAgICAgICBTb3VuZE1hbmFnZXIucGxheVNvdW5kKFwiYXNzZXRzL211c2ljL291dHB1dC5tcDNcIiwgMSwgbnVsbCwgbnVsbCwgMCk7XG4gICAgICAgICAgICAgICAgbGV0IHNvdW5kSW50ZXJ2YWwgPSBzZXRJbnRlcnZhbCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGkrKztcbiAgICAgICAgICAgICAgICAgICAgaWYgKGkgPj0gdGhpcy5jb2wgKiB0aGlzLnJvdykgY2xlYXJJbnRlcnZhbChzb3VuZEludGVydmFsKTtcbiAgICAgICAgICAgICAgICAgICAgU291bmRNYW5hZ2VyLnBsYXlTb3VuZChcImFzc2V0cy9tdXNpYy9vdXRwdXQubXAzXCIsIDEsIG51bGwsIG51bGwsIDApO1xuICAgICAgICAgICAgICAgIH0sIHRoaXMuYW5pU3BsaXQpXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIFNvdW5kTWFuYWdlci5wbGF5U291bmQoXCJhc3NldHMvbXVzaWMvbG9hZC5tcDNcIiwgMSwgbnVsbCwgbnVsbCwgNTAwMCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5kcmF3VGFibGUodHJ1ZSwgZmFsc2UpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmlzR2FtaW5nID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9LCAyMzAwKVxuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgLy8g56e75Yqo5ruR5Z2XXG4gICAgICAgICAgICBpZiAoIXRoaXMuc2xpZGVCbG9jaykge1xuICAgICAgICAgICAgICAgIHRoaXMuc2xpZGVCbG9jayA9IG5ldyBTcHJpdGUoKVxuICAgICAgICAgICAgICAgIExheWEuc3RhZ2UuYWRkQ2hpbGQodGhpcy5zbGlkZUJsb2NrKTtcbiAgICAgICAgICAgICAgICB0aGlzLnNsaWRlQmxvY2suek9yZGVyID0gNDtcbiAgICAgICAgICAgICAgICB0aGlzLnNsaWRlQmxvY2subG9hZEltYWdlKCdhc3NldHMvaW1hZ2VzL2l0ZW0tMS1hY3RpdmUucG5nJyk7XG4gICAgICAgICAgICAgICAgdGhpcy5zbGlkZUJsb2NrLnNpemUodGhpcy5pV2lkdGgsIHRoaXMuaVdpZHRoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxldCB0b1ggPSB0aGlzLnggKyB0aGlzLnBOb3dbMF0gKiAodGhpcy5pV2lkdGggKyB0aGlzLmdhYikgKyB0aGlzLmdhYiwgdG9ZID0gdGhpcy55ICsgdGhpcy5wTm93WzFdICogKHRoaXMuaVdpZHRoICsgdGhpcy5nYWIpICsgdGhpcy5nYWI7XG4gICAgICAgICAgICBsZXQgZnJvbVggPSB0aGlzLnggKyB0aGlzLmZyb250UG9zdGlvblswXSAqICh0aGlzLmlXaWR0aCArIHRoaXMuZ2FiKSArIHRoaXMuZ2FiLCBmcm9tWSA9IHRoaXMueSArIHRoaXMuZnJvbnRQb3N0aW9uWzFdICogKHRoaXMuaVdpZHRoICsgdGhpcy5nYWIpICsgdGhpcy5nYWI7XG4gICAgICAgICAgICB0aGlzLnNsaWRlQmxvY2sucG9zKGZyb21YLCBmcm9tWSk7XG4gICAgICAgICAgICB0aGlzLnNsaWRlQmxvY2suYWxwaGEgPSAwLjU7XG4gICAgICAgICAgICB2YXIgdGltZUxpbmUyID0gbmV3IFRpbWVMaW5lKCk7XG4gICAgICAgICAgICB0aW1lTGluZTIuYWRkTGFiZWwoXCJtb3ZlXCIsIDApLnRvKHRoaXMuc2xpZGVCbG9jaywgeyB4OiB0b1gsIHk6IHRvWSB9LCAxMDAsIG51bGwsIDApXG4gICAgICAgICAgICAgICAgLmFkZExhYmVsKFwibW92ZVwiLCAwKS50byh0aGlzLnNsaWRlQmxvY2ssIHsgeDogdG9YLCB5OiB0b1ksIGFscGhhOiAwIH0sIDEwMCwgbnVsbCwgMClcbiAgICAgICAgICAgIHRpbWVMaW5lMi5wbGF5KDAsIGZhbHNlKTtcblxuICAgICAgICAgICAgbGV0IHNjYWxlU3AgPSB0aGlzLml0ZW1zU3ByaXRlW3RoaXMucE5vd1sxXV1bdGhpcy5wTm93WzBdXTtcbiAgICAgICAgICAgIHZhciB0aW1lTGluZSA9IG5ldyBUaW1lTGluZSgpO1xuICAgICAgICAgICAgdGltZUxpbmUuYWRkTGFiZWwoXCJtb3ZlXCIsIDApLnRvKHNjYWxlU3AsIHsgc2NhbGVYOiAxLjA3LCBzY2FsZVk6IDEuMDcgfSwgMTAwLCBudWxsLCAwKVxuICAgICAgICAgICAgICAgIC5hZGRMYWJlbChcIm1vdmVcIiwgMCkudG8oc2NhbGVTcCwgeyBzY2FsZVg6IDEsIHNjYWxlWTogMSB9LCAxMDAsIG51bGwsIDApXG4gICAgICAgICAgICB0aW1lTGluZS5wbGF5KDAsIGZhbHNlKTtcblxuICAgICAgICAgICAgdGhpcy5kcmF3SXRlbUJsb2NrKHRoaXMucE5vd1sxXSwgdGhpcy5wTm93WzBdKTtcbiAgICAgICAgICAgIHRoaXMuZHJhd0l0ZW1CbG9jayh0aGlzLmZyb250UG9zdGlvblsxXSwgdGhpcy5mcm9udFBvc3Rpb25bMF0pO1xuICAgICAgICB9XG4gICAgICAgIC8vIOagvOW8j+WMluaji+ebmOaVsOaNrlxuICAgICAgICBUd2Vlbi5jbGVhckFsbCh0aGlzLml0ZW1zU3ByaXRlKVxuXG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5qdWRnZVN1Y2Nlc3MoKTtcbiAgICAgICAgfSwgMTAwKVxuICAgIH1cbiAgICAvLyDmoLnmja7lnZDmoIfnu5jliLbnm7jlupTnmoToibLlnZdcbiAgICBkcmF3SXRlbUJsb2NrKGksIGopIHtcbiAgICAgICAgbGV0IHVybDtcbiAgICAgICAgaWYgKGogPT0gdGhpcy5wTm93WzBdICYmIGkgPT0gdGhpcy5wTm93WzFdKSB7XG4gICAgICAgICAgICB1cmwgPSB0aGlzLmFycltpXVtqXS5udW0gPT0gJzAnID8gJ2Fzc2V0cy9pbWFnZXMvaXRlbS0wLWFjdGl2ZS5wbmcnIDogJ2Fzc2V0cy9pbWFnZXMvaXRlbS0xLWFjdGl2ZS5wbmcnO1xuICAgICAgICB9IGVsc2UgaWYgKHRoaXMuYXJyW2ldW2pdLmlzVXNlZCkge1xuICAgICAgICAgICAgdXJsID0gJ2Fzc2V0cy9pbWFnZXMvaXRlbS0xLWxvY2sucG5nJ1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdXJsID0gdGhpcy5hcnJbaV1bal0ubnVtID09ICcwJyA/ICdhc3NldHMvaW1hZ2VzL2l0ZW0tMC5wbmcnIDogJ2Fzc2V0cy9pbWFnZXMvaXRlbS0xLnBuZyc7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5pdGVtc1Nwcml0ZVtpXVtqXS5ncmFwaGljcy5jbGVhcigpO1xuICAgICAgICB0aGlzLml0ZW1zU3ByaXRlW2ldW2pdLmxvYWRJbWFnZSh1cmwpO1xuICAgIH1cbiAgICAvLyDnlLvpobbpg6jmj5DnpLpcbiAgICBkcmF3VGlwVGV4dCgpIHtcbiAgICAgICAgdGhpcy5udW1UZXh0ID0gbmV3IFRleHQoKTtcbiAgICAgICAgTGF5YS5zdGFnZS5hZGRDaGlsZCh0aGlzLm51bVRleHQpO1xuICAgICAgICB0aGlzLm51bVRleHQudGV4dCA9IGdhbWVEYXRhW3RoaXMubGV2ZWxdLm51bTtcbiAgICAgICAgdGhpcy5udW1UZXh0LmZvbnQgPSBcImRpblwiO1xuICAgICAgICB0aGlzLm51bVRleHQuYm9sZCA9IHRydWU7XG4gICAgICAgIHRoaXMubnVtVGV4dC5mb250U2l6ZSA9IDEyMDtcbiAgICAgICAgdGhpcy5udW1UZXh0LndpZHRoID0gNzUwO1xuICAgICAgICB0aGlzLm51bVRleHQuek9yZGVyID0gNDtcbiAgICAgICAgdGhpcy5udW1UZXh0LmNvbG9yID0gXCIjZmRlNWNkXCJcbiAgICAgICAgLy8gdGhpcy5udW1UZXh0LnBpdm90KDI0NSwgMCk7XG4gICAgICAgIHRoaXMubnVtVGV4dC5hbGlnbiA9IFwiY2VudGVyXCI7XG4gICAgICAgIHRoaXMubnVtVGV4dC55ID0gNDg7XG4gICAgICAgIHRoaXMubnVtVGV4dC54ID0gMDtcbiAgICAgICAgdGhpcy5udW1UZXh0LmFscGhhID0gMDtcbiAgICAgICAgdGhpcy50b3BUZXh0TGluZSA9IG5ldyBUaW1lTGluZSgpO1xuXG4gICAgICAgIHRoaXMudG9wVGV4dExpbmUuYWRkTGFiZWwoXCJtb3ZlXCIsIDApLnRvKHRoaXMubnVtVGV4dCwgeyBhbHBoYTogMSB9LCA1MDAsIG51bGwsIDApXG4gICAgICAgICAgICAuYWRkTGFiZWwoXCJtb3ZlMVwiLCAwKS50byh0aGlzLm51bVRleHQsIHsgYWxwaGE6IDAuMiB9LCA1MDAsIG51bGwsIDApXG4gICAgICAgIHRoaXMudG9wVGV4dExpbmUucGxheSgwLCB0cnVlKTtcblxuICAgICAgICB0aGlzLnRpcFRleHQgPSBuZXcgVGV4dCgpXG4gICAgICAgIExheWEuc3RhZ2UuYWRkQ2hpbGQodGhpcy50aXBUZXh0KTtcbiAgICAgICAgdGhpcy50aXBUZXh0LnRleHQgPSBcIuS6jOi/m+WItui9rOeggeS4rS4uLlwiO1xuICAgICAgICB0aGlzLnRpcFRleHQuZm9udCA9IFwiZGluXCI7XG4gICAgICAgIHRoaXMudGlwVGV4dC5ib2xkID0gdHJ1ZTtcbiAgICAgICAgdGhpcy50aXBUZXh0LmZvbnRTaXplID0gNDA7XG4gICAgICAgIHRoaXMudGlwVGV4dC53aWR0aCA9IDc1MDtcbiAgICAgICAgdGhpcy50aXBUZXh0LnpPcmRlciA9IDQ7XG4gICAgICAgIHRoaXMudGlwVGV4dC5jb2xvciA9IFwiI2ZkZTVjZFwiXG4gICAgICAgIC8vIHRoaXMudGlwVGV4dC5waXZvdCgyNDUsIDApO1xuICAgICAgICB0aGlzLnRpcFRleHQuYWxpZ24gPSBcImNlbnRlclwiO1xuICAgICAgICB0aGlzLnRpcFRleHQueSA9IDE4MDtcbiAgICAgICAgdGhpcy50aXBUZXh0LnggPSAwO1xuICAgICAgICB0aGlzLnRpcFRleHQuYWxwaGEgPSAwO1xuICAgICAgICB0aGlzLnRpcFRleHRMaW5lID0gbmV3IFRpbWVMaW5lKCk7XG4gICAgICAgIHRoaXMudGlwVGV4dExpbmUuYWRkTGFiZWwoXCJtb3ZlXCIsIDApLnRvKHRoaXMudGlwVGV4dCwgeyBhbHBoYTogMC44IH0sIDUwMCwgbnVsbCwgMTAwMClcbiAgICAgICAgdGhpcy50aXBUZXh0TGluZS5wbGF5KDAsIGZhbHNlKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDplK7nm5jkuovku7ZcbiAgICAgKi9cblxuICAgIG9uS2V5VXAoZSkge1xuICAgICAgICAvLyBkZWxldGUga2V5RG93bkxpc3RbZVtcImtleUNvZGVcIl1dO1xuICAgICAgICBsZXQgZGlyZWN0aW9uID0gXCJcIjtcbiAgICAgICAgc3dpdGNoIChlLmtleUNvZGUpIHtcbiAgICAgICAgICAgIGNhc2UgMzc6IGRpcmVjdGlvbiA9ICdsZWZ0JzsgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIDM4OiBkaXJlY3Rpb24gPSAndG9wJzsgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIDM5OiBkaXJlY3Rpb24gPSAncmlnaHQnOyBicmVhaztcbiAgICAgICAgICAgIGNhc2UgNDA6IGRpcmVjdGlvbiA9ICdkb3duJzsgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgY29uc29sZS5sb2coJ2RpcmVjdGlvbiBpcyAnICsgZGlyZWN0aW9uKVxuICAgICAgICBpZiAoZGlyZWN0aW9uKSB0aGlzLm1vdmVCbG9jayhkaXJlY3Rpb24pXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog5omL5py65ruR5Yqo5LqL5Lu2XG4gICAgICovXG4gICAgb25Nb3VzZURvd24ocGFyYW1zKSB7XG4gICAgICAgIHRoaXMuc3RhcnRQID0gW0xheWEuc3RhZ2UubW91c2VYLCBMYXlhLnN0YWdlLm1vdXNlWV07XG4gICAgfVxuICAgIG9uTW91c2VVcCgpIHtcbiAgICAgICAgbGV0IGVuZFAgPSBbTGF5YS5zdGFnZS5tb3VzZVgsIExheWEuc3RhZ2UubW91c2VZXTtcbiAgICAgICAgbGV0IGRpcmVjdGlvbiA9IFwiXCI7XG4gICAgICAgIGxldCBtb3ZlWCA9IGVuZFBbMF0gLSB0aGlzLnN0YXJ0UFswXTtcbiAgICAgICAgbGV0IG1vdmVZID0gZW5kUFsxXSAtIHRoaXMuc3RhcnRQWzFdO1xuICAgICAgICBpZiAoTWF0aC5hYnMobW92ZVgpID4gTWF0aC5hYnMobW92ZVkpKSB7XG4gICAgICAgICAgICBpZiAoTWF0aC5hYnMobW92ZVgpID4gODApIGRpcmVjdGlvbiA9IG1vdmVYID4gMCA/ICdyaWdodCcgOiAnbGVmdCc7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpZiAoTWF0aC5hYnMobW92ZVkpID4gODApIGRpcmVjdGlvbiA9IG1vdmVZID4gMCA/ICdkb3duJyA6ICd0b3AnO1xuICAgICAgICB9XG4gICAgICAgIC8vIGNvbnNvbGUubG9nKGRpcmVjdGlvbiwgbW92ZVgsIG1vdmVZKVxuICAgICAgICBpZiAoZGlyZWN0aW9uKSB0aGlzLm1vdmVCbG9jayhkaXJlY3Rpb24pXG4gICAgfVxuICAgIC8qKlxuICAgICAqIOmAu+i+keWkhOeQhlxuICAgICAqL1xuXG4gICAgLy8g5qC85byP5YyW5qOL55uYXG4gICAgcmVmcmVzaFRhYmxlKCkge1xuICAgICAgICBjb25zb2xlLmxvZygn5omn6KGM5LqG77yB77yB77yBJylcbiAgICAgICAgdGhpcy5wTm93ID0gWzAsIDBdO1xuICAgICAgICB0aGlzLmxldmVsID0gTGF5YS5Mb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnZ2FtZUxldmVsJyk7XG4gICAgICAgIC8vIGNvbnNvbGUubG9nKHRoaXMubGV2ZWwpXG4gICAgICAgIHRoaXMubnVtRGF0YSA9IGdldE51bSh0aGlzLmxldmVsKS5pdGVtcztcbiAgICAgICAgdGhpcy5jb2wgPSBnZXROdW0odGhpcy5sZXZlbCkuY29sO1xuICAgICAgICB0aGlzLnJvdyA9IGdldE51bSh0aGlzLmxldmVsKS5yb3c7XG4gICAgICAgIHRoaXMuZ2FiID0gMjAgKyAoNCAtIHRoaXMucm93KSAqIDVcbiAgICAgICAgdGhpcy50V2lkdGggPSA3NTAgLSAyICogdGhpcy54Oy8v5qGM6Z2i5a695bqmXG4gICAgICAgIHRoaXMuaVdpZHRoID0gKHRoaXMudFdpZHRoIC0gKHRoaXMucm93ICsgMSkgKiB0aGlzLmdhYikgLyB0aGlzLnJvdzsvL+WNleS4queahOmrmOW6plxuICAgICAgICB0aGlzLnRIZWlnaHQgPSB0aGlzLmlXaWR0aCAqIHRoaXMuY29sIC0gMSArICh0aGlzLmNvbCArIDEpICogdGhpcy5nYWI7XG4gICAgICAgIHRoaXMuYXJyID0gW107XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5jb2w7IGkrKykge1xuICAgICAgICAgICAgdGhpcy5hcnJbaV0gPSBbXTtcbiAgICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgdGhpcy5yb3c7IGorKykge1xuICAgICAgICAgICAgICAgIHRoaXMuYXJyW2ldW2pdID0gdGhpcy5udW1EYXRhW2kgKiB0aGlzLnJvdyArIGpdO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgbW92ZUJsb2NrKGRpcmVjdGlvbikge1xuICAgICAgICBpZiAoIXRoaXMuaXNHYW1pbmcpIHJldHVybjtcblxuICAgICAgICBsZXQgYiA9IHRoaXMucE5vd1swXSxcbiAgICAgICAgICAgIGEgPSB0aGlzLnBOb3dbMV07XG5cbiAgICAgICAgLy8gdGhpcy5hcnJbYV1bYl0gPSB0aGlzLmFyclthXVtiXSA9PSBcIjFcIiA/IFwiMFwiIDogXCIxXCI7XG4gICAgICAgIGlmIChkaXJlY3Rpb24gPT0gXCJkb3duXCIpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnBOb3dbMV0gPj0gdGhpcy5jb2wgLSAxKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5wTm93WzFdKys7XG4gICAgICAgIH0gZWxzZSBpZiAoZGlyZWN0aW9uID09IFwidG9wXCIpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnBOb3dbMV0gPD0gMCkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMucE5vd1sxXS0tO1xuICAgICAgICB9IGVsc2UgaWYgKGRpcmVjdGlvbiA9PSBcInJpZ2h0XCIpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnBOb3dbMF0gPj0gdGhpcy5yb3cgLSAxKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5wTm93WzBdKys7XG4gICAgICAgIH0gZWxzZSBpZiAoZGlyZWN0aW9uID09IFwibGVmdFwiKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5wTm93WzBdIDw9IDApIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLnBOb3dbMF0tLTtcbiAgICAgICAgfVxuXG4gICAgICAgIGxldCBqID0gdGhpcy5wTm93WzBdLFxuICAgICAgICAgICAgaSA9IHRoaXMucE5vd1sxXTtcbiAgICAgICAgaWYgKHRoaXMuYXJyW2ldW2pdLmlzVXNlZCkge1xuICAgICAgICAgICAgdGhpcy5wTm93WzBdID0gYjtcbiAgICAgICAgICAgIHRoaXMucE5vd1sxXSA9IGE7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5mcm9udFBvc3Rpb25bMF0gPSBiO1xuICAgICAgICB0aGlzLmZyb250UG9zdGlvblsxXSA9IGE7XG5cbiAgICAgICAgdGhpcy5hcnJbaV1bal0ubnVtID0gdGhpcy5hcnJbaV1bal0ubnVtID09IFwiMVwiID8gXCIwXCIgOiBcIjFcIjtcbiAgICAgICAgdGhpcy5hcnJbaV1bal0uaXNVc2VkID0gdGhpcy5hcnJbaV1bal0ubnVtID09IFwiMVwiID8gdHJ1ZSA6IGZhbHNlO1xuXG4gICAgICAgIHRoaXMuZHJhd1RhYmxlKCk7XG4gICAgICAgIC8vIOaSreaUvua7keWKqOmfs+aViFxuICAgICAgICBTb3VuZE1hbmFnZXIuc2V0U291bmRWb2x1bWUoMC41KTtcbiAgICAgICAgU291bmRNYW5hZ2VyLnBsYXlTb3VuZChcImFzc2V0cy9tdXNpYy9kb25nLm1wM1wiLCAxLCBudWxsLCBudWxsLCAwKTtcbiAgICB9XG4gICAgLy8g5Yik5pat5piv5ZCm5aSx6LSl5Lul5Y+K5oiQ5YqfXG4gICAganVkZ2VTdWNjZXNzKCkge1xuICAgICAgICAvLyDliKTmlq3mmK/lkKbotaLkuobnmoTpgLvovpFcbiAgICAgICAgbGV0IGlzV2luID0gdGhpcy5hcnIuZXZlcnkoaXRlbXMgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIGl0ZW1zLmV2ZXJ5KGl0ZW0gPT4gaXRlbS5udW0gPT0gJzEnKVxuICAgICAgICB9KVxuICAgICAgICBjb25zb2xlLmxvZyh0aGlzLmFycik7XG4gICAgICAgIGlmIChpc1dpbikge1xuICAgICAgICAgICAgU291bmRNYW5hZ2VyLnBsYXlTb3VuZChcImFzc2V0cy9tdXNpYy93aW4ubXAzXCIsIDEsIG51bGwsIG51bGwsIDUwMDApO1xuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5zaG93V2luKClcbiAgICAgICAgICAgIH0sIDUwMClcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIC8vIOmqjOivgeaYr+WQpuWksei0pVxuICAgICAgICAgICAgbGV0IGogPSB0aGlzLnBOb3dbMF0sXG4gICAgICAgICAgICAgICAgaSA9IHRoaXMucE5vd1sxXTtcbiAgICAgICAgICAgIGlmICgoaSArIDEgPCB0aGlzLmNvbCAmJiAhdGhpcy5hcnJbaSArIDFdW2pdLmlzVXNlZCkgfHxcbiAgICAgICAgICAgICAgICAoaiArIDEgPCB0aGlzLnJvdyAmJiAhdGhpcy5hcnJbaV1baiArIDFdLmlzVXNlZCkgfHxcbiAgICAgICAgICAgICAgICAoaSAtIDEgPj0gMCAmJiAhdGhpcy5hcnJbaSAtIDFdW2pdLmlzVXNlZCkgfHxcbiAgICAgICAgICAgICAgICAoaiAtIDEgPj0gMCAmJiAhdGhpcy5hcnJbaV1baiAtIDFdLmlzVXNlZCkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuc2hvd0ZhaWwoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgfVxuICAgIC8vIOmHjee9rua4uOaIj1xuICAgIHJlZnJlc2goaXNGaXJzdCkge1xuICAgICAgICB0aGlzLmNsb3NlQWxlcnQoKVxuICAgICAgICB0aGlzLnJlZnJlc2hUYWJsZSgpXG4gICAgICAgIHRoaXMuZHJhd1RhYmxlKHRydWUsIG51bGwpXG4gICAgfVxuICAgIC8vIOi/lOWbniBIb21lXG4gICAgcmV0dXJuSG9tZSgpIHtcbiAgICAgICAgJG9iLmVtaXQoJ3JldHVybkhvbWUnKVxuICAgICAgICB0aGlzLmNsZWFyUGxhY2VBbGwoKVxuICAgICAgICAvLyBuZXcgRHJhd0hvbWUoKVxuICAgIH1cbiAgICAvLyDmuIXpmaTmiYDmnInnlLvluIPnmoTkuJzopb9cbiAgICBjbGVhclBsYWNlQWxsKGlzd2luKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCfmiafooYwnKVxuICAgICAgICBjb25zb2xlLmxvZyh0aGlzLndpbkxpbmUpO1xuICAgICAgICAvLyDmuIXpmaTliqjnlLtcblxuICAgICAgICBpZiAoaXN3aW4pIHtcbiAgICAgICAgICAgIHRoaXMud2luTGluZS5wYXVzZSgpO1xuICAgICAgICAgICAgdGhpcy53aW5MaW5lLmRlc3Ryb3koKTtcbiAgICAgICAgICAgIC8vIHRoaXMud2luTW92ZUxpbmUuZGVzdHJveSgpO1xuICAgICAgICB9XG4gICAgICAgIC8vIOa4hemZpOeUu+W4g1xuICAgICAgICB0aGlzLmNsZWFyU3AodGhpcy5nYW1lX2JnKTtcbiAgICAgICAgdGhpcy5jbGVhclNwKHRoaXMudGFibGVfYmcsIDAuNSk7XG4gICAgICAgIC8vIHRoaXMudG9wU3AuZGVzdHJveSgpO1xuICAgICAgICB0aGlzLmNsZWFyU3AodGhpcy5yZWZyZXNoU3ApO1xuICAgICAgICB0aGlzLmNsZWFyU3AodGhpcy5yZXR1cm5TcCk7XG4gICAgICAgIHRoaXMuY2xlYXJTcCh0aGlzLnRpcFRleHQpO1xuICAgICAgICB0aGlzLmNsZWFyU3AodGhpcy5udW1UZXh0KTtcblxuICAgICAgICB0aGlzLmNsZWFyU3AodGhpcy5zbGlkZUJsb2NrLCAwLjIpO1xuXG4gICAgICAgIHRoaXMuY2xlYXJTcCh0aGlzLmZhaWxCZ1NwKTtcbiAgICAgICAgdGhpcy5jbGVhclNwKHRoaXMuZmFpbE1hc2tTcCk7XG4gICAgICAgIHRoaXMuY2xlYXJTcCh0aGlzLmZhaWxSZWZyZXNoKTtcbiAgICAgICAgdGhpcy5jbGVhclNwKHRoaXMuZmFpbFJldHVybik7XG4gICAgICAgIC8vIGRlYnVnZ2VyXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5jb2w7IGkrKykge1xuICAgICAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCB0aGlzLnJvdzsgaisrKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jbGVhclNwKHRoaXMuaXRlbXNTcHJpdGVbaV1bal0sIDApXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgLy8gZGVidWdnZXJcbiAgICAgICAgdGhpcy5zbGlkZUJsb2NrID0gXCJcIlxuICAgICAgICAvLyDkuovku7bnm5HlkKzlpLHmlYhcbiAgICAgICAgdGhpcy5pc0dhbWluZyA9IGZhbHNlO1xuXG4gICAgfVxuICAgIC8vIOWwgeijhWNsZWFy55qE5LqL5Lu2XG4gICAgY2xlYXJTcChzcCwgYWxwaGEgPSAxKSB7XG4gICAgICAgIC8vIGNvbnNvbGUubG9nKHNwKTtcbiAgICAgICAgaWYgKCFzcCkgcmV0dXJuO1xuICAgICAgICBUd2Vlbi5mcm9tKHNwLCB7IGFscGhhOiBhbHBoYSB9LCA1MDApLnRvKHNwLCB7IGFscGhhOiAwIH0sIDUwMCk7XG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgc3AuZGVzdHJveSgpXG4gICAgICAgIH0sIDE1MDApO1xuICAgIH1cbiAgICAvLyDovpPkuobnmoTpgLvovpFcbiAgICBzaG93RmFpbCgpIHtcbiAgICAgICAgU291bmRNYW5hZ2VyLnBsYXlTb3VuZChcImFzc2V0cy9tdXNpYy93aW4ubXAzXCIsIDEsIG51bGwsIG51bGwsIDEzKTtcblxuICAgICAgICB0aGlzLmZhaWxNYXNrU3AgPSBuZXcgU3ByaXRlKCk7XG4gICAgICAgIHRoaXMuZmFpbE1hc2tTcC5zaXplKDc1MCwgQnJvd3Nlci5oZWlnaHQpO1xuICAgICAgICB0aGlzLmZhaWxNYXNrU3AubG9hZEltYWdlKCdhc3NldHMvaW1hZ2VzL2FsZXJ0X2ZhaWxfbWFzay5wbmcnKVxuICAgICAgICBMYXlhLnN0YWdlLmFkZENoaWxkKHRoaXMuZmFpbE1hc2tTcCk7XG4gICAgICAgIHRoaXMuZmFpbE1hc2tTcC56T3JkZXIgPSA1O1xuICAgICAgICB0aGlzLmZhaWxNYXNrU3AuYWxwaGEgPSAwO1xuICAgICAgICBUd2Vlbi50byh0aGlzLmZhaWxNYXNrU3AsIHtcbiAgICAgICAgICAgIGFscGhhOiAxXG4gICAgICAgIH0sIDI1MCwgRWFzZS5saW5lYXJJbiwgbnVsbCwgMjAwKVxuXG4gICAgICAgIC8vIOeUu+WNoeeJh+iDjOaZr1xuICAgICAgICB0aGlzLmZhaWxCZ1NwID0gbmV3IFNwcml0ZSgpO1xuICAgICAgICB0aGlzLmZhaWxCZ1NwLnNpemUoNjU1LCA1NTgpO1xuICAgICAgICBMYXlhLnN0YWdlLmFkZENoaWxkKHRoaXMuZmFpbEJnU3ApO1xuICAgICAgICB0aGlzLmZhaWxCZ1NwLmxvYWRJbWFnZSgnYXNzZXRzL2ltYWdlcy9hbGVydF9mYWlsX2JnLnBuZycpO1xuICAgICAgICB0aGlzLmZhaWxCZ1NwLnBvcyg1MCwgLTU1MCk7XG4gICAgICAgIHRoaXMuZmFpbEJnU3Auek9yZGVyID0gNjtcbiAgICAgICAgdGhpcy5mYWlsQmdTcC5hbHBoYSA9IDE7XG4gICAgICAgIC8vIOi/m+WFpeWKqOeUu1xuICAgICAgICBUd2Vlbi50byh0aGlzLmZhaWxCZ1NwLCB7XG4gICAgICAgICAgICB5OiAyNTAsXG4gICAgICAgICAgICBhbHBoYTogMVxuICAgICAgICB9LCA1NTAsIEVhc2UuYm91bmNlT3V0LCBudWxsLCAyMDApXG5cbiAgICAgICAgLy8g55S76L+U5Zue5oyJ6ZKuXG4gICAgICAgIHRoaXMuZmFpbFJldHVybiA9IG5ldyBTcHJpdGUoKVxuICAgICAgICB0aGlzLmZhaWxSZXR1cm4uc2l6ZSgxNzAsIDEyNilcbiAgICAgICAgTGF5YS5zdGFnZS5hZGRDaGlsZCh0aGlzLmZhaWxSZXR1cm4pXG4gICAgICAgIHRoaXMuZmFpbFJldHVybi5sb2FkSW1hZ2UoJ2Fzc2V0cy9pbWFnZXMvcmV0dXJuX2J0bi5wbmcnKVxuICAgICAgICB0aGlzLmZhaWxSZXR1cm4ub24oJ2NsaWNrJywgdGhpcywgdGhpcy5yZXR1cm5Ib21lKVxuICAgICAgICB0aGlzLmZhaWxSZXR1cm4ucG9zKDkwMCwgNDgwKVxuICAgICAgICB0aGlzLmZhaWxSZXR1cm4uek9yZGVyID0gNztcbiAgICAgICAgdGhpcy5mYWlsUmV0dXJuLmFscGhhID0gMTtcblxuXG4gICAgICAgIFR3ZWVuLnRvKHRoaXMuZmFpbFJldHVybiwge1xuICAgICAgICAgICAgeDogNTAwLFxuICAgICAgICB9LCA1NTAsIEVhc2UuYm91bmNlT3V0LCBudWxsLCAyMDApXG4gICAgICAgIC8vIOeUu+mHjeaWsOaMiemSrlxuICAgICAgICB0aGlzLmZhaWxSZWZyZXNoID0gbmV3IFNwcml0ZSgpXG4gICAgICAgIHRoaXMuZmFpbFJlZnJlc2guc2l6ZSgxNzAsIDEyNilcbiAgICAgICAgTGF5YS5zdGFnZS5hZGRDaGlsZCh0aGlzLmZhaWxSZWZyZXNoKVxuICAgICAgICB0aGlzLmZhaWxSZWZyZXNoLmxvYWRJbWFnZSgnYXNzZXRzL2ltYWdlcy9yZWZyZXNoX2J0bi5wbmcnKVxuICAgICAgICB0aGlzLmZhaWxSZWZyZXNoLm9uKCdjbGljaycsIHRoaXMsIHRoaXMucmVmcmVzaClcbiAgICAgICAgdGhpcy5mYWlsUmVmcmVzaC5wb3MoOTAwLCA2NTApXG4gICAgICAgIHRoaXMuZmFpbFJlZnJlc2guek9yZGVyID0gN1xuICAgICAgICB0aGlzLmZhaWxSZWZyZXNoLmFscGhhID0gMVxuICAgICAgICBUd2Vlbi50byh0aGlzLmZhaWxSZWZyZXNoLCB7XG4gICAgICAgICAgICB4OiA1MDAsXG4gICAgICAgIH0sIDU1MCwgRWFzZS5zdHJvbmdJbiwgbnVsbCwgMTAwKVxuICAgIH1cbiAgICAvLyDotaLkuobnmoTpgLvovpFcbiAgICBzaG93V2luKCkge1xuICAgICAgICBjb25zb2xlLmxvZyh0aGlzLnBOb3cpO1xuICAgICAgICB0aGlzLnRpcFRleHQudGV4dCA9IFwiICBUTyBPTkUg77yBXCJcbiAgICAgICAgLy8gbGV0IHggPSB0aGlzLnBOb3dbeF1cbiAgICAgICAgbGV0IG1vdmVYID0gdGhpcy54ICsgdGhpcy5wTm93WzBdICogKHRoaXMuaVdpZHRoICsgdGhpcy5nYWIpICsgdGhpcy5nYWIsIG1vdmVZID0gdGhpcy55ICsgdGhpcy5wTm93WzFdICogKHRoaXMuaVdpZHRoICsgdGhpcy5nYWIpICsgdGhpcy5nYWI7XG4gICAgICAgIGNvbnNvbGUubG9nKG1vdmVYLCBtb3ZlWSk7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5jb2w7IGkrKykge1xuICAgICAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCB0aGlzLnJvdzsgaisrKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMucE5vd1swXSA9PSBqICYmIHRoaXMucE5vd1sxXSA9PSBpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaXRlbXNTcHJpdGVbaV1bal0ub24oRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMuY2xpY2tUb05leHQpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLml0ZW1zU3ByaXRlW2ldW2pdLmxvYWRJbWFnZSgnYXNzZXRzL2ltYWdlcy9pdGVtLWVudGVyLnBuZycpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLml0ZW1zU3ByaXRlW2ldW2pdLnpPcmRlciA9IDY7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMud2luTGluZSA9IG5ldyBUaW1lTGluZSgpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLndpbkxpbmUuYWRkTGFiZWwoJ2JpZycsIDApLnRvKHRoaXMuaXRlbXNTcHJpdGVbaV1bal0sIHsgc2NhbGVYOiAxLjEsIHNjYWxlWTogMS4xIH0sIDMwMCwgbnVsbCwgMzAwKVxuICAgICAgICAgICAgICAgICAgICAgICAgLmFkZExhYmVsKCdiaWcnLCAwKS50byh0aGlzLml0ZW1zU3ByaXRlW2ldW2pdLCB7IHNjYWxlWDogMSwgc2NhbGVZOiAxIH0sIDMwMCwgbnVsbCwgMzAwKVxuICAgICAgICAgICAgICAgICAgICB0aGlzLndpbkxpbmUucGxheSgwLCB0cnVlKTtcblxuICAgICAgICAgICAgICAgICAgICB0aGlzLmNsZWFyU3AodGhpcy5yZXR1cm5TcClcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jbGVhclNwKHRoaXMucmVmcmVzaFNwKVxuICAgICAgICAgICAgICAgICAgICB0aGlzLmNsZWFyU3AodGhpcy50YWJsZV9iZywgMC41KVxuXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gdGhpcy53aW5Nb3ZlTGluZSA9IG5ldyBUaW1lTGluZSgpXG4gICAgICAgICAgICAgICAgICAgIC8vIHRoaXMud2luTW92ZUxpbmVcbiAgICAgICAgICAgICAgICAgICAgLy8gICAgIC5hZGRMYWJlbCgnYmlnJywgMClcbiAgICAgICAgICAgICAgICAgICAgLy8gICAgIC50byh0aGlzLml0ZW1zU3ByaXRlW2ldW2pdLCB7XG4gICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgcGl2b3RYOiB0aGlzLmlXaWR0aCAqIDAuNSxcbiAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICBwaXZvdFk6IHRoaXMuaVdpZHRoICogMC41LFxuICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgIHg6IG1vdmVYICsgdGhpcy5pV2lkdGggKiAwLjUsXG4gICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgeTogbW92ZVkgKyB0aGlzLmlXaWR0aCAqIDAuNSxcbiAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICBhbHBoYTogMCxcbiAgICAgICAgICAgICAgICAgICAgLy8gICAgIH0sIDIwMCwgbnVsbCwgMzAwKVxuICAgICAgICAgICAgICAgICAgICAvLyB0aGlzLndpbk1vdmVMaW5lLnBsYXkoMCwgZmFsc2UpO1xuICAgICAgICAgICAgICAgICAgICBUd2Vlbi50byh0aGlzLml0ZW1zU3ByaXRlW2ldW2pdLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwaXZvdFg6IHRoaXMuaVdpZHRoICogMC41LFxuICAgICAgICAgICAgICAgICAgICAgICAgcGl2b3RZOiB0aGlzLmlXaWR0aCAqIDAuNSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHg6IG1vdmVYICsgdGhpcy5pV2lkdGggKiAwLjUsXG4gICAgICAgICAgICAgICAgICAgICAgICB5OiBtb3ZlWSArIHRoaXMuaVdpZHRoICogMC41LFxuICAgICAgICAgICAgICAgICAgICAgICAgYWxwaGE6IDBcbiAgICAgICAgICAgICAgICAgICAgfSwgNTAwKVxuXG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy8g54K55Ye76L+b5YWl5LiL5LiA5YWzXG4gICAgY2xpY2tUb05leHQoKSB7XG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5jbGVhclBsYWNlQWxsKHRydWUpO1xuICAgICAgICB9LCA1MDApXG5cbiAgICAgICAgLy8g5aaC5p6c5LiN5piv546p55qE5Lul5YmN55qE5YWz5Y2hXG4gICAgICAgIGlmICh0aGlzLmxldmVsIC0gMSA9PSBMYXlhLkxvY2FsU3RvcmFnZS5nZXRJdGVtKCdyZWFsTGV2ZWwnKSkge1xuICAgICAgICAgICAgTGF5YS5Mb2NhbFN0b3JhZ2Uuc2V0SXRlbSgncmVhbExldmVsJywgdGhpcy5sZXZlbCsrKVxuICAgICAgICAgICAgJG9iLmVtaXQoJ25leHRHYW1lJywgdHJ1ZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAkb2IuZW1pdCgnbmV4dEdhbWUnLCBmYWxzZSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy/lhbPpl63lvLnnqpdcbiAgICBjbG9zZUFsZXJ0KCkge1xuICAgICAgICBpZiAodGhpcy5mYWlsQmdTcCkge1xuICAgICAgICAgICAgdGhpcy5mYWlsQmdTcC5kZXN0cm95KCk7XG4gICAgICAgICAgICB0aGlzLmZhaWxNYXNrU3AuZGVzdHJveSgpO1xuICAgICAgICAgICAgdGhpcy5mYWlsUmVmcmVzaC5kZXN0cm95KCk7XG4gICAgICAgICAgICB0aGlzLmZhaWxSZXR1cm4uZGVzdHJveSgpO1xuICAgICAgICB9XG4gICAgfVxufSIsIi8vIOS4u+mhteebuOWFs+mAu+i+keS7peWPiuaAu+WFpeWPo1xuaW1wb3J0IERSQVcgZnJvbSAnLi4vbGliL2dyYXBoaWNzJztcbmltcG9ydCBHYW1lQ29uZmlnIGZyb20gXCIuLi9HYW1lQ29uZmlnXCI7XG5pbXBvcnQgeyBnZXROdW0gfSBmcm9tIFwiLi4vbGliL2dhbWVEYXRhXCI7XG5pbXBvcnQgRHJhd0dhbWUgZnJvbSBcIi4vZHJhd1BsYWNlXCI7XG5cbnZhciBTcHJpdGUgPSBMYXlhLlNwcml0ZTtcbnZhciBTdGFnZSA9IExheWEuU3RhZ2U7XG52YXIgQnJvd3NlciA9IExheWEuQnJvd3NlcjtcbnZhciBIYW5kbGVyID0gTGF5YS5IYW5kbGVyO1xudmFyIFdlYkdMID0gTGF5YS5XZWJHTDtcbnZhciBFdmVudCA9IExheWEuRXZlbnQ7XG52YXIgTG9hZGVyID0gTGF5YS5Mb2FkZXI7XG52YXIgVHdlZW4gPSBMYXlhLlR3ZWVuO1xudmFyIEVhc2UgPSBMYXlhLkVhc2U7XG52YXIgU291bmRNYW5hZ2VyID0gTGF5YS5Tb3VuZE1hbmFnZXI7XG52YXIgVGV4dCA9IExheWEuVGV4dDtcbnZhciBHbG93RmlsdGVyID0gTGF5YS5HbG93RmlsdGVyO1xudmFyIFRpbWVMaW5lID0gTGF5YS5UaW1lTGluZTtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRHJhd0hvbWUge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICAvLyBzcHJpdGVcbiAgICAgICAgdGhpcy5zZW5jZV9iZyA9IFwiXCJcbiAgICAgICAgdGhpcy5maXJzdF90ZXh0ID0gXCJcIlxuICAgICAgICB0aGlzLm5leHRfYnRuID0gXCJcIlxuXG4gICAgICAgIHRoaXMudGV4dEFyciA9IFtcbiAgICAgICAgICAgIFwi5Y2B5YWr5LiW57qqXFxu5b635Zu95pWw55CG5aSn5biI6I6x5biD5bC85YW55Y+R546w5LqG5LqM6L+b5Yi2XCIsXG4gICAgICAgICAgICBcIui/meS4queUsTDlkowx57uE5oiQ55qE5pWw5a2X55S16LevXFxu5omT5byA5LqG5LiA5Liq5aWH5bm76ICM57K+5YiG55qE5LiW55WMXCIsXG4gICAgICAgICAgICBcIueUseS6jueJueauiueahOeul+azlVxcbuWcqOi/meS4quS6jOi/m+WItuS4lueVjOmHjFwiLFxuICAgICAgICAgICAgXCLkuIDkuKrnroDljZXnmoTlsI/mlbDkvJrooqvnvJbor5HmiJDml6DpmZDnmoQw5ZKMMVwiLFxuICAgICAgICAgICAgXCLogIzov5nkupvml6DpmZDnmoQw5ZKMMVxcbuWwseaYr+S9oOimgemdouS4tOeahOavj+mHjeWFs+WNoVwiLFxuICAgICAgICAgICAgXCLorrDkvY8s5L2g6KaB5LiN55WZ5L2Z5Yqb55qE5oqK5pWw5a2X5Y+Y5oiQMVwiLFxuICAgICAgICAgICAgXCLnqbbnq5/osIHvvJ9cXG7miY3mmK/kuLvlrrDmlbDlrZfnmoTkuLvkurpcIixcbiAgICAgICAgICAgIFwiRlJPTSBaRVJPXCIsXG4gICAgICAgICAgICBcIlRPIE9ORVwiLFxuICAgICAgICBdXG4gICAgICAgIHRoaXMuaXNTaG93aW5nID0gZmFsc2VcblxuXG4gICAgICAgIHRoaXMuaW5pdCgpXG4gICAgfVxuICAgIGluaXQoKSB7XG4gICAgICAgIC8vIExheWEuTG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJpdGVtXCIsIHN0cik7XG4gICAgICAgIHRoaXMuc2hvd1N0YXJ0U2VuY2UoKVxuICAgICAgICAvLyBMYXlhLkxvY2FsU3RvcmFnZS5zZXRJdGVtKFwicmVhbExldmVsXCIsIDAuMDIpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOe7mOWItueUu+W4g1xuICAgICAqL1xuXG4gICAgLy8g57uY5Yi26IOM5pmvXG4gICAgZHJhd0JnKCkge1xuICAgICAgICAvLyDlvIDlp4vnmoTlnLrmma9cbiAgICAgICAgdGhpcy5zZW5jZV9iZyA9IG5ldyBMYXlhLlNwcml0ZSgpO1xuICAgICAgICB0aGlzLnNlbmNlX2JnLnNpemUoNzUwLCBCcm93c2VyLmhlaWdodCk7XG4gICAgICAgIExheWEuc3RhZ2UuYWRkQ2hpbGQodGhpcy5zZW5jZV9iZyk7XG4gICAgICAgIHRoaXMuc2VuY2VfYmcubG9hZEltYWdlKCdhc3NldHMvaW1hZ2VzL3NlbmNlLTBfYmcucG5nJyk7XG4gICAgICAgIHRoaXMuc2VuY2VfYmcuYWxwaGEgPSAwO1xuICAgICAgICBUd2Vlbi50byh0aGlzLnNlbmNlX2JnLCB7XG4gICAgICAgICAgICBhbHBoYTogMVxuICAgICAgICB9LCA1MDAsIEVhc2UubGluZWFySW4sIG51bGwsIDIwMClcbiAgICAgICAgLy8g5paH5a2X55qE5Yqo55S76L+H5Zy6XG4gICAgICAgIHRoaXMuZHJhd1RleHQodGhpcy50ZXh0QXJyWzBdKTtcbiAgICAgICAgbGV0IGkgPSAxO1xuICAgICAgICBsZXQgdGV4dEludGVydmFsID0gc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5sb2coaSlcbiAgICAgICAgICAgIHRoaXMuZHJhd1RleHQodGhpcy50ZXh0QXJyW2ldLCBpKTtcbiAgICAgICAgICAgIGkrKztcbiAgICAgICAgICAgIGlmIChpID4gdGhpcy50ZXh0QXJyLmxlbmd0aCAtIDEpIGNsZWFySW50ZXJ2YWwodGV4dEludGVydmFsKVxuICAgICAgICB9LCA1MDAwKVxuICAgIH1cbiAgICAvLyDnu5jliLbpobbpg6jmloflrZdcbiAgICBkcmF3VGV4dCh0ZXh0Q29udGVudCwgaW5kZXgpIHtcbiAgICAgICAgaWYgKCF0aGlzLmZpcnN0X3RleHQpIHtcbiAgICAgICAgICAgIHRoaXMuZmlyc3RfdGV4dCA9IG5ldyBUZXh0KClcbiAgICAgICAgICAgIHRoaXMuZmlyc3RfdGV4dC5jb2xvciA9IFwiI2ZmZlwiXG4gICAgICAgICAgICB0aGlzLmZpcnN0X3RleHQuZm9udFNpemUgPSAzNVxuICAgICAgICAgICAgdGhpcy5maXJzdF90ZXh0LndpZHRoID0gNjAwO1xuICAgICAgICAgICAgdGhpcy5maXJzdF90ZXh0LmFsaWduID0gXCJjZW50ZXJcIjtcbiAgICAgICAgICAgIHRoaXMuZmlyc3RfdGV4dC5sZWFkaW5nID0gMjA7XG4gICAgICAgICAgICB0aGlzLmZpcnN0X3RleHQueCA9IDc1XG4gICAgICAgICAgICB0aGlzLmZpcnN0X3RleHQueSA9IDIwMFxuICAgICAgICAgICAgdGhpcy5maXJzdF90ZXh0LmFscGhhID0gMDtcbiAgICAgICAgICAgIExheWEuc3RhZ2UuYWRkQ2hpbGQodGhpcy5maXJzdF90ZXh0KTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmZpcnN0X3RleHQudGV4dCA9IHRleHRDb250ZW50O1xuICAgICAgICAvLyDlpoLmnpzmmK/mnIDlkI7kuIDkuKrliJnkuI3mtojlpLHkuJTmmL7npLrkuIvkuIDmraXmjInpkq5cbiAgICAgICAgaWYgKGluZGV4ID09IHRoaXMudGV4dEFyci5sZW5ndGggLSAxKSB7XG4gICAgICAgICAgICB2YXIgdGltZUxpbmUgPSBuZXcgVGltZUxpbmUoKTtcbiAgICAgICAgICAgIHRpbWVMaW5lLmFkZExhYmVsKFwic2hvd1wiLCAwKS50byh0aGlzLmZpcnN0X3RleHQsIHsgYWxwaGE6IDEgfSwgMTAwMCwgbnVsbCwgMTAwMClcbiAgICAgICAgICAgIHRpbWVMaW5lLnBsYXkoMCwgZmFsc2UpO1xuICAgICAgICAgICAgdGhpcy5kcmF3TmV4dEJ0bigpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB2YXIgdGltZUxpbmUgPSBuZXcgVGltZUxpbmUoKTtcbiAgICAgICAgICAgIHRpbWVMaW5lLmFkZExhYmVsKFwic2hvd1wiLCAwKS50byh0aGlzLmZpcnN0X3RleHQsIHsgYWxwaGE6IDEgfSwgMTAwMCwgbnVsbCwgMjAwMClcbiAgICAgICAgICAgICAgICAuYWRkTGFiZWwoXCJoaWRkZW5cIiwgMCkudG8odGhpcy5maXJzdF90ZXh0LCB7IGFscGhhOiAwIH0sIDEwMDAsIG51bGwsIDEwMDApXG4gICAgICAgICAgICB0aW1lTGluZS5wbGF5KDAsIGZhbHNlKTtcbiAgICAgICAgfVxuXG4gICAgfVxuICAgIC8vIOe7mOWItuS4i+S4gOmDqOaMiemSrlxuICAgIGRyYXdOZXh0QnRuKCkge1xuICAgICAgICB0aGlzLm5leHRfYnRuID0gbmV3IFNwcml0ZSgpO1xuICAgICAgICB0aGlzLm5leHRfYnRuLnBvcygzMDQsIDkwMCk7XG4gICAgICAgIHRoaXMubmV4dF9idG4uc2l6ZSgxNDIsIDEwNik7XG4gICAgICAgIExheWEuc3RhZ2UuYWRkQ2hpbGQodGhpcy5uZXh0X2J0bilcbiAgICAgICAgdGhpcy5uZXh0X2J0bi5sb2FkSW1hZ2UoJ2Fzc2V0cy9pbWFnZXMvbmV4dF9idG4ucG5nJylcbiAgICAgICAgdGhpcy5uZXh0X2J0bi5vbihFdmVudC5DTElDSywgdGhpcywgdGhpcy5jbGlja05leHQpO1xuICAgICAgICB0aGlzLm5leHRfYnRuLnpPcmRlciA9IDJcbiAgICAgICAgdGhpcy5uZXh0X2J0bi5hbHBoYSA9IDBcbiAgICAgICAgLy8g57yT5oWi5pi+56S6XG4gICAgICAgIHZhciB0aW1lTGluZSA9IG5ldyBUaW1lTGluZSgpO1xuICAgICAgICB0aW1lTGluZS5hZGRMYWJlbChcInNob3dcIiwgMCkudG8odGhpcy5uZXh0X2J0biwgeyBhbHBoYTogMSB9LCAxMDAwLCBudWxsLCAxMDAwKTtcbiAgICAgICAgdGltZUxpbmUucGxheSgwLCBmYWxzZSk7XG4gICAgfVxuICAgIC8vIOeCueWHu+i/m+WFpeS4i+S4gOWFs1xuICAgIGNsaWNrTmV4dCgpIHtcbiAgICAgICAgdGhpcy5zZW5jZV9iZy56T3JkZXIgPSAtMlxuICAgICAgICB0aGlzLmZpcnN0X3RleHQuek9yZGVyID0gLTFcbiAgICAgICAgdGhpcy5uZXh0X2J0bi56T3JkZXIgPSAtMVxuICAgICAgICB0aGlzLmlzU2hvd2luZyA9IGZhbHNlO1xuICAgICAgICBTb3VuZE1hbmFnZXIuc3RvcEFsbFNvdW5kKCk7XG4gICAgICAgIGxldCByZWFsTGV2ZWwgPSBMYXlhLkxvY2FsU3RvcmFnZS5nZXRJdGVtKCdyZWFsTGV2ZWwnKTtcbiAgICAgICAgaWYgKHJlYWxMZXZlbCA9PSAtMSkge1xuICAgICAgICAgICAgTGF5YS5Mb2NhbFN0b3JhZ2Uuc2V0SXRlbSgncmVhbExldmVsJywgMCk7XG4gICAgICAgICAgICAkb2IuZW1pdCgnbmV4dEdhbWUnLCB0cnVlKTtcbiAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICAkb2IuZW1pdCgnbmV4dEdhbWUnKVxuICAgICAgICB9ICAgXG4gICAgfVxuXG4gICAgLy/mmL7npLow5YWzXG4gICAgc2hvd1N0YXJ0U2VuY2UoKSB7XG4gICAgICAgIGlmICh0aGlzLmlzU2hvd2luZykgcmV0dXJuO1xuXG4gICAgICAgIHRoaXMuZHJhd0JnKCk7XG4gICAgICAgIFNvdW5kTWFuYWdlci5zZXRNdXNpY1ZvbHVtZSgwLjEpO1xuICAgICAgICBTb3VuZE1hbmFnZXIucGxheU11c2ljKFwiYXNzZXRzL211c2ljL3Ryb3VnaHRzLm1wM1wiLCAxLCBudWxsLCBudWxsLCAxMyk7XG4gICAgICAgIC8vIHRoaXMuZHJhd05leHRCdG4oKVxuXG4gICAgICAgIHRoaXMuc2VuY2VfYmcuek9yZGVyID0gMVxuICAgICAgICB0aGlzLmZpcnN0X3RleHQuek9yZGVyID0gMlxuICAgICAgICB0aGlzLmlzU2hvd2luZyA9IHRydWU7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog6YC76L6R5aSE55CGXG4gICAgICovXG59IiwibGV0IGdhbWVEYXRhID0gW1xuICAgIHtcbiAgICAgICAgbnVtOiAwXG4gICAgfSxcbiAgICB7XG4gICAgICAgIG51bTogMC4wMlxuICAgIH0sIHtcbiAgICAgICAgbnVtOiAwLjA4XG4gICAgfSwge1xuICAgICAgICBudW06IDAuMVxuICAgIH0sIHtcbiAgICAgICAgbnVtOiAwLjEzXG4gICAgfSwge1xuICAgICAgICBudW06IDAuMTdcbiAgICB9LFxuICAgIHtcbiAgICAgICAgbnVtOiAwLjJcbiAgICB9LCB7XG4gICAgICAgIG51bTogMC4yMVxuICAgIH0sIHtcbiAgICAgICAgbnVtOiAwLjIzM1xuICAgIH0sIHtcbiAgICAgICAgbnVtOiAwLjI3XG4gICAgfSxcbiAgICB7XG4gICAgICAgIG51bTogMC4zXG4gICAgfSwge1xuICAgICAgICBudW06IDAuMzNcbiAgICB9LCB7XG4gICAgICAgIG51bTogMC4zOFxuICAgIH0sXG4gICAge1xuICAgICAgICBudW06IDAuNDRcbiAgICB9LCB7XG4gICAgICAgIG51bTogMC40NlxuICAgIH0sIHtcbiAgICAgICAgbnVtOiAwLjQ4XG4gICAgfSwge1xuICAgICAgICBudW06IDAuNDlcbiAgICB9LFxuICAgIHtcbiAgICAgICAgbnVtOiAwLjUyXG4gICAgfSxcbiAgICB7XG4gICAgICAgIG51bTogMC42XG4gICAgfSwge1xuICAgICAgICBudW06IDAuNjFcbiAgICB9LCB7XG4gICAgICAgIG51bTogMC42MlxuICAgIH0sIHtcbiAgICAgICAgbnVtOiAwLjY2XG4gICAgfSwge1xuICAgICAgICBudW06IDAuNjY2XG4gICAgfSxcbiAgICB7XG4gICAgICAgIG51bTogMC43XG4gICAgfSwge1xuICAgICAgICBudW06IDAuNzdcbiAgICB9LFxuICAgIHtcbiAgICAgICAgbnVtOiAwLjgxXG4gICAgfSwge1xuICAgICAgICBudW06IDAuODNcbiAgICB9LCB7XG4gICAgICAgIG51bTogMC44OFxuICAgIH0sIHtcbiAgICAgICAgbnVtOiAwLjg5MlxuICAgIH0sXG4gICAge1xuICAgICAgICBudW06IDAuOVxuICAgIH0sIHtcbiAgICAgICAgbnVtOiAwLjkxXG4gICAgfSwge1xuICAgICAgICBudW06IDAuOTJcbiAgICB9LCB7XG4gICAgICAgIG51bTogMC45NVxuICAgIH0sXG4gICAge1xuICAgICAgICBudW06IDAuOTlcbiAgICB9LFxuICAgIHtcbiAgICAgICAgbnVtOiAxXG4gICAgfVxuXVxuXG5mdW5jdGlvbiBnZXROdW0obGV2ZWwpIHtcbiAgICAvLyBjb25zb2xlLmxvZyhsZXZlbClcbiAgICAvLyBjb25zb2xlLmxvZyhnYW1lRGF0YVtOdW1iZXIobGV2ZWwpXSlcbiAgICBsZXQgbnVtID0gZ2FtZURhdGFbTnVtYmVyKGxldmVsKV0ubnVtXG4gICAgbGV0IGFyciA9IHRvQmluYXJ5TGlzdHMobnVtKVxuICAgIGFyci5yb3cgPSBnZXRSb3cobnVtKVxuICAgIGFyci5jb2wgPSBnZXRDb2wobnVtKVxuICAgIGFyci5pdGVtcyA9IGFyci5tYXAoaXRlbSA9PiB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBudW06IGl0ZW0sXG4gICAgICAgICAgICBpc1VzZWQ6IGZhbHNlXG4gICAgICAgIH1cbiAgICB9KVxuICAgIHJldHVybiBhcnI7XG59XG5cbmZ1bmN0aW9uIGdldFJvdyhudW0pIHtcbiAgICBpZiAobnVtIDwgMC4yKSByZXR1cm4gMztcbiAgICBlbHNlIGlmIChudW0gPCAwLjMpIHJldHVybiAzO1xuICAgIGVsc2UgaWYgKG51bSA8IDAuNCkgcmV0dXJuIDQ7XG4gICAgZWxzZSBpZiAobnVtIDwgMC41KSByZXR1cm4gNDtcbiAgICBlbHNlIGlmIChudW0gPCAwLjYpIHJldHVybiA0O1xuICAgIGVsc2UgaWYgKG51bSA8IDAuNykgcmV0dXJuIDU7XG4gICAgLy8gZWxzZSBpZiAobnVtIDwgMC45NSkgcmV0dXJuIDY7XG4gICAgZWxzZSByZXR1cm4gNztcbn1cblxuZnVuY3Rpb24gZ2V0Q29sKG51bSkge1xuICAgIGlmIChudW0gPCAwLjEpIHJldHVybiAyO1xuICAgIGVsc2UgaWYgKG51bSA8IDAuMikgcmV0dXJuIDI7XG4gICAgZWxzZSBpZiAobnVtIDwgMC4yNSkgcmV0dXJuIDM7XG4gICAgZWxzZSBpZiAobnVtIDwgMC4zNSkgcmV0dXJuIDQ7XG4gICAgZWxzZSBpZiAobnVtIDwgMC41KSByZXR1cm4gNDtcbiAgICBlbHNlIGlmIChudW0gPCAwLjYpIHJldHVybiA0O1xuICAgIGVsc2UgaWYgKG51bSA8IDAuNykgcmV0dXJuIDU7XG4gICAgLy8gZWxzZSBpZiAobnVtIDwgMC45NSkgcmV0dXJuIDc7XG4gICAgZWxzZSByZXR1cm4gNlxufVxuXG5mdW5jdGlvbiB0b0JpbmFyeUxpc3RzKG51bSkge1xuICAgIGlmICh0eXBlb2YgKG51bSkgIT0gJ251bWJlcicpIHtcbiAgICAgICAgbnVtID0gTnVtYmVyKG51bSk7XG4gICAgfVxuICAgIGxldCBiaW5hcnkgPSBudW0udG9TdHJpbmcoMikuc3BsaXQoJy4nKVsxXVxuICAgIHJldHVybiBiaW5hcnkuc3BsaXQoJycpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBnZXROdW06IGdldE51bSxcbiAgICAvLyBnZXRHYW1lRGF0YTogZ2V0R2FtZURhdGFcbiAgICBnYW1lRGF0YTogZ2FtZURhdGFcbn0iLCIvLyDlsIHoo4XlkITnp43lvaLnirZcbmV4cG9ydCBkZWZhdWx0IHtcbiAgICAvKipcbiAgICAgKiBAcGFyYW0gc3AgU3ByaXRl5a6e5L6LXG4gICAgICogQHBhcmFtIHgg6LW35aeLeOWdkOagh1xuICAgICAqIEBwYXJhbSB5IOi1t+Wni3nlnZDmoIdcbiAgICAgKiBAcGFyYW0gd2lkdGgg5oC76ZW/XG4gICAgICogQHBhcmFtIGhlaWdodCDmgLvpq5hcbiAgICAgKiBAcGFyYW0gciDlnIbop5LljYrlvoRcbiAgICAgKiBAcGFyYW0gb3B0aW9ucyDphY3nva7poblcbiAgICAgKi9cbiAgICBkcmF3Um91bmRlZFJlY3RhbmdsZTogZnVuY3Rpb24gKHNwLCB4LCB5LCB3aWR0aCwgaGVpZ2h0LCByLCBmaWxsKSB7XG4gICAgICAgIC8vIGNvbnNvbGUubG9nKHdpZHRoLCBoZWlnaHQpXG4gICAgICAgIHZhciByZWxXaWR0aCA9IHdpZHRoIC0gMiAqIHI7XG4gICAgICAgIHZhciByZWxIZWlnaHQgPSBoZWlnaHQgLSAyICogcjtcbiAgICAgICAgc3AuZ3JhcGhpY3MuZHJhd1BhdGgoeCwgeSwgW1xuICAgICAgICAgICAgW1wibW92ZVRvXCIsIHIsIDBdLFxuICAgICAgICAgICAgW1wibGluZVRvXCIsIHdpZHRoIC0gciwgMF0sXG4gICAgICAgICAgICBbXCJhcmNUb1wiLCB3aWR0aCwgMCwgd2lkdGgsIHIsIHJdLFxuICAgICAgICAgICAgW1wibGluZVRvXCIsIHdpZHRoLCBoZWlnaHQgLSByXSxcbiAgICAgICAgICAgIFtcImFyY1RvXCIsIHdpZHRoLCBoZWlnaHQsIHdpZHRoIC0gciwgaGVpZ2h0LCByXSxcbiAgICAgICAgICAgIFtcImxpbmVUb1wiLCByLCBoZWlnaHRdLFxuICAgICAgICAgICAgW1wiYXJjVG9cIiwgMCwgaGVpZ2h0LCAwLCBoZWlnaHQgLSByLCByXSxcbiAgICAgICAgICAgIFtcImxpbmVUb1wiLCAwLCByXSxcbiAgICAgICAgICAgIFtcImFyY1RvXCIsIDAsIDAsIHIsIDAsIHJdLFxuICAgICAgICAgICAgW1wiY2xvc2VQYXRoXCJdXG4gICAgICAgIF0sIHtcbiAgICAgICAgICAgICAgICBmaWxsU3R5bGU6IGZpbGwgfHwgJyNmZjAwMDAnXG4gICAgICAgICAgICB9LCApXG4gICAgfVxufVxuXG4iXX0=
