var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */

var GameConfig = function () {
    function GameConfig() {
        _classCallCheck(this, GameConfig);
    }

    _createClass(GameConfig, null, [{
        key: "init",
        value: function init() {
            //注册Script或者Runtime引用
            var reg = Laya.ClassUtils.regClass;
        }
    }]);

    return GameConfig;
}();

exports.default = GameConfig;

GameConfig.width = 640;
GameConfig.height = 1136;
GameConfig.scaleMode = "fixedwidth";
GameConfig.screenMode = "none";
GameConfig.alignV = "top";
GameConfig.alignH = "left";
GameConfig.startScene = "";
GameConfig.sceneRoot = "";
GameConfig.debug = false;
GameConfig.stat = false;
GameConfig.physicsDebug = false;
GameConfig.exportSceneToJson = true;

GameConfig.init();

},{}],2:[function(require,module,exports){
'use strict';

var _drawPlace = require('./draw/drawPlace');

var _drawPlace2 = _interopRequireDefault(_drawPlace);

var _drawHome = require('./draw/drawHome');

var _drawHome2 = _interopRequireDefault(_drawHome);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(function () {
    var Sprite = Laya.Sprite;
    var Stage = Laya.Stage;
    var Texture = Laya.Texture;
    var Browser = Laya.Browser;
    var Handler = Laya.Handler;
    var WebGL = Laya.WebGL;
    var Event = Laya.Event;
    var Loader = Laya.Loader;
    var SoundManager = Laya.SoundManager;

    // var pageWidth  = Browser.clientWidth;
    // var pageHeight = Browser.clientHeight;
    var pageWidth = 750;
    var pageHeight = 1334;
    var loadBG, loadTiao;

    (function () {
        // 不支持WebGL时自动切换至Canvas
        Laya.init(pageWidth, pageHeight, WebGL);
        //性能统计面板的调用
        //Laya.Stat.show(0,0);
        Laya.stage.alignV = Stage.ALIGN_MIDDLE;
        Laya.stage.alignH = Stage.ALIGN_CENTER;
        Laya.stage.screenAdaptationEnabled = false;
        Laya.stage.scaleMode = "fixedwidth";
        Laya.stage.bgColor = "#4c58ae";
        downLoadMedia();
    })();

    // 加载文件以及滚动条
    function downLoadMedia() {
        //加载静态文件资源
        var assets = ['assets/comp/btn_close.png'];
        // 加载images下的文件
        var imgNames = ['item-0-active.png', 'item-0.png', 'item-1-active.png', 'item-1-lock.png', 'item-1.png', 'refresh_btn.png', 'return_btn.png', 'game-bg.png', 'top_num_screen.png', 'card.png'];
        imgNames.map(function (item) {
            assets.push({
                url: 'assets/images/' + item,
                type: Loader.IMAGE // type类型一定要加！！
            });
        });
        // 加载动画库里的素材
        var imgAniNames = ['card.png'];
        imgAniNames.map(function (item) {
            assets.push({
                url: 'images/' + item,
                type: Loader.IMAGE // type类型一定要加！！
            });
        });

        // 添加音效
        var soundNames = ['shua.mp3', 'dong.mp3'];
        soundNames.map(function (item) {
            assets.push({
                url: 'assets/music/' + item,
                type: Loader.SOUND
            });
        });

        // console.log(assets)
        //加载
        Laya.loader.load(assets, Handler.create(this, init), Handler.create(this, onLoading, null, false), Loader.TEXT);
        // 侦听加载失败
        Laya.loader.on(Event.ERROR, this, onError);

        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //绘制进度条
        loadBG = new Sprite();
        Laya.stage.addChild(loadBG);
        var path = [["moveTo", 8, 0], //画笔的起始点，
        ["arcTo", 0, 0, 0, 8, 8], //p1（500,0）为夹角B，（500,30）为端点p2
        ["arcTo", 0, 16, 8, 16, 8], ["lineTo", 200, 16], ["arcTo", 208, 16, 208, 8, 8], ["arcTo", 208, 0, 200, 0, 8], ["lineTo", 8, 0]];
        //绘制圆角矩形
        loadBG.graphics.drawPath((pageWidth - 208) / 2, Math.round(pageHeight / 2.5) - 10, path, { fillStyle: "#cbefff" });
        loadTiao = new Sprite();
        Laya.stage.addChild(loadTiao);
        var path = [["moveTo", 4, 0], //画笔的起始点，
        ["arcTo", 0, 0, 0, 4, 4], //p1（500,0）为夹角B，（500,30）为端点p2
        ["arcTo", 0, 8, 4, 8, 4], ["lineTo", 4, 8], ["arcTo", 8, 8, 8, 4, 4], ["arcTo", 8, 0, 4, 0, 4], ["lineTo", 4, 0]];
        loadTiao.graphics.drawPath((pageWidth - 208) / 2 + 4, Math.round(pageHeight / 2.5) - 6, path, { fillStyle: "#4892b3" });
    }

    //加载静态资源完成，开始初始化游戏
    function init() {
        clearLoading();
        console.log('初始化游戏');
        console.log(_drawPlace2.default);
        // new DrawGame();
        new _drawHome2.default();
        // Laya.stage.on(Event.KEY_DOWN, this, function(){
        //     console.log('按下了')
        // });

        // 播放bgm
        // SoundManager.playMusic("http://p70gzm2sm.bkt.clouddn.com/troughts.mp3", 1, new Handler(this, onComplete));
    }

    // 
    function onComplete() {
        console.log("播放完成");
    }

    // 加载进度侦听器
    function onLoading(progress) {
        progress = Math.round(progress * 100);
        //console.log("加载进度: " + progress);
        // loadTiao.graphics.clear();
        var OnePercent = (192 - 4) / 100; //每百分之一进度的距离
        var addPercent = Math.round(progress * OnePercent); //需要增加的百分比
        var path = [["moveTo", 4, 0], //画笔的起始点，
        ["arcTo", 0, 0, 0, 4, 4], //p1（500,0）为夹角B，（500,30）为端点p2
        ["arcTo", 0, 8, 4, 8, 4], ["lineTo", 192, 8], ["arcTo", 200, 8, 200, 4, 4], ["arcTo", 200, 0, 192, 0, 4], ["lineTo", 4, 0]];
        var path = [["moveTo", 4, 0], //画笔的起始点，
        ["arcTo", 0, 0, 0, 4, 4], //p1（500,0）为夹角B，（500,30）为端点p2
        ["arcTo", 0, 8, 4, 8, 4], ["lineTo", 4 + addPercent, 8], ["arcTo", 8 + addPercent, 8, 8 + addPercent, 4, 4], ["arcTo", 8 + addPercent, 0, 4 + addPercent, 0, 4], ["lineTo", 4, 0]];
        loadTiao.graphics.drawPath((pageWidth - 208) / 2 + 4, Math.round(pageHeight / 2.5) - 6, path, { fillStyle: "#4892b3" });
    }

    // 清除滚动条
    function clearLoading() {
        loadTiao.graphics.clear();
        loadBG.graphics.clear();
    }

    //打印加载失败日志
    function onError(err) {
        console.log("加载失败: " + err);
    }
})();

},{"./draw/drawHome":3,"./draw/drawPlace":4}],3:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // 主页相关逻辑

var _graphics = require("../lib/graphics");

var _graphics2 = _interopRequireDefault(_graphics);

var _GameConfig = require("../GameConfig");

var _GameConfig2 = _interopRequireDefault(_GameConfig);

var _gameData = require("../lib/gameData");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Sprite = Laya.Sprite;
var Stage = Laya.Stage;
var Browser = Laya.Browser;
var Handler = Laya.Handler;
var WebGL = Laya.WebGL;
var Event = Laya.Event;
var Loader = Laya.Loader;
var Tween = Laya.Tween;
var Ease = Laya.Ease;
var SoundManager = Laya.SoundManager;

var DrawGame = function () {
    function DrawGame() {
        _classCallCheck(this, DrawGame);

        // 绘图相关的属性
        // 运行
        Laya.stage.bgColor = "#ded6df";
        this.init();
    }

    _createClass(DrawGame, [{
        key: "init",
        value: function init() {
            // this.drawCard();
            Laya.loader.load("res/atlas/assets/images.atlas", Laya.Handler.create(this, this.drawCard));
        }
        /**
         * 绘制画布
         */

        // 绘制中心卡片

    }, {
        key: "drawCard",
        value: function drawCard() {
            var card_bg = new Laya.Sprite();
            // card_bg.size(590, 820);
            // card_bg.pos(80,200)
            // Laya.stage.addChild(card_bg);
            // card_bg.loadImage('assets/images/card.png');

            var card_animate = new Laya.Animation();
            card_animate.loadAnimation('cardscale.ani');
            // card_animate.pos(80,200);
            card_animate.x = 80;
            card_animate.y = 200;
            Laya.stage.addChild(card_bg);
            card_animate.play();
        }

        /**
         * 逻辑处理
         */

    }]);

    return DrawGame;
}();

exports.default = DrawGame;

},{"../GameConfig":1,"../lib/gameData":5,"../lib/graphics":6}],4:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // 创建主游戏场景


var _graphics = require("../lib/graphics");

var _graphics2 = _interopRequireDefault(_graphics);

var _GameConfig = require("../GameConfig");

var _GameConfig2 = _interopRequireDefault(_GameConfig);

var _gameData = require("../lib/gameData");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Sprite = Laya.Sprite;
var Stage = Laya.Stage;
var Browser = Laya.Browser;
var Handler = Laya.Handler;
var WebGL = Laya.WebGL;
var Event = Laya.Event;
var Loader = Laya.Loader;
var Tween = Laya.Tween;
var Ease = Laya.Ease;
var SoundManager = Laya.SoundManager;

var DrawGame = function () {
    function DrawGame() {
        _classCallCheck(this, DrawGame);

        // 绘图相关的属性
        this.x = 40;
        this.y = 250;
        this.col = 5;
        this.row = 5;
        this.gab = 20;
        this.tWidth = 750 - 2 * this.x; //桌面宽度
        this.iWidth = (this.tWidth - (this.row + 1) * this.gab) / this.row; //单个的高度
        this.tHeight = this.iWidth * this.col + (this.col + 1) * this.gab;
        // this.spItem;
        this.itemsSprite = []; //存放宫格的Sprite

        // 游戏数据
        // this.num = '011010011001101010001010110101010100001010101001010010101010100101010101010101010101010101';
        // this.num = '001100110011001100110011001100110011001100110011001101'
        this.num = 0.2;
        this.numData = (0, _gameData.getNum)(this.num);

        this.arr = [];
        this.pNow = [0, 0];

        // 游戏交互
        this.startP = [];
        // 运行
        this.init();
    }

    _createClass(DrawGame, [{
        key: "init",
        value: function init() {
            console.log('执行init');
            this.drawPlace();
            for (var i = 0; i < this.col; i++) {
                this.arr[i] = [];
                this.itemsSprite[i] = [];
                for (var j = 0; j < this.row; j++) {
                    this.arr[i][j] = this.numData[i * this.row + j];
                    // 创建宫格舞台
                    this.itemsSprite[i][j] = new Sprite();
                    Laya.stage.addChild(this.itemsSprite[i][j]);
                }
            }
            // console.log(this.arr)
            this.drawTable(true);
            this.drawTopButton();
        }
        /**
         * 绘制画布
         */

        // 画背景图

    }, {
        key: "drawPlace",
        value: function drawPlace() {
            console.log('执行draw');
            // 画游戏的背景布
            var game_bg = new Laya.Sprite();
            game_bg.size(750, 1334);
            Laya.stage.addChild(game_bg);
            game_bg.loadImage('assets/images/game-bg.png');
            // 画中心的背景布
            var bg = new Laya.Sprite();
            bg.size(this.tWidth, this.tHeight * 2); //一定要设置size才能监控事件 
            Laya.stage.addChild(bg);
            // 画圆角矩形
            bg.graphics.alpha(0.8);
            _graphics2.default.drawRoundedRectangle(bg, this.x, this.y, this.tWidth, this.tHeight, this.gab, '#412873');
            // 绑定事件
            // bg.on()
            bg.on(Event.MOUSE_MOVE, this, this.onMouseMove);
            bg.on(Event.MOUSE_DOWN, this, this.onMouseDown);
            bg.on(Event.MOUSE_UP, this, this.onMouseUp);
            //添加键盘抬起事件
            Laya.stage.on(Event.KEY_UP, this, this.onKeyUp);
        }

        // 画顶部按钮

    }, {
        key: "drawTopButton",
        value: function drawTopButton() {
            var topSp = new Sprite();
            Laya.stage.addChild(topSp);
            // topSp.graphics.drawRect(0, 0, 142, 106, "#4d2f8a");
            // 绘制刷新按钮
            var refreshSp = new Sprite();
            Laya.stage.addChild(refreshSp);
            this.refresh;
            refreshSp.loadImage('assets/images/refresh_btn.png');
            refreshSp.pos(578, 30);
            refreshSp.size(142, 106);
            refreshSp.on('click', this, this.refresh);
            // 绘制数字显示屏
            var numScreenSp = new Sprite();
            Laya.stage.addChild(numScreenSp);
            numScreenSp.loadImage('assets/images/top_num_screen.png');
            numScreenSp.size(330, 130);
            numScreenSp.pos(210, 20);

            // 绘制返回按钮
            var returnSp = new Sprite();
            Laya.stage.addChild(returnSp);
            returnSp.loadImage('assets/images/return_btn.png');
            returnSp.pos(30, 30);
            returnSp.size(142, 106);
            returnSp.on('click', this, function () {
                console.log('点我！aa');
            });
        }

        // 画宫格

    }, {
        key: "drawTable",
        value: function drawTable() {
            var _this = this;

            var first = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

            Tween.clearAll(this.itemsSprite);
            for (var i = 0; i < this.col; i++) {
                for (var j = 0; j < this.row; j++) {
                    var x = this.x + j * (this.iWidth + this.gab) + this.gab,
                        y = this.y + i * (this.iWidth + this.gab) + this.gab;
                    var url = "";
                    if (j == this.pNow[0] && i == this.pNow[1]) {
                        url = this.arr[i][j].num == '0' ? 'assets/images/item-0-active.png' : 'assets/images/item-1-active.png';
                    } else if (this.arr[i][j].isUsed) {
                        url = 'assets/images/item-1-lock.png';
                    } else {
                        url = this.arr[i][j].num == '0' ? 'assets/images/item-0.png' : 'assets/images/item-1.png';
                    }
                    this.itemsSprite[i][j].graphics.clear();
                    // DRAW.drawRoundedRectangle(this.spItem, x, y, this.iWidth, this.iWidth, 15, color)
                    this.itemsSprite[i][j].loadImage(url);
                    this.itemsSprite[i][j].pos(x, y);
                    this.itemsSprite[i][j].size(this.iWidth, this.iWidth);

                    // 动画
                    // target:*, props:Object, duration:int, ease:Function = null, complete:Handler = null, delay:int = 0, coverBefore:Boolean = false
                    if (first) {
                        this.itemsSprite[i][j].alpha = 0;
                        Tween.from(this.itemsSprite[i][j], {
                            // scale: (0.5,0.5,200,200)
                            // y:10
                            scaleY: 0,
                            // scaleX: 0,
                            pivotX: this.iWidth * 0.5,
                            pivotY: this.iWidth * 0.5,
                            alpha: 0
                        }, 250, Ease.expoOut, null, i * 300);
                        Tween.to(this.itemsSprite[i][j], {
                            scaleY: 1,
                            // scaleX: 1,
                            alpha: 1
                        }, 250, Ease.expoOut, null, i * 300);
                    }
                }
            }
            setTimeout(function () {
                _this.judgeSuccess();
            }, 100);
        }

        /**
         * 键盘事件
         */

    }, {
        key: "onKeyUp",
        value: function onKeyUp(e) {
            // delete keyDownList[e["keyCode"]];
            var direction = "";
            switch (e.keyCode) {
                case 37:
                    direction = 'left';break;
                case 38:
                    direction = 'top';break;
                case 39:
                    direction = 'right';break;
                case 40:
                    direction = 'down';break;
            }
            console.log('direction is ' + direction);
            if (direction) this.moveBlock(direction);
        }

        /**
         * 手机滑动事件
         */

    }, {
        key: "onMouseDown",
        value: function onMouseDown(params) {
            this.startP = [Laya.stage.mouseX, Laya.stage.mouseY];
        }
    }, {
        key: "onMouseUp",
        value: function onMouseUp() {
            var endP = [Laya.stage.mouseX, Laya.stage.mouseY];
            var direction = "";
            var moveX = endP[0] - this.startP[0];
            var moveY = endP[1] - this.startP[1];
            if (Math.abs(moveX) > Math.abs(moveY)) {
                if (Math.abs(moveX) > 80) direction = moveX > 0 ? 'right' : 'left';
            } else {
                if (Math.abs(moveY) > 80) direction = moveY > 0 ? 'down' : 'top';
            }
            console.log(direction, moveX, moveY);
            if (direction) this.moveBlock(direction);
        }
    }, {
        key: "onMouseMove",
        value: function onMouseMove(e) {}
        // console.log(e)
        // console.log(Laya.stage.mouseX)


        /**
         * 逻辑处理
         */

    }, {
        key: "moveBlock",
        value: function moveBlock(direction) {

            var b = this.pNow[0],
                a = this.pNow[1];
            // this.arr[a][b] = this.arr[a][b] == "1" ? "0" : "1";
            if (direction == "down") {
                if (this.pNow[1] >= this.col - 1) {
                    return;
                }
                this.pNow[1]++;
            } else if (direction == "top") {
                if (this.pNow[1] <= 0) {
                    return;
                }
                this.pNow[1]--;
            } else if (direction == "right") {
                if (this.pNow[0] >= this.row - 1) {
                    return;
                }
                this.pNow[0]++;
            } else if (direction == "left") {
                if (this.pNow[0] <= 0) {
                    return;
                }
                this.pNow[0]--;
            }

            var j = this.pNow[0],
                i = this.pNow[1];
            if (this.arr[i][j].isUsed) {
                this.pNow[0] = b;
                this.pNow[1] = a;
                return;
            }

            this.arr[i][j].num = this.arr[i][j].num == "1" ? "0" : "1";
            this.arr[i][j].isUsed = this.arr[i][j].num == "1" ? true : false;
            this.drawTable();
            // 播放滑动音效

            SoundManager.setSoundVolume(0.5);
            SoundManager.playSound("assets/music/dong.mp3", 1, null, null, 13);
        }
        // 判断是否失败以及成功

    }, {
        key: "judgeSuccess",
        value: function judgeSuccess() {
            // 判断是否赢了的逻辑
            var isWin = this.arr.every(function (items) {
                return items.every(function (item) {
                    return item.num == '1';
                });
            });
            if (isWin) {
                alert('你赢了！');
                this.refresh();
            } else {
                // 验证是否失败
                var j = this.pNow[0],
                    i = this.pNow[1];
                if (i + 1 < this.col && !this.arr[i + 1][j].isUsed || j + 1 < this.row && !this.arr[i][j + 1].isUsed || i - 1 >= 0 && !this.arr[i - 1][j].isUsed || j - 1 >= 0 && !this.arr[i][j - 1].isUsed) {
                    return;
                } else {
                    alert('你输了！');
                    this.refresh();
                }
            }
        }

        // 重置游戏

    }, {
        key: "refresh",
        value: function refresh() {
            this.pNow = [0, 0];
            this.numData = (0, _gameData.getNum)(this.num);
            for (var i = 0; i < this.col; i++) {
                this.arr[i] = [];
                for (var j = 0; j < this.row; j++) {
                    // this.arr[i][j] = this.num.slice(i * this.row + j, i * this.row + j + 1);
                    this.arr[i][j] = this.numData[i * this.row + j];
                }
            }
            this.drawTable(true);
        }
    }]);

    return DrawGame;
}();

exports.default = DrawGame;

},{"../GameConfig":1,"../lib/gameData":5,"../lib/graphics":6}],5:[function(require,module,exports){
'use strict';

function getNum(num) {
    var arr = toBinaryLists(num);
    return arr.map(function (item) {
        return {
            num: item,
            isUsed: false
        };
    });
}

function toBinaryLists(num) {
    if (typeof num != 'number') {
        num = Number(num);
    }
    return num.toString(2).split('');
}

module.exports = {
    getNum: getNum
};

},{}],6:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
// 封装各种形状
exports.default = {
    /**
     * @param sp Sprite实例
     * @param x 起始x坐标
     * @param y 起始y坐标
     * @param width 总长
     * @param height 总高
     * @param r 圆角半径
     * @param options 配置项
     */
    drawRoundedRectangle: function drawRoundedRectangle(sp, x, y, width, height, r, fill) {
        var relWidth = width - 2 * r;
        var relHeight = height - 2 * r;
        sp.graphics.drawPath(x, y, [["moveTo", r, 0], ["lineTo", width - r, 0], ["arcTo", width, 0, width, r, r], ["lineTo", width, height - r], ["arcTo", width, height, width - r, height, r], ["lineTo", r, height], ["arcTo", 0, height, 0, height - r, r], ["lineTo", 0, r], ["arcTo", 0, 0, r, 0, r], ["closePath"]], {
            fillStyle: fill || '#ff0000'
        });
    }
};

},{}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
