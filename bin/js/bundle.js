var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */

var GameConfig = function () {
    function GameConfig() {
        _classCallCheck(this, GameConfig);
    }

    _createClass(GameConfig, null, [{
        key: "init",
        value: function init() {
            //注册Script或者Runtime引用
            var reg = Laya.ClassUtils.regClass;
        }
    }]);

    return GameConfig;
}();

exports.default = GameConfig;

GameConfig.width = 640;
GameConfig.height = 1136;
GameConfig.scaleMode = "fixedwidth";
GameConfig.screenMode = "none";
GameConfig.alignV = "top";
GameConfig.alignH = "left";
GameConfig.startScene = "";
GameConfig.sceneRoot = "";
GameConfig.debug = false;
GameConfig.stat = false;
GameConfig.physicsDebug = false;
GameConfig.exportSceneToJson = true;

GameConfig.init();

},{}],2:[function(require,module,exports){
'use strict';

var _drawPlace = require('./draw/drawPlace');

var _drawPlace2 = _interopRequireDefault(_drawPlace);

var _drawHome = require('./draw/drawHome');

var _drawHome2 = _interopRequireDefault(_drawHome);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(function () {
    var Sprite = Laya.Sprite;
    var Stage = Laya.Stage;
    var Texture = Laya.Texture;
    var Browser = Laya.Browser;
    var Handler = Laya.Handler;
    var WebGL = Laya.WebGL;
    var Event = Laya.Event;
    var Loader = Laya.Loader;
    var SoundManager = Laya.SoundManager;

    // var pageWidth  = Browser.clientWidth;
    // var pageHeight = Browser.clientHeight;
    var pageWidth = 750;
    var pageHeight = 1334;
    var loadBG, loadTiao;

    (function () {
        // 不支持WebGL时自动切换至Canvas
        Laya.init(pageWidth, pageHeight, WebGL);
        //性能统计面板的调用
        //Laya.Stat.show(0,0);
        Laya.stage.alignV = Stage.ALIGN_MIDDLE;
        Laya.stage.alignH = Stage.ALIGN_CENTER;
        Laya.stage.screenAdaptationEnabled = false;
        Laya.stage.scaleMode = "fixedwidth";
        Laya.stage.bgColor = "#4c58ae";
        downLoadMedia();
    })();

    // 加载文件以及滚动条
    function downLoadMedia() {
        //加载静态文件资源
        var assets = ['assets/comp/btn_close.png'];
        // 加载images下的文件
        var imgNames = ['item-0-active.png', 'item-0.png', 'item-1-active.png', 'alert_fail_bg.png', 'sence-0_bg.png', 'item-1-lock.png', 'item-1.png', 'refresh_btn.png', 'return_btn.png', "card.png", 'alert_fail_mask.png', 'game_bg.png', 'top_num_screen.png', 'card-bg.png', 'logo_title.png', 'home_bg.png'];
        imgNames.map(function (item) {
            assets.push({
                url: 'assets/images/' + item,
                type: Loader.IMAGE // type类型一定要加！！
            });
        });
        // 加载动画库里的素材
        var imgAniNames = ['card.png'];
        imgAniNames.map(function (item) {
            assets.push({
                url: 'images/' + item,
                type: Loader.IMAGE // type类型一定要加！！
            });
        });

        // 添加音效
        var soundNames = ['shua.mp3', 'dong.mp3'];
        soundNames.map(function (item) {
            assets.push({
                url: 'assets/music/' + item,
                type: Loader.SOUND
            });
        });

        // console.log(assets)
        //加载
        Laya.loader.load(assets, Handler.create(this, init), Handler.create(this, onLoading, null, false), Loader.TEXT);
        // 侦听加载失败
        Laya.loader.on(Event.ERROR, this, onError);

        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //绘制进度条
        loadBG = new Sprite();
        Laya.stage.addChild(loadBG);
        var path = [["moveTo", 8, 0], //画笔的起始点，
        ["arcTo", 0, 0, 0, 8, 8], //p1（500,0）为夹角B，（500,30）为端点p2
        ["arcTo", 0, 16, 8, 16, 8], ["lineTo", 200, 16], ["arcTo", 208, 16, 208, 8, 8], ["arcTo", 208, 0, 200, 0, 8], ["lineTo", 8, 0]];
        //绘制圆角矩形
        loadBG.graphics.drawPath((pageWidth - 208) / 2, Math.round(pageHeight / 2.5) - 10, path, { fillStyle: "#cbefff" });
        loadTiao = new Sprite();
        Laya.stage.addChild(loadTiao);
        var path = [["moveTo", 4, 0], //画笔的起始点，
        ["arcTo", 0, 0, 0, 4, 4], //p1（500,0）为夹角B，（500,30）为端点p2
        ["arcTo", 0, 8, 4, 8, 4], ["lineTo", 4, 8], ["arcTo", 8, 8, 8, 4, 4], ["arcTo", 8, 0, 4, 0, 4], ["lineTo", 4, 0]];
        loadTiao.graphics.drawPath((pageWidth - 208) / 2 + 4, Math.round(pageHeight / 2.5) - 6, path, { fillStyle: "#4892b3" });
    }

    //加载静态资源完成，开始初始化游戏
    function init() {
        clearLoading();
        console.log('初始化游戏');
        console.log(_drawPlace2.default);
        // new DrawGame();
        new _drawHome2.default();
    }

    // 加载进度侦听器
    function onLoading(progress) {
        progress = Math.round(progress * 100);
        //console.log("加载进度: " + progress);
        // loadTiao.graphics.clear();
        var OnePercent = (192 - 4) / 100; //每百分之一进度的距离
        var addPercent = Math.round(progress * OnePercent); //需要增加的百分比
        var path = [["moveTo", 4, 0], //画笔的起始点，
        ["arcTo", 0, 0, 0, 4, 4], //p1（500,0）为夹角B，（500,30）为端点p2
        ["arcTo", 0, 8, 4, 8, 4], ["lineTo", 192, 8], ["arcTo", 200, 8, 200, 4, 4], ["arcTo", 200, 0, 192, 0, 4], ["lineTo", 4, 0]];
        var path = [["moveTo", 4, 0], //画笔的起始点，
        ["arcTo", 0, 0, 0, 4, 4], //p1（500,0）为夹角B，（500,30）为端点p2
        ["arcTo", 0, 8, 4, 8, 4], ["lineTo", 4 + addPercent, 8], ["arcTo", 8 + addPercent, 8, 8 + addPercent, 4, 4], ["arcTo", 8 + addPercent, 0, 4 + addPercent, 0, 4], ["lineTo", 4, 0]];
        loadTiao.graphics.drawPath((pageWidth - 208) / 2 + 4, Math.round(pageHeight / 2.5) - 6, path, { fillStyle: "#4892b3" });
    }

    // 清除滚动条
    function clearLoading() {
        loadTiao.graphics.clear();
        loadBG.graphics.clear();
    }

    //打印加载失败日志
    function onError(err) {
        console.log("加载失败: " + err);
    }
})();

},{"./draw/drawHome":3,"./draw/drawPlace":4}],3:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // 主页相关逻辑以及总入口


var _graphics = require("../lib/graphics");

var _graphics2 = _interopRequireDefault(_graphics);

var _GameConfig = require("../GameConfig");

var _GameConfig2 = _interopRequireDefault(_GameConfig);

var _gameData = require("../lib/gameData");

var _drawPlace = require("./drawPlace");

var _drawPlace2 = _interopRequireDefault(_drawPlace);

var _drawStartSence = require("./drawStartSence");

var _drawStartSence2 = _interopRequireDefault(_drawStartSence);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Sprite = Laya.Sprite;
var Stage = Laya.Stage;
var Browser = Laya.Browser;
var Handler = Laya.Handler;
var WebGL = Laya.WebGL;
var Event = Laya.Event;
var Loader = Laya.Loader;
var Tween = Laya.Tween;
var Ease = Laya.Ease;
var SoundManager = Laya.SoundManager;
var Text = Laya.Text;
var GlowFilter = Laya.GlowFilter;
var TimeLine = Laya.TimeLine;

var DrawHome = function () {
    function DrawHome() {
        _classCallCheck(this, DrawHome);

        this.realLevel = "";
        this.gameLevel = "";
        this.GAME = "";
        this.isHome = true;

        // 绘制有关的属性
        this.game_bg = "";
        this.title = "";
        this.card_bg = "";
        this.num = "";
        this.left_card = "";
        this.right_card = "";
        this.slider_bg = "";
        this.slider_bar = "";
        this.slider_active = "";

        // 运行
        Laya.stage.bgColor = "#ded6df";
        this.init();
    }

    _createClass(DrawHome, [{
        key: "init",
        value: function init() {
            // Laya.LocalStorage.setItem("item", str);
            Laya.LocalStorage.setItem("realLevel", 0);
            this.drawBg();
            this.drawCard();
            this.drawSliderBar();
        }

        /**
         * 绘制画布
         */

        // 绘制背景

    }, {
        key: "drawBg",
        value: function drawBg() {
            this.game_bg = new Laya.Sprite();
            this.game_bg.size(750, 1334);
            Laya.stage.addChild(this.game_bg);
            this.game_bg.loadImage('assets/images/home_bg.png');
            // 绘制标题
            this.title_sp = new Laya.Sprite();
            this.title_sp.size(344, 110);
            this.title_sp.pos(200, 30);
            Laya.stage.addChild(this.title_sp);
            this.title_sp.loadImage('assets/images/logo_title.png');
        }
        // 绘制中心卡片

    }, {
        key: "drawCard",
        value: function drawCard() {
            // 绘制背景
            this.card_bg = new Laya.Sprite();
            this.card_bg.size(615, 817);
            this.card_bg.pos(375, 558);
            this.card_bg.pivot(307, 408);
            Laya.stage.addChild(this.card_bg);
            this.card_bg.loadImage('assets/images/card-bg.png');
            this.card_bg.on(Event.CLICK, this, this.startGame);

            // 绘制文字
            // this.realLevel = Laya.LocalStorage.getItem("realLevel");
            this.num = new Text();
            this.num.color = "#f9dfc7";
            this.num.font = "Impact";
            this.num.fontSize = 150;
            this.num.width = 590;
            this.num.pivot(245, 0);
            this.num.x = 325;
            this.num.y = 620;
            this.num.align = "center";
            this.num.alpha = 0.8;
            // this.num.zOrder=1;
            Laya.stage.addChild(this.num);
            this.num.text = this.realLevel = Laya.LocalStorage.getItem("realLevel");
            // 放大缩小动画
            var timeLine = new TimeLine();
            timeLine.addLabel("big", 0).to(this.card_bg, { scaleX: 1.08, scaleY: 1.05 }, 1500, null, 0).addLabel("small", 0).to(this.card_bg, { scaleX: 1, scaleY: 1 }, 1500, null, 0);
            timeLine.play(0, true);
            var timeLine2 = new TimeLine();
            timeLine2.addLabel("big", 0).to(this.num, { scaleX: 1.08, scaleY: 1.05 }, 1500, null, 0).addLabel("small", 0).to(this.num, { scaleX: 1, scaleY: 1 }, 1500, null, 0);
            timeLine2.play(0, true);
            this.drawSideCard();
        }

        // 绘制旁边两侧的卡片

    }, {
        key: "drawSideCard",
        value: function drawSideCard() {
            var _this = this;

            setTimeout(function () {
                _this.cardAnimate();
            }, 1000);
        }
        // 绘制底部滑块

    }, {
        key: "drawSliderBar",
        value: function drawSliderBar() {
            this.slider_bg = new Sprite();
            Laya.stage.addChild(this.slider_bg);
            _graphics2.default.drawRoundedRectangle(this.slider_bg, 0, 0, 550, 30, 15, '#2f0048,#ffffff,#00ffff,#ff00ff');
            this.slider_bg.size(550, 30);
            this.slider_bg.pos(100, 1050);

            this.slider_bar = new Sprite();
            _graphics2.default.drawRoundedRectangle(this.slider_bar, 0, 0, 80, 60, 10, "#aaa");
            this.slider_bar.pos(100, 1035);
            this.slider_bar.size(80, 60);
            Laya.stage.addChild(this.slider_bar);
            this.slider_bar.on(Event.MOUSE_MOVE, this, this.mouseMoveBar);
        }
        // 滑动轨道的逻辑

    }, {
        key: "mouseMoveBar",
        value: function mouseMoveBar(params) {
            console.log(Laya.stage.mouseX);
            if (Laya.stage.mouseX < 100 || Laya.stage.mouseX > 650) return;
            this.slider_bar.x = Laya.stage.mouseX - 30;
            var nowNum = this.realLevel = ((Laya.stage.mouseX - 100) / 550).toFixed(2);
            // let gameData = getGameData()

            // console.log(nowNum, this.judgeSplitNum(nowNum, gameData.length))
            var index = this.judgeSplitNum(nowNum, _gameData.gameData.length);
            var showData = _gameData.gameData[index];
            if (index && this.num.text != showData.num) {
                this.num.text = showData.num;
                Laya.LocalStorage.setItem('realLevel', showData.num);
                var timeLine = new TimeLine();
                timeLine.addLabel("big", 0).to(this.card_bg, { scaleX: 1.1, scaleY: 1.1, rotation: Math.random() > 0.5 ? -1 : 1 }, 10, null, 0)
                // .addLabel("rotation", 0).to(this.card_bg, { scaleX: 1.1, scaleY: 1.05, rotation: -1 }, 7, null, 0)
                .addLabel("small", 0).to(this.card_bg, { scaleX: 1, scaleY: 1, rotation: 0 }, 10, null, 0);
                timeLine.play(0, false);
                var timeLine2 = new TimeLine();
                timeLine2.addLabel("big", 0).to(this.num, { scaleX: 1.1, scaleY: 1.1, alpha: 0.5 }, 10, null, 0)
                // .addLabel("color", 0).to(this.num, { scaleX: 1.05, scaleY: 1.05 }, 10, null, 0)
                .addLabel("small", 0).to(this.num, { scaleX: 1, scaleY: 1, alpha: 1 }, 10, null, 0);
                timeLine2.play(0, false);
            }

            // if (nowNum in gameData) {

            // }
        }
    }, {
        key: "judgeSplitNum",
        value: function judgeSplitNum(nowNum, length) {
            var split = 1 / length;
            for (var i = 0; i < length; i++) {
                var temp = i * split;
                if (Math.abs(nowNum - temp) < 0.05) {
                    return i;
                    break;
                }
            }
            return null;
        }
        // 卡片滑动时的效果

    }, {
        key: "cardAnimate",
        value: function cardAnimate() {}
        // var timeLine = new TimeLine();
        // timeLine.addLabel("big", 0).to(this.card_bg, { scaleX: 0.8, scaleY: 0.8, x: -190 }, 2000, null, 0)
        // timeLine.play(0, true);

        // var timeLine2 = new TimeLine();
        // timeLine2.addLabel("big", 0).to(this.right_card, { scaleX: 1.1, scaleY: 1.1, x: 375 }, 2000, null, 0)
        // timeLine2.play(0, true);

        // var timeLine3 = new TimeLine();
        // timeLine3.addLabel("big", 0).to(this.num, { scaleX: 0.8, scaleY: 0.8, x: -190 }, 2000, null, 0)
        // timeLine3.play(0, true);

        /**
         * 逻辑处理
         */
        // 进入关卡

    }, {
        key: "startGame",
        value: function startGame(params) {
            if (!this.isHome) {
                return;
            }
            if (this.realLevel == 0) {
                // 0关 初始场景
                console.log('ok');
                new _drawStartSence2.default();
            } else if (this.realLevel == 1) {
                // 1关 结束场景
            } else {
                // 正常关卡
                this.GAME ? this.GAME.startGame() : this.GAME = new _drawPlace2.default();
            }
            // this.isHome = false
            // SoundManager.playSound("assets/music/dong.mp3", 1, null, null, 13);
        }
    }]);

    return DrawHome;
}();

exports.default = DrawHome;

},{"../GameConfig":1,"../lib/gameData":6,"../lib/graphics":7,"./drawPlace":4,"./drawStartSence":5}],4:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // 创建主游戏场景


var _graphics = require("../lib/graphics");

var _graphics2 = _interopRequireDefault(_graphics);

var _GameConfig = require("../GameConfig");

var _GameConfig2 = _interopRequireDefault(_GameConfig);

var _gameData = require("../lib/gameData");

var _drawHome = require("./drawHome");

var _drawHome2 = _interopRequireDefault(_drawHome);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Sprite = Laya.Sprite;
var Stage = Laya.Stage;
var Browser = Laya.Browser;
var Handler = Laya.Handler;
var WebGL = Laya.WebGL;
var Event = Laya.Event;
var Loader = Laya.Loader;
var Tween = Laya.Tween;
var Ease = Laya.Ease;
var SoundManager = Laya.SoundManager;

var DrawGame = function () {
    function DrawGame() {
        _classCallCheck(this, DrawGame);

        // 绘图相关的属性
        this.x = 40;
        this.y = 250;
        this.col = 5;
        this.row = 5;
        this.gab = 20;
        this.tWidth = 750 - 2 * this.x; //桌面宽度
        this.iWidth = (this.tWidth - (this.row + 1) * this.gab) / this.row; //单个的高度
        this.tHeight = this.iWidth * this.col + (this.col + 1) * this.gab;
        this.itemsSprite = []; //存放宫格的Sprite
        // 画布
        this.game_bg = "";
        this.table_bg = "";
        this.topSp = "";
        this.refreshSp = "";
        this.returnSp = "";
        this.numScreenSp = "";
        this.failBgSp = "";
        this.failMaskSp = "";
        this.failRefresh = "";
        this.failReturn = "";

        // 游戏数据
        this.num = "";
        this.numData = "";
        this.arr = [];
        this.pNow = [0, 0];
        this.isGaming = false;

        // 游戏交互
        this.startP = [];
        // 运行
        this.init();
    }
    // 首次注册


    _createClass(DrawGame, [{
        key: "init",
        value: function init() {
            // console.log('执行init');
            this.drawPlace();
            this.drawTopButton();
            for (var i = 0; i < this.col; i++) {
                this.itemsSprite[i] = [];
                for (var j = 0; j < this.row; j++) {
                    // 创建宫格舞台
                    this.itemsSprite[i][j] = new Sprite();
                    Laya.stage.addChild(this.itemsSprite[i][j]);
                }
            }
            this.startGame();
        }

        // 开启游戏

    }, {
        key: "startGame",
        value: function startGame() {
            this.game_bg.zOrder = 1;
            this.table_bg.zOrder = 2;
            this.topSp.zOrder = 2;
            this.refreshSp.zOrder = 2;
            this.returnSp.zOrder = 2;
            this.numScreenSp.zOrder = 2;
            // this.failMaskSp = ""
            // this.failRefresh = ""
            // this.failReturn = ""
            // 开启比赛
            this.isGaming = true;
            this.pNow = [0, 0];
            this.num = Laya.LocalStorage.getItem("realLevel");
            // console.log(this.num)
            this.numData = (0, _gameData.getNum)(this.num);
            for (var i = 0; i < this.col; i++) {
                this.arr[i] = [];
                for (var j = 0; j < this.row; j++) {
                    this.itemsSprite[i][j].zOrder = 3;
                    this.arr[i][j] = this.numData[i * this.row + j];
                }
            }
            // console.log(this.numData);
            this.drawTable(true);
            // 调试
            // this.showFail()
        }

        /**
         * 绘制画布
         */

        // 画背景图

    }, {
        key: "drawPlace",
        value: function drawPlace() {
            // console.log('执行draw');
            // 画游戏的背景布
            this.game_bg = new Laya.Sprite();
            this.game_bg.size(750, 1334);
            Laya.stage.addChild(this.game_bg);
            this.game_bg.loadImage('assets/images/game_bg1.png');
            // 画中心的方块组背景
            this.table_bg = new Laya.Sprite();
            this.table_bg.size(this.tWidth, this.tHeight * 2); //一定要设置size才能监控事件 
            Laya.stage.addChild(this.table_bg);
            // this.table_bg.graphics.alpha(0.5)
            // DRAW.drawRoundedRectangle(this.table_bg, this.x, this.y, this.tWidth, this.tHeight, this.gab, '#2f0048');
            // 绑定事件
            // this.table_bg.on(Event.MOUSE_MOVE, this, this.onMouseMove);
            this.table_bg.on(Event.MOUSE_DOWN, this, this.onMouseDown);
            this.table_bg.on(Event.MOUSE_UP, this, this.onMouseUp);
            //添加键盘抬起事件
            Laya.stage.on(Event.KEY_UP, this, this.onKeyUp);
        }
        // 画顶部按钮

    }, {
        key: "drawTopButton",
        value: function drawTopButton() {
            this.topSp = new Sprite();
            Laya.stage.addChild(this.topSp);
            // this.topSp.graphics.drawRect(0, 0, 142, 106, "#4d2f8a");
            // 绘制刷新按钮
            this.refreshSp = new Sprite();
            Laya.stage.addChild(this.refreshSp);
            this.refresh;
            this.refreshSp.loadImage('assets/images/refresh_btn.png');
            this.refreshSp.pos(578, 30);
            this.refreshSp.size(142, 106);
            this.refreshSp.on('click', this, this.refresh);
            // this.refreshSp.graphics.destroy()
            // 绘制数字显示屏
            this.numScreenSp = new Sprite();
            Laya.stage.addChild(this.numScreenSp);
            this.numScreenSp.loadImage('assets/images/top_num_screen.png');
            this.numScreenSp.size(330, 130);
            this.numScreenSp.pos(210, 20);

            // 绘制返回按钮
            this.returnSp = new Sprite();
            Laya.stage.addChild(this.returnSp);
            this.returnSp.loadImage('assets/images/return_btn.png');
            this.returnSp.pos(30, 30);
            this.returnSp.size(142, 106);
            this.returnSp.on('click', this, this.returnHome);
        }
        // 画宫格

    }, {
        key: "drawTable",
        value: function drawTable() {
            var _this = this;

            var first = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

            Tween.clearAll(this.itemsSprite);
            for (var i = 0; i < this.col; i++) {
                for (var j = 0; j < this.row; j++) {
                    var x = this.x + j * (this.iWidth + this.gab) + this.gab,
                        y = this.y + i * (this.iWidth + this.gab) + this.gab;
                    var url = "";
                    if (j == this.pNow[0] && i == this.pNow[1]) {
                        url = this.arr[i][j].num == '0' ? 'assets/images/item-0-active.png' : 'assets/images/item-1-active.png';
                    } else if (this.arr[i][j].isUsed) {
                        url = 'assets/images/item-1-lock.png';
                    } else {
                        url = this.arr[i][j].num == '0' ? 'assets/images/item-0.png' : 'assets/images/item-1.png';
                    }
                    this.itemsSprite[i][j].graphics.clear();
                    // DRAW.drawRoundedRectangle(this.spItem, x, y, this.iWidth, this.iWidth, 15, color)
                    this.itemsSprite[i][j].loadImage(url);
                    this.itemsSprite[i][j].pos(x + this.iWidth * 0.5, y + this.iWidth * 0.5);
                    this.itemsSprite[i][j].size(this.iWidth, this.iWidth);

                    // 动画

                    if (first) {
                        this.itemsSprite[i][j].alpha = 0;
                        Tween.from(this.itemsSprite[i][j], {
                            // y:10
                            scaleY: 0,
                            scaleX: 0,
                            pivotX: this.iWidth * 0.5,

                            pivotY: this.iWidth * 0.5,
                            alpha: 0
                        }, 250, Ease.circInOut, null, 200);
                        Tween.to(this.itemsSprite[i][j], {
                            scaleY: 1,
                            scaleX: 1,
                            pivotX: this.iWidth * 0.5,
                            pivotY: this.iWidth * 0.5,
                            alpha: 1
                        }, 250, Ease.circInOut, null, 200);
                    }
                }
            }
            setTimeout(function () {
                _this.judgeSuccess();
            }, 100);
        }
        /**
         * 键盘事件
         */

    }, {
        key: "onKeyUp",
        value: function onKeyUp(e) {
            // delete keyDownList[e["keyCode"]];
            var direction = "";
            switch (e.keyCode) {
                case 37:
                    direction = 'left';break;
                case 38:
                    direction = 'top';break;
                case 39:
                    direction = 'right';break;
                case 40:
                    direction = 'down';break;
            }
            console.log('direction is ' + direction);
            if (direction) this.moveBlock(direction);
        }

        /**
         * 手机滑动事件
         */

    }, {
        key: "onMouseDown",
        value: function onMouseDown(params) {
            this.startP = [Laya.stage.mouseX, Laya.stage.mouseY];
        }
    }, {
        key: "onMouseUp",
        value: function onMouseUp() {
            var endP = [Laya.stage.mouseX, Laya.stage.mouseY];
            var direction = "";
            var moveX = endP[0] - this.startP[0];
            var moveY = endP[1] - this.startP[1];
            if (Math.abs(moveX) > Math.abs(moveY)) {
                if (Math.abs(moveX) > 80) direction = moveX > 0 ? 'right' : 'left';
            } else {
                if (Math.abs(moveY) > 80) direction = moveY > 0 ? 'down' : 'top';
            }
            console.log(direction, moveX, moveY);
            if (direction) this.moveBlock(direction);
        }
        /**
         * 逻辑处理
         */

    }, {
        key: "moveBlock",
        value: function moveBlock(direction) {
            if (!this.isGaming) return;

            var b = this.pNow[0],
                a = this.pNow[1];
            // this.arr[a][b] = this.arr[a][b] == "1" ? "0" : "1";
            if (direction == "down") {
                if (this.pNow[1] >= this.col - 1) {
                    return;
                }
                this.pNow[1]++;
            } else if (direction == "top") {
                if (this.pNow[1] <= 0) {
                    return;
                }
                this.pNow[1]--;
            } else if (direction == "right") {
                if (this.pNow[0] >= this.row - 1) {
                    return;
                }
                this.pNow[0]++;
            } else if (direction == "left") {
                if (this.pNow[0] <= 0) {
                    return;
                }
                this.pNow[0]--;
            }

            var j = this.pNow[0],
                i = this.pNow[1];
            if (this.arr[i][j].isUsed) {
                this.pNow[0] = b;
                this.pNow[1] = a;
                return;
            }
            // console.log(this.arr)
            this.arr[i][j].num = this.arr[i][j].num == "1" ? "0" : "1";
            this.arr[i][j].isUsed = this.arr[i][j].num == "1" ? true : false;
            this.drawTable();
            // 播放滑动音效

            SoundManager.setSoundVolume(0.5);
            SoundManager.playSound("assets/music/dong.mp3", 1, null, null, 13);
        }
        // 判断是否失败以及成功

    }, {
        key: "judgeSuccess",
        value: function judgeSuccess() {
            // 判断是否赢了的逻辑
            var isWin = this.arr.every(function (items) {
                return items.every(function (item) {
                    return item.num == '1';
                });
            });
            if (isWin) {
                alert('你赢了！');
                this.refresh();
            } else {
                // 验证是否失败
                var j = this.pNow[0],
                    i = this.pNow[1];
                if (i + 1 < this.col && !this.arr[i + 1][j].isUsed || j + 1 < this.row && !this.arr[i][j + 1].isUsed || i - 1 >= 0 && !this.arr[i - 1][j].isUsed || j - 1 >= 0 && !this.arr[i][j - 1].isUsed) {
                    return;
                } else {
                    // alert('你输了！');
                    this.showFail();
                    // this.refresh();
                }
            }
        }
        // 重置游戏

    }, {
        key: "refresh",
        value: function refresh() {
            this.pNow = [0, 0];
            this.numData = (0, _gameData.getNum)(this.num);
            for (var i = 0; i < this.col; i++) {
                this.arr[i] = [];
                for (var j = 0; j < this.row; j++) {
                    // this.arr[i][j] = this.num.slice(i * this.row + j, i * this.row + j + 1);
                    this.arr[i][j] = this.numData[i * this.row + j];
                }
            }
            this.closeAlert();
            this.drawTable(true);
        }
        // 返回 Home

    }, {
        key: "returnHome",
        value: function returnHome() {
            this.clearPlaceAll();
            // new DrawHome()
        }
        // 清除所有画布的东西

    }, {
        key: "clearPlaceAll",
        value: function clearPlaceAll() {
            // 设置层级下沉
            this.game_bg.zOrder = -1;
            this.table_bg.zOrder = -2;
            this.topSp.zOrder = -2;
            this.refreshSp.zOrder = -2;
            this.returnSp.zOrder = -2;
            this.numScreenSp.zOrder = -2;
            if (this.failBgSp) {
                this.failBgSp.zOrder = -2;
                this.failMaskSp.zOrder = -2;
                this.failRefresh.zOrder = -2;
                this.failReturn.zOrder = -2;
            }

            for (var i = 0; i < this.col; i++) {
                for (var j = 0; j < this.row; j++) {
                    this.itemsSprite[i][j].zOrder = -2;
                }
            }
            // 事件监听失效
            this.isGaming = false;
        }
        // 输了的逻辑

    }, {
        key: "showFail",
        value: function showFail() {
            this.failMaskSp = new Sprite();
            // this.failBgSp.pos(50, 200);
            this.failMaskSp.size(750, Browser.height);
            this.failMaskSp.loadImage('assets/images/alert_fail_mask.png');
            this.failMaskSp.zOrder = 4;
            this.failMaskSp.alpha = 0;
            Laya.stage.addChild(this.failMaskSp);
            Tween.to(this.failMaskSp, {
                alpha: 1
            }, 250, Ease.linearIn, null, 200);

            // 画卡片背景
            this.failBgSp = new Sprite();
            this.failBgSp.pos(50, -550);
            this.failBgSp.size(655, 558);
            this.failBgSp.zOrder = 5;
            Laya.stage.addChild(this.failBgSp);
            this.failBgSp.loadImage('assets/images/alert_fail_bg.png');
            // 进入动画
            Tween.to(this.failBgSp, {
                y: 250
            }, 550, Ease.bounceOut, null, 200);

            // 画返回按钮
            this.failReturn = new Sprite();
            this.failReturn.pos(900, 480);
            this.failReturn.size(170, 126);
            this.failReturn.zOrder = 6;
            Laya.stage.addChild(this.failReturn);
            this.failReturn.loadImage('assets/images/return_btn.png');
            this.failReturn.on('click', this, this.returnHome);
            Tween.to(this.failReturn, {
                x: 500
            }, 550, Ease.bounceOut, null, 200);
            // 画重新按钮
            this.failRefresh = new Sprite();
            this.failRefresh.pos(900, 650);
            this.failRefresh.size(170, 126);
            this.failRefresh.zOrder = 6;
            Laya.stage.addChild(this.failRefresh);
            this.failRefresh.loadImage('assets/images/refresh_btn.png');
            this.failRefresh.on('click', this, this.refresh);
            Tween.to(this.failRefresh, {
                x: 500
            }, 550, Ease.strongInOut, null, 200);
        }
        //关闭弹窗

    }, {
        key: "closeAlert",
        value: function closeAlert() {
            if (this.failBgSp) {
                this.failBgSp.zOrder = -2;
                this.failMaskSp.zOrder = -2;
                this.failRefresh.zOrder = -2;
                this.failReturn.zOrder = -2;
            }
        }
    }]);

    return DrawGame;
}();

exports.default = DrawGame;

},{"../GameConfig":1,"../lib/gameData":6,"../lib/graphics":7,"./drawHome":3}],5:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // 主页相关逻辑以及总入口


var _graphics = require("../lib/graphics");

var _graphics2 = _interopRequireDefault(_graphics);

var _GameConfig = require("../GameConfig");

var _GameConfig2 = _interopRequireDefault(_GameConfig);

var _gameData = require("../lib/gameData");

var _drawPlace = require("./drawPlace");

var _drawPlace2 = _interopRequireDefault(_drawPlace);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Sprite = Laya.Sprite;
var Stage = Laya.Stage;
var Browser = Laya.Browser;
var Handler = Laya.Handler;
var WebGL = Laya.WebGL;
var Event = Laya.Event;
var Loader = Laya.Loader;
var Tween = Laya.Tween;
var Ease = Laya.Ease;
var SoundManager = Laya.SoundManager;
var Text = Laya.Text;
var GlowFilter = Laya.GlowFilter;
var TimeLine = Laya.TimeLine;

var DrawHome = function () {
    function DrawHome() {
        _classCallCheck(this, DrawHome);

        // sprite
        this.sence_bg = "";
        this.first_text = "";
        this.textArr = ["18世纪\n德国数理哲学大师莱布尼兹发现了二进制", "这个由0和1组成的数字电路\n打开了一个奇幻而精分的世界", "由于特殊的算法\n在这个二进制世界里", "一个简单的小数会被编译成无限的0和1", "而这些无限的0和1\n就是你要面临的每重关卡", "记住,你要不留余力的达到最大值", "试试看，\n也许你能得到不一样的东西", "FROM ZERO", "TO ONE"];
        this.init();
    }

    _createClass(DrawHome, [{
        key: "init",
        value: function init() {
            // Laya.LocalStorage.setItem("item", str);
            this.drawBg();
            SoundManager.setSoundVolume(0.1);
            SoundManager.playSound("assets/music/troughts.mp3", 1, null, null, 13);
            Laya.LocalStorage.setItem("realLevel", 0.02);
        }

        /**
         * 绘制画布
         */

        // 绘制背景

    }, {
        key: "drawBg",
        value: function drawBg() {
            var _this = this;

            // 开始的场景
            this.sence_bg = new Laya.Sprite();
            this.sence_bg.size(750, 1334);
            Laya.stage.addChild(this.sence_bg);
            this.sence_bg.loadImage('assets/images/sence-0_bg.png');
            this.sence_bg.alpha = 0;
            Tween.to(this.sence_bg, {
                alpha: 1
            }, 500, Ease.linearIn, null, 200);
            // 文字的动画过场
            this.drawText(this.textArr[0]);
            var i = 1;
            var textInterval = setInterval(function () {
                if (i >= _this.textArr.length - 1) clearInterval(textInterval);
                _this.drawText(_this.textArr[i]);
                i++;
            }, 5000);
        }
    }, {
        key: "drawText",
        value: function drawText(textContent) {
            this.first_text = new Text();
            this.first_text.color = "#fff";
            this.first_text.fontSize = 35;
            this.first_text.width = 600;
            this.first_text.align = "center";
            this.first_text.leading = 20;
            this.first_text.x = 75;
            this.first_text.y = 200;
            this.first_text.alpha = 0;
            // this.first_text.text = "18世纪\n德国数理哲学大师莱布尼兹发现了二进制"
            this.first_text.text = textContent;
            Laya.stage.addChild(this.first_text);

            var timeLine = new TimeLine();
            timeLine.addLabel("show", 0).to(this.first_text, { alpha: 1 }, 1000, null, 1000).addLabel("hidden", 0).to(this.first_text, { alpha: 0 }, 1000, null, 2000);
            timeLine.play(0, false);
        }
        /**
         * 逻辑处理
         */

    }]);

    return DrawHome;
}();

exports.default = DrawHome;

},{"../GameConfig":1,"../lib/gameData":6,"../lib/graphics":7,"./drawPlace":4}],6:[function(require,module,exports){
'use strict';

var gameData = [{
    num: 0.02,
    row: 3,
    col: 1
}, {
    num: 0.05,
    row: 3,
    col: 1
}, {
    num: 0.1,
    row: 3,
    col: 1
}, {
    num: 0.2,
    row: 3,
    col: 1
}, {
    num: 0.3,
    row: 3,
    col: 1
}, {
    num: 0.5,
    row: 3,
    col: 1
}, {
    num: 0.55,
    row: 3,
    col: 1
}, {
    num: 0.6,
    row: 3,
    col: 1
}, {
    num: 0.8,
    row: 3,
    col: 1
}, {
    num: 0.02,
    row: 3,
    col: 1
}, {
    num: 0.05,
    row: 3,
    col: 1
}, {
    num: 0.1,
    row: 3,
    col: 1
}, {
    num: 0.2,
    row: 3,
    col: 1
}, {
    num: 0.3,
    row: 3,
    col: 1
}, {
    num: 0.5,
    row: 3,
    col: 1
}, {
    num: 0.55,
    row: 3,
    col: 1
}, {
    num: 0.6,
    row: 3,
    col: 1
}, {
    num: 0.8,
    row: 3,
    col: 1
}, {
    num: 0.02,
    row: 3,
    col: 1
}, {
    num: 0.05,
    row: 3,
    col: 1
}, {
    num: 0.1,
    row: 3,
    col: 1
}, {
    num: 0.2,
    row: 3,
    col: 1
}, {
    num: 0.3,
    row: 3,
    col: 1
}, {
    num: 0.5,
    row: 3,
    col: 1
}, {
    num: 0.55,
    row: 3,
    col: 1
}, {
    num: 0.6,
    row: 3,
    col: 1
}, {
    num: 0.8,
    row: 3,
    col: 1
}, {
    num: 0.02,
    row: 3,
    col: 1
}, {
    num: 0.05,
    row: 3,
    col: 1
}, {
    num: 0.1,
    row: 3,
    col: 1
}, {
    num: 0.2,
    row: 3,
    col: 1
}, {
    num: 0.3,
    row: 3,
    col: 1
}, {
    num: 0.5,
    row: 3,
    col: 1
}, {
    num: 0.55,
    row: 3,
    col: 1
}, {
    num: 0.6,
    row: 3,
    col: 1
}, {
    num: 0.8,
    row: 3,
    col: 1
}];

function getNum(num) {
    var arr = toBinaryLists(num);
    return arr.map(function (item) {
        return {
            num: item,
            isUsed: false
        };
    });
}

function toBinaryLists(num) {
    if (typeof num != 'number') {
        num = Number(num);
    }
    console.log(num);
    var binary = num.toString(2).split('.')[1];
    console.log(binary);
    return binary.split('');
}

function getGameData() {
    var i = 0;
    for (var key in gameData) {
        // console.log(key)
        if (key != 'length') i++;
    }
    // console.log(i++);
    gameData['length'] = i;
    return gameData;
}

module.exports = {
    getNum: getNum,
    // getGameData: getGameData
    gameData: gameData
};

},{}],7:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
// 封装各种形状
exports.default = {
    /**
     * @param sp Sprite实例
     * @param x 起始x坐标
     * @param y 起始y坐标
     * @param width 总长
     * @param height 总高
     * @param r 圆角半径
     * @param options 配置项
     */
    drawRoundedRectangle: function drawRoundedRectangle(sp, x, y, width, height, r, fill) {
        var relWidth = width - 2 * r;
        var relHeight = height - 2 * r;
        sp.graphics.drawPath(x, y, [["moveTo", r, 0], ["lineTo", width - r, 0], ["arcTo", width, 0, width, r, r], ["lineTo", width, height - r], ["arcTo", width, height, width - r, height, r], ["lineTo", r, height], ["arcTo", 0, height, 0, height - r, r], ["lineTo", 0, r], ["arcTo", 0, 0, r, 0, r], ["closePath"]], {
            fillStyle: fill || '#ff0000'
        });
    }
};

},{}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
