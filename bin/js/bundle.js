var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var GameConfig = {};

GameConfig.width = 640;
GameConfig.height = 1136;
GameConfig.scaleMode = "fixedwidth";
GameConfig.screenMode = "none";
GameConfig.alignV = "top";
GameConfig.alignH = "left";
GameConfig.startScene = "";
GameConfig.sceneRoot = "";
GameConfig.debug = false;
GameConfig.stat = false;
GameConfig.physicsDebug = false;
GameConfig.exportSceneToJson = true;

// GameConfig.host="https://www.marphy.cn/toone/web/"  //小程序跨域
GameConfig.host = ""; //h5调试

exports.default = GameConfig;

},{}],2:[function(require,module,exports){
'use strict';

var _drawPlace = require('./draw/drawPlace');

var _drawPlace2 = _interopRequireDefault(_drawPlace);

var _drawHome = require('./draw/drawHome');

var _drawHome2 = _interopRequireDefault(_drawHome);

var _GameConfig = require('./GameConfig');

var _GameConfig2 = _interopRequireDefault(_GameConfig);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(function () {
    var Sprite = Laya.Sprite;
    var Stage = Laya.Stage;
    var Texture = Laya.Texture;
    var Browser = Laya.Browser;
    var Handler = Laya.Handler;
    var WebGL = Laya.WebGL;
    var Event = Laya.Event;
    var Loader = Laya.Loader;
    var SoundManager = Laya.SoundManager;

    // var pageWidth  = Browser.clientWidth;
    // var pageHeight = Browser.clientHeight;
    var pageWidth = 750;
    var pageHeight = 1334;
    var loadBG, loadTiao;

    (function () {
        // 不支持WebGL时自动切换至Canvas
        Laya.init(pageWidth, pageHeight, WebGL);
        //性能统计面板的调用
        //Laya.Stat.show(0,0);
        Laya.stage.alignV = Stage.ALIGN_MIDDLE;
        Laya.stage.alignH = Stage.ALIGN_CENTER;
        Laya.stage.screenAdaptationEnabled = false;
        Laya.stage.scaleMode = "fixedwidth";
        Laya.stage.bgColor = "#4c58ae";
        downLoadMedia();

        // 创建一个发布订阅模式
        function Observer2() {
            //创建观察者数组
            this.observerList = [];
        }
        Observer2.prototype.on = function (key, obj) {
            if (!this.observerList[key]) {
                this.observerList[key] = [];
            }
            //将observerpush进对应的key内存中
            this.observerList[key].push(obj);
        };
        Observer2.prototype.emit = function () {
            var _arguments = arguments;

            //获取key值
            var oKey = Array.prototype.shift.apply(arguments);
            // 遍历数组所有的观察者并执行操作
            this.observerList[oKey].forEach(function (obj) {
                obj[0].apply(obj[1], _arguments);
            });
        };
        window.$ob = new Observer2();
    })();

    // 加载文件以及滚动条
    function downLoadMedia() {
        console.log(_GameConfig2.default.host);
        //加载静态文件资源
        var assets = [];
        // 加载images下的文件
        var imgNames = ['item-0-active.png', 'item-0.png', 'item-1-active.png', 'alert_fail_bg.png', 'sence-0_bg.png', 'item-1-lock.png', 'item-1.png', 'refresh_btn.png', 'return_btn.png', "card.png", 'alert_fail_mask.png', 'game_bg.png', 'top_num_screen.png', 'card-bg.png', 'logo_title.png', 'home_bg.png', 'card-bg-lock.png', 'home_right.png', 'home_right_more.png', 'home_left.png', 'home_left_more.png', 'next_btn.png'];
        imgNames.map(function (item) {
            assets.push({
                url: _GameConfig2.default.host + 'assets/images/' + item,
                type: Loader.IMAGE // type类型一定要加！！
            });
        });
        // 加载动画库里的素材
        // let imgAniNames = ['card.png'];
        // imgAniNames.map(item => {
        //     assets.push({
        //         url: 'images/' + item,
        //         type: Loader.IMAGE  // type类型一定要加！！
        //     });
        // })

        // 添加音效
        var soundNames = ['shua.mp3', 'dong.mp3'];
        soundNames.map(function (item) {
            assets.push({
                url: _GameConfig2.default.host + 'assets/music/' + item,
                type: Loader.SOUND
            });
        });

        // console.log(assets)
        //加载
        Laya.loader.load(assets, Handler.create(this, init), Handler.create(this, onLoading, null, false), Loader.TEXT);
        // 侦听加载失败
        Laya.loader.on(Event.ERROR, this, onError);

        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //绘制进度条
        loadBG = new Sprite();
        Laya.stage.addChild(loadBG);
        var path = [["moveTo", 8, 0], //画笔的起始点，
        ["arcTo", 0, 0, 0, 8, 8], //p1（500,0）为夹角B，（500,30）为端点p2
        ["arcTo", 0, 16, 8, 16, 8], ["lineTo", 200, 16], ["arcTo", 208, 16, 208, 8, 8], ["arcTo", 208, 0, 200, 0, 8], ["lineTo", 8, 0]];
        //绘制圆角矩形
        loadBG.graphics.drawPath((pageWidth - 208) / 2, Math.round(pageHeight / 2.5) - 10, path, { fillStyle: "#cbefff" });
        loadTiao = new Sprite();
        Laya.stage.addChild(loadTiao);
        var path = [["moveTo", 4, 0], //画笔的起始点，
        ["arcTo", 0, 0, 0, 4, 4], //p1（500,0）为夹角B，（500,30）为端点p2
        ["arcTo", 0, 8, 4, 8, 4], ["lineTo", 4, 8], ["arcTo", 8, 8, 8, 4, 4], ["arcTo", 8, 0, 4, 0, 4], ["lineTo", 4, 0]];
        loadTiao.graphics.drawPath((pageWidth - 208) / 2 + 4, Math.round(pageHeight / 2.5) - 6, path, { fillStyle: "#4892b3" });
    }

    //加载静态资源完成，开始初始化游戏
    function init() {
        clearLoading();
        console.log('初始化游戏');
        // console.log(DrawGame);
        // new DrawGame();
        new _drawHome2.default();
    }

    // 加载进度侦听器
    function onLoading(progress) {
        progress = Math.round(progress * 100);
        //console.log("加载进度: " + progress);
        // loadTiao.graphics.clear();
        var OnePercent = (192 - 4) / 100; //每百分之一进度的距离
        var addPercent = Math.round(progress * OnePercent); //需要增加的百分比
        var path = [["moveTo", 4, 0], //画笔的起始点，
        ["arcTo", 0, 0, 0, 4, 4], //p1（500,0）为夹角B，（500,30）为端点p2
        ["arcTo", 0, 8, 4, 8, 4], ["lineTo", 192, 8], ["arcTo", 200, 8, 200, 4, 4], ["arcTo", 200, 0, 192, 0, 4], ["lineTo", 4, 0]];
        var path = [["moveTo", 4, 0], //画笔的起始点，
        ["arcTo", 0, 0, 0, 4, 4], //p1（500,0）为夹角B，（500,30）为端点p2
        ["arcTo", 0, 8, 4, 8, 4], ["lineTo", 4 + addPercent, 8], ["arcTo", 8 + addPercent, 8, 8 + addPercent, 4, 4], ["arcTo", 8 + addPercent, 0, 4 + addPercent, 0, 4], ["lineTo", 4, 0]];
        loadTiao.graphics.drawPath((pageWidth - 208) / 2 + 4, Math.round(pageHeight / 2.5) - 6, path, { fillStyle: "#4892b3" });
    }

    // 清除滚动条
    function clearLoading() {
        loadTiao.graphics.clear();
        loadBG.graphics.clear();
    }

    //打印加载失败日志
    function onError(err) {
        console.log("加载失败: " + err);
    }
})();

},{"./GameConfig":1,"./draw/drawHome":3,"./draw/drawPlace":4}],3:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // 主页相关逻辑以及总入口


var _graphics = require("../lib/graphics");

var _graphics2 = _interopRequireDefault(_graphics);

var _GameConfig = require("../GameConfig");

var _GameConfig2 = _interopRequireDefault(_GameConfig);

var _gameData = require("../lib/gameData");

var _drawPlace = require("./drawPlace");

var _drawPlace2 = _interopRequireDefault(_drawPlace);

var _drawStartSence = require("./drawStartSence");

var _drawStartSence2 = _interopRequireDefault(_drawStartSence);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Sprite = Laya.Sprite;
var Stage = Laya.Stage;
var Browser = Laya.Browser;
var Handler = Laya.Handler;
var WebGL = Laya.WebGL;
var Event = Laya.Event;
var Loader = Laya.Loader;
var Tween = Laya.Tween;
var Ease = Laya.Ease;
var SoundManager = Laya.SoundManager;
var Text = Laya.Text;
var GlowFilter = Laya.GlowFilter;
var TimeLine = Laya.TimeLine;

var DrawHome = function () {
    function DrawHome() {
        _classCallCheck(this, DrawHome);

        this.realLevel = "";
        this.gameLevel = "";
        this.GAME = "";
        this.StartSence = "";
        this.isHome = true;

        // 绘制有关的属性
        this.game_bg = "";
        this.title = "";
        this.card_bg = "";
        this.num = "";
        this.left = "";
        this.right = "";
        this.left_more = "";
        this.right_more = "";
        this.level_text = "";
        this.progress_bg = "";
        this.progress_active = "";

        // 动画
        this.timeLine = "";
        this.timeLine2 = "";

        // 运行
        Laya.stage.bgColor = "#ded6df";
        this.init();
    }

    _createClass(DrawHome, [{
        key: "init",
        value: function init() {
            // 
            Laya.LocalStorage.setItem("realLevel", 0);
            if (!Laya.LocalStorage.getItem("realLevel")) {
                Laya.LocalStorage.setItem("realLevel", 0);
                this.realLevel = 0;
            } else {
                this.realLevel = Number(Laya.LocalStorage.getItem("realLevel"));
            }
            this.drawBg();
            this.drawCard();
            this.drawBottomBtn();
            this.drawTopProgress();
            $ob.on('nextGame', [this.goNextGame, this]);
        }
        /**
         * 绘制画布
         */

        // 绘制背景

    }, {
        key: "drawBg",
        value: function drawBg() {
            this.game_bg = new Laya.Sprite();
            this.game_bg.size(750, 1334);
            Laya.stage.addChild(this.game_bg);
            this.game_bg.loadImage(_GameConfig2.default.host + 'assets/images/home_bg.png');
            // 绘制标题
        }
        // 绘制中心卡片

    }, {
        key: "drawCard",
        value: function drawCard() {
            // 绘制背景
            this.card_bg = new Laya.Sprite();
            this.card_bg.size(615, 817);
            this.card_bg.pos(375, 540);
            this.card_bg.pivot(307, 408);
            Laya.stage.addChild(this.card_bg);
            this.card_bg.loadImage(_GameConfig2.default.host + 'assets/images/card-bg.png');
            this.card_bg.on(Event.CLICK, this, this.startGame);

            // 绘制文字
            this.num = new Text();
            this.num.color = "#f9dfc7";
            this.num.font = "Impact";
            this.num.fontSize = 150;
            this.num.width = 590;
            this.num.pivot(245, 0);
            this.num.x = 325;
            this.num.y = 595;
            this.num.align = "center";
            this.num.alpha = 0.8;
            // this.num.zOrder=1;
            Laya.stage.addChild(this.num);
            this.gameLevel = this.gameLevel == '' ? this.realLevel : this.gameLevel;
            // console.log(this.gameLevel, gameData[this.gameLevel])
            this.num.text = _gameData.gameData[this.gameLevel].num;
            // 放大缩小动画
            this.timeLine = new TimeLine();
            this.timeLine.addLabel("big", 0).to(this.card_bg, { scaleX: 1.07, scaleY: 1.05 }, 1500, null, 0).addLabel("small", 0).to(this.card_bg, { scaleX: 1, scaleY: 1 }, 1500, null, 0);
            this.timeLine.play(0, true);
            this.timeLine2 = new TimeLine();
            this.timeLine2.addLabel("big", 0).to(this.num, { scaleX: 1.07, scaleY: 1.05 }, 1500, null, 0).addLabel("small", 0).to(this.num, { scaleX: 1, scaleY: 1 }, 1500, null, 0);
            this.timeLine2.play(0, true);
            // this.drawSideCard();
        }
        // 绘制顶部进度条

    }, {
        key: "drawTopProgress",
        value: function drawTopProgress() {
            this.progress_bg = new Sprite();
            this.progress_bg.graphics.drawRect(0, 0, 750, 30, '#a984ec');
            this.progress_bg.alpha = 0.5;
            Laya.stage.addChild(this.progress_bg);

            this.level_text = new Text();
            this.level_text.color = "ddc8fe";
            this.level_text.fontSize = 40;
            this.level_text.width = 750;
            this.level_text.x = 0;
            this.level_text.y = 80;
            this.level_text.align = "center";
            this.level_text.text = "- " + (this.gameLevel + 1) + "/" + _gameData.gameData.length + " -";
            Laya.stage.addChild(this.level_text);
        }
        //绘制底部按钮

    }, {
        key: "drawBottomBtn",
        value: function drawBottomBtn() {
            this.left_more = new Sprite();
            Laya.stage.addChild(this.left_more);
            this.left_more.loadImage(_GameConfig2.default.host + 'assets/images/home_left_more.png');
            this.left_more.size(122, 91);
            this.left_more.pos(94, 975);

            this.left = new Sprite();
            Laya.stage.addChild(this.left);
            this.left.loadImage(_GameConfig2.default.host + 'assets/images/home_left.png');
            this.left.size(122, 91);
            this.left.pos(241, 975);
            this.left.name = "left";
            this.left.on(Event.CLICK, this, this.changeLevel);

            this.right = new Sprite();
            Laya.stage.addChild(this.right);
            this.right.loadImage(_GameConfig2.default.host + 'assets/images/home_right.png');
            this.right.size(122, 91);
            this.right.pos(388, 975);
            this.right.on(Event.CLICK, this, this.changeLevel);

            this.right_more = new Sprite();
            Laya.stage.addChild(this.right_more);
            this.right_more.loadImage(_GameConfig2.default.host + 'assets/images/home_right_more.png');
            this.right_more.size(122, 91);
            this.right_more.pos(535, 975);
        }
        /**
         * 逻辑处理
         */
        // 进入关卡

    }, {
        key: "startGame",
        value: function startGame(params) {
            if (!this.isHome) {
                return;
            }
            if (this.gameLevel == 0) {
                // 0关 初始场景
                this.StartSence ? this.StartSence.showStartSence() : this.StartSence = new _drawStartSence2.default();
                // Object.defineProperty(this.StartSence,)
            } else if (this.gameLevel == _gameData.gameData.length - 1) {
                // 1关 结束场景
            } else {
                // 正常关卡
                Laya.LocalStorage.setItem('gameLevel', this.gameLevel);
                if (this.GAME) {
                    this.GAME.startGame();
                } else {
                    this.GAME = new _drawPlace2.default();
                    console.log(this.GAME);
                    // this.GAME.level=6;
                    // console.log(this.GAME);
                }
            }
            // this.isHome = false
            SoundManager.playSound(_GameConfig2.default.host + "assets/music/dong.mp3", 1, null, null, 13);
        }
        // 切换关卡

    }, {
        key: "changeLevel",
        value: function changeLevel(e) {
            // console.log(Laya.stage.mouseX)
            var x = Laya.stage.mouseX;
            if (x < 240) {
                // this.gameLevel--;
                // this.num.text = gameData[this.gameLevel].num
            } else if (x < 380) {
                if (this.gameLevel - 1 < 0) return;
                this.gameLevel--;
                this.num.text = _gameData.gameData[this.gameLevel].num;
            } else if (x < 530) {
                if (this.gameLevel + 1 >= _gameData.gameData.length) return;
                this.gameLevel++;
                this.num.text = _gameData.gameData[this.gameLevel].num;
            } else {
                // this.gameLevel++;
                // this.num.text = gameData[this.gameLevel].num
            }

            this.level_text.text = "- " + (this.gameLevel + 1) + "/" + _gameData.gameData.length + " -";
            if (this.gameLevel > this.realLevel) {
                this.card_bg.loadImage(_GameConfig2.default.host + 'assets/images/card-bg-lock.png');
                this.num.alpha = 0.8;
                this.timeLine.pause();
                this.timeLine2.pause();
            } else {
                this.card_bg.loadImage(_GameConfig2.default.host + 'assets/images/card-bg.png');
                this.num.alpha = 1;
                this.timeLine.play(0, true);
                this.timeLine2.play(0, true);
            }
            // 变换效果
            var timeLine2 = new TimeLine();
            timeLine2.addLabel("big", 0).to(this.num, { scaleX: 1.06, scaleY: 1.05, alpha: 0.5 }, 100, null, 0).addLabel("small", 0).to(this.num, { scaleX: 1, scaleY: 1, alpha: 1 }, 100, null, 0);
            timeLine2.play(0, false);
        }
        // 进入下一关

    }, {
        key: "goNextGame",
        value: function goNextGame() {
            var _this = this;

            // changeLevel(530);
            if (this.gameLevel + 1 >= _gameData.gameData.length) return;
            this.gameLevel++;

            // 说明是刚解锁新的关卡需要一个转换的动画
            if (this.gameLevel > this.realLevel) {
                setTimeout(function () {
                    _this.level_text.text = "- " + (_this.gameLevel + 1) + "/" + _gameData.gameData.length + " -";
                    _this.num.text = _gameData.gameData[_this.gameLevel].num;
                    _this.card_bg.loadImage(_GameConfig2.default.host + 'assets/images/card-bg.png');
                    _this.num.alpha = 0.8;
                    _this.timeLine.play(0, true);
                    _this.timeLine2.play(0, true);
                }, 500);
            } else {}
            // this.card_bg.loadImage(GameConfig.host + 'assets/images/card-bg.png')
            // this.num.alpha = 1
            // this.timeLine.play(0, true)
            // this.timeLine2.play(0, true)

            // 变换效果
            // var timeLine2 = new TimeLine();
            // timeLine2.addLabel("big", 0).to(this.num, { scaleX: 1.06, scaleY: 1.05, alpha: 0.5 }, 100, null, 0)
            //     .addLabel("small", 0).to(this.num, { scaleX: 1, scaleY: 1, alpha: 1 }, 100, null, 0)
            // timeLine2.play(0, false);
        }
    }]);

    return DrawHome;
}();

exports.default = DrawHome;

},{"../GameConfig":1,"../lib/gameData":6,"../lib/graphics":7,"./drawPlace":4,"./drawStartSence":5}],4:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // 创建主游戏场景


var _graphics = require("../lib/graphics");

var _graphics2 = _interopRequireDefault(_graphics);

var _GameConfig = require("../GameConfig");

var _GameConfig2 = _interopRequireDefault(_GameConfig);

var _gameData = require("../lib/gameData");

var _drawHome = require("./drawHome");

var _drawHome2 = _interopRequireDefault(_drawHome);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

console.log(_GameConfig2.default);

var Sprite = Laya.Sprite;
var Stage = Laya.Stage;
var Browser = Laya.Browser;
var Handler = Laya.Handler;
var WebGL = Laya.WebGL;
var Event = Laya.Event;
var Loader = Laya.Loader;
var Tween = Laya.Tween;
var Ease = Laya.Ease;
var SoundManager = Laya.SoundManager;

var DrawGame = function () {
    function DrawGame() {
        _classCallCheck(this, DrawGame);

        // 绘图相关的属性
        this.x = 40;
        this.y = 250;
        this.col = 3;
        this.row = 3;
        this.gab = 20;
        this.tWidth = 750 - 2 * this.x; //桌面宽度
        this.iWidth = (this.tWidth - (this.row + 1) * this.gab) / this.row; //单个的高度
        this.tHeight = this.iWidth * this.col + (this.col + 1) * this.gab;
        this.itemsSprite = []; //存放宫格的Sprite
        // 画布
        this.game_bg = "";
        this.table_bg = "";
        this.topSp = "";
        this.refreshSp = "";
        this.returnSp = "";
        this.numScreenSp = "";
        this.failBgSp = "";
        this.failMaskSp = "";
        this.failRefresh = "";
        this.failReturn = "";

        // 游戏数据
        this.level = "";
        this.numData = "";
        this.arr = []; //宫格的实时数据
        this.pNow = [0, 0];
        this.frontPostion = [];
        this.isGaming = false;

        // 游戏交互
        this.startP = [];
        // 运行
        this.init();
    }
    // 首次注册


    _createClass(DrawGame, [{
        key: "init",
        value: function init() {
            // console.log('执行init');
            this.drawPlace();
            this.refreshTable();
            this.drawTopButton();
            this.startGame();
        }

        // 开启游戏

    }, {
        key: "startGame",
        value: function startGame() {
            this.game_bg.zOrder = 1;
            this.table_bg.zOrder = 2;
            this.topSp.zOrder = 3;
            this.refreshSp.zOrder = 3;
            this.returnSp.zOrder = 3;
            this.numScreenSp.zOrder = 3;

            // 开启比赛
            this.isGaming = true;
            this.refreshTable();
            for (var i = 0; i < this.col; i++) {
                this.itemsSprite[i] = [];
                for (var j = 0; j < this.row; j++) {
                    // 创建宫格舞台
                    this.itemsSprite[i][j] = new Sprite();
                    Laya.stage.addChild(this.itemsSprite[i][j]);
                    this.itemsSprite[i][j].zOrder = 3;
                }
            }
            this.drawTable(true);
            // 调试
            // this.showFail()
        }

        /**
         * 绘制画布
         */

        // 画背景图

    }, {
        key: "drawPlace",
        value: function drawPlace() {
            // 画游戏的背景布
            this.game_bg = new Laya.Sprite();
            this.game_bg.size(750, 1334);
            Laya.stage.addChild(this.game_bg);
            this.game_bg.loadImage(_GameConfig2.default.host + 'assets/images/game_bg1.png');
            //添加键盘抬起事件
            Laya.stage.on(Event.KEY_UP, this, this.onKeyUp);
        }
        // 画背景色

    }, {
        key: "drawTableBg",
        value: function drawTableBg() {
            // 画中心的方块组背景
            if (this.table_bg) {
                this.table_bg.graphics.clear();
            } else {
                this.table_bg = new Laya.Sprite();
                this.table_bg.size(this.tWidth, this.tHeight * 2); //一定要设置size才能监控事件 
                Laya.stage.addChild(this.table_bg);
                this.table_bg.alpha = 0.2;
                this.table_bg.on(Event.MOUSE_DOWN, this, this.onMouseDown);
                this.table_bg.on(Event.MOUSE_UP, this, this.onMouseUp);
            }
            _graphics2.default.drawRoundedRectangle(this.table_bg, this.x, this.y, this.tWidth, this.tHeight, this.gab, '#2f0048');
        }
        // 画顶部按钮

    }, {
        key: "drawTopButton",
        value: function drawTopButton() {
            this.topSp = new Sprite();
            Laya.stage.addChild(this.topSp);
            // this.topSp.graphics.drawRect(0, 0, 142, 106, "#4d2f8a");
            // 绘制刷新按钮
            this.refreshSp = new Sprite();
            Laya.stage.addChild(this.refreshSp);
            this.refresh;
            this.refreshSp.loadImage(_GameConfig2.default.host + 'assets/images/refresh_btn.png');
            this.refreshSp.pos(578, 30);
            this.refreshSp.size(142, 106);
            this.refreshSp.on('click', this, this.refresh);
            // this.refreshSp.graphics.destroy()
            // 绘制数字显示屏
            this.numScreenSp = new Sprite();
            Laya.stage.addChild(this.numScreenSp);
            this.numScreenSp.loadImage(_GameConfig2.default.host + 'assets/images/top_num_screen.png');
            this.numScreenSp.size(330, 130);
            this.numScreenSp.pos(210, 20);

            // 绘制返回按钮
            this.returnSp = new Sprite();
            Laya.stage.addChild(this.returnSp);
            this.returnSp.loadImage(_GameConfig2.default.host + 'assets/images/return_btn.png');
            this.returnSp.pos(30, 30);
            this.returnSp.size(142, 106);
            this.returnSp.on('click', this, this.returnHome);
        }
        // 画宫格

    }, {
        key: "drawTable",
        value: function drawTable() {
            var _this = this;

            var first = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

            // 如果是第一次画宫格
            if (first) {
                for (var i = 0; i < this.col; i++) {
                    for (var j = 0; j < this.row; j++) {
                        var x = this.x + j * (this.iWidth + this.gab) + this.gab,
                            y = this.y + i * (this.iWidth + this.gab) + this.gab;
                        this.drawItemBlock(i, j);
                        this.itemsSprite[i][j].pos(x + this.iWidth * 0.5, y + this.iWidth * 0.5);
                        this.itemsSprite[i][j].size(this.iWidth, this.iWidth);
                        // 动画
                        this.itemsSprite[i][j].alpha = 0;
                        Tween.from(this.itemsSprite[i][j], {
                            // y:10
                            scaleY: 0,
                            scaleX: 0,
                            pivotX: this.iWidth * 0.5,

                            pivotY: this.iWidth * 0.5,
                            alpha: 0
                        }, 250, Ease.circInOut, null, 200);
                        Tween.to(this.itemsSprite[i][j], {
                            scaleY: 1,
                            scaleX: 1,
                            pivotX: this.iWidth * 0.5,
                            pivotY: this.iWidth * 0.5,
                            alpha: 1
                        }, 250, Ease.circInOut, null, 200);
                    }
                }
            } else {
                this.drawItemBlock(this.pNow[1], this.pNow[0]);
                this.drawItemBlock(this.frontPostion[1], this.frontPostion[0]);
            }
            // 格式化棋盘数据
            Tween.clearAll(this.itemsSprite);

            setTimeout(function () {
                _this.judgeSuccess();
            }, 100);
        }
        // 根据坐标绘制相应的色块

    }, {
        key: "drawItemBlock",
        value: function drawItemBlock(i, j) {
            var url = void 0;
            if (j == this.pNow[0] && i == this.pNow[1]) {
                url = this.arr[i][j].num == '0' ? _GameConfig2.default.host + 'assets/images/item-0-active.png' : _GameConfig2.default.host + 'assets/images/item-1-active.png';
            } else if (this.arr[i][j].isUsed) {
                url = _GameConfig2.default.host + 'assets/images/item-1-lock.png';
            } else {
                url = this.arr[i][j].num == '0' ? _GameConfig2.default.host + 'assets/images/item-0.png' : _GameConfig2.default.host + 'assets/images/item-1.png';
            }
            this.itemsSprite[i][j].graphics.clear();
            this.itemsSprite[i][j].loadImage(url);
        }
        /**
         * 键盘事件
         */

    }, {
        key: "onKeyUp",
        value: function onKeyUp(e) {
            // delete keyDownList[e["keyCode"]];
            var direction = "";
            switch (e.keyCode) {
                case 37:
                    direction = 'left';break;
                case 38:
                    direction = 'top';break;
                case 39:
                    direction = 'right';break;
                case 40:
                    direction = 'down';break;
            }
            console.log('direction is ' + direction);
            if (direction) this.moveBlock(direction);
        }

        /**
         * 手机滑动事件
         */

    }, {
        key: "onMouseDown",
        value: function onMouseDown(params) {
            this.startP = [Laya.stage.mouseX, Laya.stage.mouseY];
        }
    }, {
        key: "onMouseUp",
        value: function onMouseUp() {
            var endP = [Laya.stage.mouseX, Laya.stage.mouseY];
            var direction = "";
            var moveX = endP[0] - this.startP[0];
            var moveY = endP[1] - this.startP[1];
            if (Math.abs(moveX) > Math.abs(moveY)) {
                if (Math.abs(moveX) > 80) direction = moveX > 0 ? 'right' : 'left';
            } else {
                if (Math.abs(moveY) > 80) direction = moveY > 0 ? 'down' : 'top';
            }
            console.log(direction, moveX, moveY);
            if (direction) this.moveBlock(direction);
        }
        /**
         * 逻辑处理
         */

        // 格式化棋盘

    }, {
        key: "refreshTable",
        value: function refreshTable() {
            // console.log('执行了！！！')
            this.pNow = [0, 0];
            this.level = Laya.LocalStorage.getItem('gameLevel');
            // console.log(this.level)
            this.numData = (0, _gameData.getNum)(this.level).items;
            this.col = (0, _gameData.getNum)(this.level).col;
            this.row = (0, _gameData.getNum)(this.level).row;
            this.gab = 20 + (4 - this.row) * 5;
            this.tWidth = 750 - 2 * this.x; //桌面宽度
            this.iWidth = (this.tWidth - (this.row + 1) * this.gab) / this.row; //单个的高度
            this.tHeight = this.iWidth * this.col - 1 + (this.col + 1) * this.gab;
            // console.log(this.tWidth, this.tHeight)
            for (var i = 0; i < this.col; i++) {
                this.arr[i] = [];
                for (var j = 0; j < this.row; j++) {
                    // this.arr[i][j] = this.num.slice(i * this.row + j, i * this.row + j + 1);
                    this.arr[i][j] = this.numData[i * this.row + j];
                }
            }
            this.drawTableBg();
        }
    }, {
        key: "moveBlock",
        value: function moveBlock(direction) {
            if (!this.isGaming) return;

            var b = this.pNow[0],
                a = this.pNow[1];

            // this.arr[a][b] = this.arr[a][b] == "1" ? "0" : "1";
            if (direction == "down") {
                if (this.pNow[1] >= this.col - 1) {
                    return;
                }
                this.pNow[1]++;
            } else if (direction == "top") {
                if (this.pNow[1] <= 0) {
                    return;
                }
                this.pNow[1]--;
            } else if (direction == "right") {
                if (this.pNow[0] >= this.row - 1) {
                    return;
                }
                this.pNow[0]++;
            } else if (direction == "left") {
                if (this.pNow[0] <= 0) {
                    return;
                }
                this.pNow[0]--;
            }

            var j = this.pNow[0],
                i = this.pNow[1];
            if (this.arr[i][j].isUsed) {
                this.pNow[0] = b;
                this.pNow[1] = a;
                return;
            }
            this.frontPostion[0] = b;
            this.frontPostion[1] = a;

            this.arr[i][j].num = this.arr[i][j].num == "1" ? "0" : "1";
            this.arr[i][j].isUsed = this.arr[i][j].num == "1" ? true : false;

            this.drawTable();
            // 播放滑动音效

            SoundManager.setSoundVolume(0.5);
            SoundManager.playSound("assets/music/dong.mp3", 1, null, null, 13);
        }
        // 判断是否失败以及成功

    }, {
        key: "judgeSuccess",
        value: function judgeSuccess() {
            // 判断是否赢了的逻辑
            var isWin = this.arr.every(function (items) {
                return items.every(function (item) {
                    return item.num == '1';
                });
            });
            if (isWin) {
                $ob.emit('nextGame');
                Laya.LocalStorage.setItem('realLevel', this.level++);
                this.clearPlaceAll();
            } else {
                // 验证是否失败
                var j = this.pNow[0],
                    i = this.pNow[1];
                if (i + 1 < this.col && !this.arr[i + 1][j].isUsed || j + 1 < this.row && !this.arr[i][j + 1].isUsed || i - 1 >= 0 && !this.arr[i - 1][j].isUsed || j - 1 >= 0 && !this.arr[i][j - 1].isUsed) {
                    return;
                } else {
                    // alert('你输了！');
                    this.showFail();
                    // this.refresh();
                }
            }
        }
        // 重置游戏

    }, {
        key: "refresh",
        value: function refresh() {
            this.closeAlert();
            this.refreshTable();
            this.drawTable(true);
        }
        // 返回 Home

    }, {
        key: "returnHome",
        value: function returnHome() {
            this.clearPlaceAll();
            // new DrawHome()
        }
        // 清除所有画布的东西

    }, {
        key: "clearPlaceAll",
        value: function clearPlaceAll() {
            // 设置层级下沉
            this.game_bg.zOrder = -1;
            this.table_bg.zOrder = -3;
            this.topSp.zOrder = -2;
            this.refreshSp.zOrder = -2;
            this.returnSp.zOrder = -2;
            this.numScreenSp.zOrder = -2;
            if (this.failBgSp) {
                this.failBgSp.zOrder = -2;
                this.failMaskSp.zOrder = -2;
                this.failRefresh.zOrder = -2;
                this.failReturn.zOrder = -2;
            }

            for (var i = 0; i < this.col; i++) {
                for (var j = 0; j < this.row; j++) {
                    this.itemsSprite[i][j].zOrder = -2;
                }
            }
            // 事件监听失效
            this.isGaming = false;
        }
        // 输了的逻辑

    }, {
        key: "showFail",
        value: function showFail() {
            this.failMaskSp = new Sprite();
            // this.failBgSp.pos(50, 200);
            this.failMaskSp.size(750, Browser.height);
            this.failMaskSp.loadImage(_GameConfig2.default.host + 'assets/images/alert_fail_mask.png');
            this.failMaskSp.zOrder = 4;
            this.failMaskSp.alpha = 0;
            Laya.stage.addChild(this.failMaskSp);
            Tween.to(this.failMaskSp, {
                alpha: 1
            }, 250, Ease.linearIn, null, 200);

            // 画卡片背景
            this.failBgSp = new Sprite();
            this.failBgSp.pos(50, -550);
            this.failBgSp.size(655, 558);
            this.failBgSp.zOrder = 5;
            Laya.stage.addChild(this.failBgSp);
            this.failBgSp.loadImage(_GameConfig2.default.host + 'assets/images/alert_fail_bg.png');
            // 进入动画
            Tween.to(this.failBgSp, {
                y: 250
            }, 550, Ease.bounceOut, null, 200);

            // 画返回按钮
            this.failReturn = new Sprite();
            this.failReturn.pos(900, 480);
            this.failReturn.size(170, 126);
            this.failReturn.zOrder = 6;
            Laya.stage.addChild(this.failReturn);
            this.failReturn.loadImage(_GameConfig2.default.host + 'assets/images/return_btn.png');
            this.failReturn.on('click', this, this.returnHome);
            Tween.to(this.failReturn, {
                x: 500
            }, 550, Ease.bounceOut, null, 200);
            // 画重新按钮
            this.failRefresh = new Sprite();
            this.failRefresh.pos(900, 650);
            this.failRefresh.size(170, 126);
            this.failRefresh.zOrder = 6;
            Laya.stage.addChild(this.failRefresh);
            this.failRefresh.loadImage(_GameConfig2.default.host + 'assets/images/refresh_btn.png');
            this.failRefresh.on('click', this, this.refresh);
            Tween.to(this.failRefresh, {
                x: 500
            }, 550, Ease.strongInOut, null, 200);
        }
        //关闭弹窗

    }, {
        key: "closeAlert",
        value: function closeAlert() {
            if (this.failBgSp) {
                this.failBgSp.zOrder = -2;
                this.failMaskSp.zOrder = -2;
                this.failRefresh.zOrder = -2;
                this.failReturn.zOrder = -2;
            }
        }
    }]);

    return DrawGame;
}();

exports.default = DrawGame;

},{"../GameConfig":1,"../lib/gameData":6,"../lib/graphics":7,"./drawHome":3}],5:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // 主页相关逻辑以及总入口


var _graphics = require("../lib/graphics");

var _graphics2 = _interopRequireDefault(_graphics);

var _GameConfig = require("../GameConfig");

var _GameConfig2 = _interopRequireDefault(_GameConfig);

var _gameData = require("../lib/gameData");

var _drawPlace = require("./drawPlace");

var _drawPlace2 = _interopRequireDefault(_drawPlace);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Sprite = Laya.Sprite;
var Stage = Laya.Stage;
var Browser = Laya.Browser;
var Handler = Laya.Handler;
var WebGL = Laya.WebGL;
var Event = Laya.Event;
var Loader = Laya.Loader;
var Tween = Laya.Tween;
var Ease = Laya.Ease;
var SoundManager = Laya.SoundManager;
var Text = Laya.Text;
var GlowFilter = Laya.GlowFilter;
var TimeLine = Laya.TimeLine;

var DrawHome = function () {
    function DrawHome() {
        _classCallCheck(this, DrawHome);

        // sprite
        this.sence_bg = "";
        this.first_text = "";
        this.next_btn = "";

        this.textArr = ["十八世纪\n德国数理大师莱布尼兹发现了二进制", "这个由0和1组成的数字电路\n打开了一个奇幻而精分的世界", "由于特殊的算法\n在这个二进制世界里", "一个简单的小数会被编译成无限的0和1", "而这些无限的0和1\n就是你要面临的每重关卡", "记住,你要不留余力的把数字变成1", "究竟谁？\n才是主宰数字的主人", "FROM ZERO", "TO ONE"];
        this.isShowing = false;

        this.init();
    }

    _createClass(DrawHome, [{
        key: "init",
        value: function init() {
            // Laya.LocalStorage.setItem("item", str);
            this.showStartSence();
            // Laya.LocalStorage.setItem("realLevel", 0.02);
        }

        /**
         * 绘制画布
         */

        // 绘制背景

    }, {
        key: "drawBg",
        value: function drawBg() {
            var _this = this;

            // 开始的场景
            this.sence_bg = new Laya.Sprite();
            this.sence_bg.size(750, 1334);
            Laya.stage.addChild(this.sence_bg);
            this.sence_bg.loadImage(_GameConfig2.default.host + 'assets/images/sence-0_bg.png');
            this.sence_bg.alpha = 0;
            Tween.to(this.sence_bg, {
                alpha: 1
            }, 500, Ease.linearIn, null, 200);
            // 文字的动画过场
            this.drawText(this.textArr[0]);
            var i = 1;
            var textInterval = setInterval(function () {
                console.log(i);
                _this.drawText(_this.textArr[i], i);
                i++;
                if (i > _this.textArr.length - 1) clearInterval(textInterval);
            }, 5000);
        }
        // 绘制顶部文字

    }, {
        key: "drawText",
        value: function drawText(textContent, index) {
            if (!this.first_text) {
                this.first_text = new Text();
                this.first_text.color = "#fff";
                this.first_text.fontSize = 35;
                this.first_text.width = 600;
                this.first_text.align = "center";
                this.first_text.leading = 20;
                this.first_text.x = 75;
                this.first_text.y = 200;
                this.first_text.alpha = 0;
                Laya.stage.addChild(this.first_text);
            }
            this.first_text.text = textContent;
            // 如果是最后一个则不消失且显示下一步按钮
            if (index == this.textArr.length - 1) {
                var timeLine = new TimeLine();
                timeLine.addLabel("show", 0).to(this.first_text, { alpha: 1 }, 1000, null, 1000);
                timeLine.play(0, false);
                this.drawNextBtn();
            } else {
                var timeLine = new TimeLine();
                timeLine.addLabel("show", 0).to(this.first_text, { alpha: 1 }, 1000, null, 2000).addLabel("hidden", 0).to(this.first_text, { alpha: 0 }, 1000, null, 1000);
                timeLine.play(0, false);
            }
        }
        // 绘制下一部按钮

    }, {
        key: "drawNextBtn",
        value: function drawNextBtn() {
            this.next_btn = new Sprite();
            this.next_btn.pos(304, 900);
            this.next_btn.size(142, 106);
            Laya.stage.addChild(this.next_btn);
            this.next_btn.loadImage(_GameConfig2.default.host + 'assets/images/next_btn.png');
            this.next_btn.on(Event.CLICK, this, this.clickNext);
            this.next_btn.zOrder = 2;
            this.next_btn.alpha = 0;
            // 缓慢显示
            var timeLine = new TimeLine();
            timeLine.addLabel("show", 0).to(this.next_btn, { alpha: 1 }, 1000, null, 1000);
            timeLine.play(0, false);
        }
        // 点击进入下一关

    }, {
        key: "clickNext",
        value: function clickNext() {
            this.sence_bg.zOrder = -2;
            this.first_text.zOrder = -1;
            this.next_btn.zOrder = -1;
            this.isShowing = false;
            SoundManager.stopAllSound();
            $ob.emit('nextGame', 1);
        }

        //显示0关

    }, {
        key: "showStartSence",
        value: function showStartSence() {
            if (this.isShowing) return;

            this.drawBg();
            SoundManager.setSoundVolume(0.1);
            SoundManager.playSound(_GameConfig2.default.host + "assets/music/troughts.mp3", 1, null, null, 13);
            // this.drawNextBtn()

            this.sence_bg.zOrder = 1;
            this.first_text.zOrder = 2;
            this.isShowing = true;
        }

        /**
         * 逻辑处理
         */

    }]);

    return DrawHome;
}();

exports.default = DrawHome;

},{"../GameConfig":1,"../lib/gameData":6,"../lib/graphics":7,"./drawPlace":4}],6:[function(require,module,exports){
'use strict';

var gameData = [{
    num: 0
}, {
    num: 0.02
}, {
    num: 0.2
}, {
    num: 0.3
}, {
    num: 0.44
}, {
    num: 0.52
}, {
    num: 0.66
}, {
    num: 0.7
}, {
    num: 0.77
}, {
    num: 0.88
}, {
    num: 0.9
}, {
    num: 0.99
}];

function getNum(level) {
    // console.log(level)
    // console.log(gameData[Number(level)])
    var num = gameData[Number(level)].num;
    var arr = toBinaryLists(num);
    arr.row = getRow(num);
    arr.col = getCol(num);
    arr.items = arr.map(function (item) {
        return {
            num: item,
            isUsed: false
        };
    });
    return arr;
}

function getRow(num) {
    if (num < 0.2) return 3;else if (num < 0.2) return 3;else if (num < 0.4) return 4;else if (num < 0.5) return 4;else if (num < 0.6) return 4;else if (num < 0.7) return 5;
    // else if (num < 0.95) return 6;
    else return 7;
}

function getCol(num) {
    if (num < 0.1) return 2;else if (num < 0.2) return 2;else if (num < 0.25) return 3;else if (num < 0.35) return 4;else if (num < 0.5) return 4;else if (num < 0.6) return 4;else if (num < 0.7) return 5;
    // else if (num < 0.95) return 7;
    else return 6;
}

function toBinaryLists(num) {
    if (typeof num != 'number') {
        num = Number(num);
    }
    var binary = num.toString(2).split('.')[1];
    return binary.split('');
}

module.exports = {
    getNum: getNum,
    // getGameData: getGameData
    gameData: gameData
};

},{}],7:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
// 封装各种形状
exports.default = {
    /**
     * @param sp Sprite实例
     * @param x 起始x坐标
     * @param y 起始y坐标
     * @param width 总长
     * @param height 总高
     * @param r 圆角半径
     * @param options 配置项
     */
    drawRoundedRectangle: function drawRoundedRectangle(sp, x, y, width, height, r, fill) {
        // console.log(width, height)
        var relWidth = width - 2 * r;
        var relHeight = height - 2 * r;
        sp.graphics.drawPath(x, y, [["moveTo", r, 0], ["lineTo", width - r, 0], ["arcTo", width, 0, width, r, r], ["lineTo", width, height - r], ["arcTo", width, height, width - r, height, r], ["lineTo", r, height], ["arcTo", 0, height, 0, height - r, r], ["lineTo", 0, r], ["arcTo", 0, 0, r, 0, r], ["closePath"]], {
            fillStyle: fill || '#ff0000'
        });
    }
};

},{}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
